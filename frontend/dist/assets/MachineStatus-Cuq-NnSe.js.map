{"version":3,"file":"MachineStatus-Cuq-NnSe.js","sources":["../../src/pages/MachineStatus.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { motion } from 'framer-motion';\nimport {\n  ArrowLeftIcon,\n  CheckCircleIcon,\n  XCircleIcon,\n  ClockIcon,\n  WrenchScrewdriverIcon,\n  ExclamationTriangleIcon,\n} from '@heroicons/react/24/outline';\nimport { toast } from 'react-hot-toast';\nimport { useAuth } from '../hooks/useAuth';\nimport { useSocket } from '../hooks/useSocket';\nimport api from '../services/api';\n\nconst MachineStatus = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { socket } = useSocket();\n  const [machine, setMachine] = useState(null);\n  \n  // Mapear status do backend para o frontend\n  const statusMap = {\n    'FUNCIONANDO': 'Funcionando',\n    'PARADA': 'Parada',\n    'MANUTENCAO': 'Manuten√ß√£o',\n    'FORA_DE_TURNO': 'Fora de Turno',\n    'OFF_SHIFT': 'Fora de Turno'\n  };\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newStatus, setNewStatus] = useState('');\n  const [statusReason, setStatusReason] = useState('');\n  const [statusNotes, setStatusNotes] = useState('');\n  const [isUpdatingStatus, setIsUpdatingStatus] = useState(false);\n  const [statusHistory, setStatusHistory] = useState([]);\n\n  useEffect(() => {\n    fetchMachineData();\n    fetchStatusHistory();\n  }, [id]);\n\n  // Escutar eventos WebSocket para atualiza√ß√µes em tempo real\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleMachineStatusChanged = (data) => {\n      console.log('üîÑ Status alterado via WebSocket na p√°gina:', data);\n      if (data.machineId === parseInt(id)) {\n        setMachine(prev => prev ? {\n          ...prev,\n          status: data.newStatus || data.status,\n          lastUpdatedBy: data.user,\n          updatedAt: new Date().toISOString()\n        } : prev);\n        // Atualizar hist√≥rico tamb√©m\n        fetchStatusHistory();\n      }\n    };\n\n    const handleOperationStarted = (data) => {\n      if (data.machineId === parseInt(id)) {\n        console.log('üöÄ Opera√ß√£o iniciada via WebSocket:', data);\n        fetchMachineData();\n        fetchStatusHistory();\n      }\n    };\n\n    const handleOperationEnded = (data) => {\n      if (data.machineId === parseInt(id)) {\n        console.log('üõë Opera√ß√£o finalizada via WebSocket:', data);\n        fetchMachineData();\n        fetchStatusHistory();\n      }\n    };\n\n    socket.on('machine:status:changed', handleMachineStatusChanged);\n    socket.on('machine:operation-started', handleOperationStarted);\n    socket.on('machine:operation-ended', handleOperationEnded);\n\n    return () => {\n      socket.off('machine:status:changed', handleMachineStatusChanged);\n      socket.off('machine:operation-started', handleOperationStarted);\n      socket.off('machine:operation-ended', handleOperationEnded);\n    };\n  }, [socket, id]);\n\n  const fetchMachineData = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get(`/machines/${id}`);\n      setMachine(response.data);\n      setNewStatus(response.data.status);\n    } catch (err) {\n      console.error('Erro ao carregar dados da m√°quina:', err);\n      setError('Erro ao carregar dados da m√°quina');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchStatusHistory = async () => {\n    try {\n      const response = await api.get(`/machines/${id}/status-history`);\n      setStatusHistory(response.data);\n    } catch (err) {\n      console.error('Erro ao carregar hist√≥rico de status:', err);\n    }\n  };\n\n  const handleStatusUpdate = async (e) => {\n    e.preventDefault();\n    if (!newStatus) return;\n\n    // Mapear status do frontend para o backend\n    const statusMap = {\n      'Funcionando': 'FUNCIONANDO',\n      'Parada': 'PARADA',\n      'Manuten√ß√£o': 'MANUTENCAO',\n      'Fora de Turno': 'FORA_DE_TURNO'\n    };\n\n    setIsUpdatingStatus(true);\n    try {\n      await api.put(`/machines/${id}/status`, {\n        status: statusMap[newStatus] || newStatus,\n        reason: statusReason,\n        notes: statusNotes,\n      });\n\n      // Atualizar dados da m√°quina\n      await fetchMachineData();\n      await fetchStatusHistory();\n      \n      // Limpar campos\n      setStatusReason('');\n      setStatusNotes('');\n      \n      // Mostrar mensagem de sucesso\n      toast.success('Status atualizado com sucesso!');\n    } catch (err) {\n      console.error('Erro ao atualizar status:', err);\n      setError('Erro ao atualizar status da m√°quina');\n    } finally {\n      setIsUpdatingStatus(false);\n    }\n  };\n\n  const getStatusConfig = (status) => {\n    const normalizedStatus = statusMap[status] || status;\n    \n    const configs = {\n      'Funcionando': {\n        color: 'text-green-600 dark:text-green-400',\n        bgColor: 'bg-green-100 dark:bg-green-900/20',\n        borderColor: 'border-green-200 dark:border-green-800',\n        icon: CheckCircleIcon,\n      },\n      'Parada': {\n        color: 'text-red-600 dark:text-red-400',\n        bgColor: 'bg-red-100 dark:bg-red-900/20',\n        borderColor: 'border-red-200 dark:border-red-800',\n        icon: XCircleIcon,\n      },\n      'Manuten√ß√£o': {\n        color: 'text-yellow-600 dark:text-yellow-400',\n        bgColor: 'bg-yellow-100 dark:bg-yellow-900/20',\n        borderColor: 'border-yellow-200 dark:border-yellow-800',\n        icon: WrenchScrewdriverIcon,\n      },\n    };\n    return configs[normalizedStatus] || {\n      color: 'text-gray-600 dark:text-gray-400',\n      bgColor: 'bg-gray-100 dark:bg-gray-700',\n      borderColor: 'border-gray-200 dark:border-gray-600',\n      icon: ExclamationTriangleIcon,\n    };\n  };\n\n  const formatDateTime = (dateString) => {\n    if (!dateString) return 'N√£o dispon√≠vel';\n    const date = new Date(dateString);\n    if (isNaN(date.getTime())) return 'Data inv√°lida';\n    return date.toLocaleString('pt-BR');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <ExclamationTriangleIcon className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <p className=\"text-red-600 dark:text-red-400\">{error}</p>\n          <button\n            onClick={() => navigate('/machines')}\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200\"\n          >\n            Voltar para M√°quinas\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!machine) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <p className=\"text-gray-600 dark:text-gray-400\">M√°quina n√£o encontrada</p>\n      </div>\n    );\n  }\n\n  const statusConfig = getStatusConfig(machine.status);\n  const StatusIcon = statusConfig.icon;\n\n  return (\n    <>\n      <Helmet>\n        <title>{machine ? `Status - ${machine.name} - Sistema ZARA` : 'Status da M√°quina - Sistema ZARA'}</title>\n        <meta name=\"description\" content={machine ? `Controle de status da m√°quina ${machine.name}` : 'Controle de status da m√°quina'} />\n      </Helmet>\n\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center space-x-4\">\n          <button\n            onClick={() => navigate('/machines')}\n            className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200 rounded-lg\"\n          >\n            <ArrowLeftIcon className=\"h-6 w-6\" />\n          </button>\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              Controle de Status - {machine.name}\n            </h1>\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n              Gerencie o status operacional da m√°quina\n            </p>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Status Atual */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\"\n          >\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n              Status Atual\n            </h2>\n            \n            <div className={`flex items-center space-x-3 p-4 rounded-lg ${statusConfig.bgColor} ${statusConfig.borderColor} border`}>\n              <StatusIcon className={`h-8 w-8 ${statusConfig.color}`} />\n              <div>\n                <p className={`text-lg font-semibold ${statusConfig.color}`}>\n                  {statusMap[machine.status] || machine.status}\n                </p>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  √öltima atualiza√ß√£o: {machine.updatedAt ? formatDateTime(machine.updatedAt) : 'N√£o dispon√≠vel'}\n                </p>\n              </div>\n            </div>\n\n            {/* Informa√ß√µes da M√°quina */}\n            <div className=\"mt-6 space-y-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Localiza√ß√£o:</span>\n                <span className=\"text-sm font-medium text-gray-900 dark:text-white\">{machine.location}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Tipo:</span>\n                <span className=\"text-sm font-medium text-gray-900 dark:text-white\">{machine.type}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Operador:</span>\n                <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {machine.currentOperator || 'N√£o atribu√≠do'}\n                </span>\n              </div>\n            </div>\n\n            {/* Alertas */}\n            {machine.alerts && machine.alerts.length > 0 && (\n              <div className=\"mt-6\">\n                <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n                  Alertas Ativos ({machine.alerts.length})\n                </h3>\n                <div className=\"space-y-2\">\n                  {machine.alerts.map((alert, index) => (\n                    <div key={index} className=\"flex items-start space-x-2 p-2 bg-red-50 dark:bg-red-900/20 rounded\">\n                      <ExclamationTriangleIcon className=\"h-4 w-4 text-red-500 mt-0.5\" />\n                      <p className=\"text-sm text-red-700 dark:text-red-300\">{alert.message}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </motion.div>\n\n          {/* Alterar Status */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\"\n          >\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n              Alterar Status\n            </h2>\n\n            <form onSubmit={handleStatusUpdate} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Novo Status\n                </label>\n                <select\n                  value={newStatus}\n                  onChange={(e) => setNewStatus(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  required\n                >\n                  <option value=\"Funcionando\">Funcionando</option>\n                  <option value=\"Parada\">Parada</option>\n                  <option value=\"Manuten√ß√£o\">Manuten√ß√£o</option>\n                  <option value=\"Fora de Turno\">Fora de Turno</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Motivo da Altera√ß√£o\n                </label>\n                <input\n                  type=\"text\"\n                  value={statusReason}\n                  onChange={(e) => setStatusReason(e.target.value)}\n                  placeholder=\"Ex: Manuten√ß√£o preventiva, falha no equipamento...\"\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Observa√ß√µes Adicionais\n                </label>\n                <textarea\n                  value={statusNotes}\n                  onChange={(e) => setStatusNotes(e.target.value)}\n                  placeholder=\"Informa√ß√µes adicionais sobre a altera√ß√£o de status...\"\n                  rows={4}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={isUpdatingStatus || !newStatus}\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\n              >\n                {isUpdatingStatus ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Atualizando...\n                  </>\n                ) : (\n                  'Atualizar Status'\n                )}\n              </button>\n            </form>\n          </motion.div>\n        </div>\n\n        {/* Hist√≥rico de Status */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\"\n        >\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Hist√≥rico de Status\n          </h2>\n\n          {statusHistory.length > 0 ? (\n            <div className=\"space-y-3\">\n              {statusHistory.map((entry, index) => {\n                const entryStatusConfig = getStatusConfig(entry.status);\n                const EntryStatusIcon = entryStatusConfig.icon;\n                \n                return (\n                  <div key={index} className=\"flex items-start space-x-3 p-3 border border-gray-200 dark:border-gray-700 rounded-lg\">\n                    <EntryStatusIcon className={`h-5 w-5 ${entryStatusConfig.color} mt-0.5`} />\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className={`font-medium ${entryStatusConfig.color}`}>\n                          {statusMap[entry.status] || entry.status}\n                        </span>\n                        <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                          {formatDateTime(entry.timestamp)}\n                        </span>\n                      </div>\n                      {entry.reason && (\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                          Motivo: {entry.reason}\n                        </p>\n                      )}\n                      {entry.notes && (\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                          Observa√ß√µes: {entry.notes}\n                        </p>\n                      )}\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                        Por: {entry.changedBy || 'Sistema'}\n                      </p>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <p className=\"text-gray-500 dark:text-gray-400 text-center py-8\">\n              Nenhum hist√≥rico de status dispon√≠vel\n            </p>\n          )}\n        </motion.div>\n      </div>\n    </>\n  );\n};\n\nexport default MachineStatus;"],"names":["MachineStatus","id","useParams","navigate","useNavigate","user","useAuth","socket","useSocket","machine","setMachine","useState","statusMap","loading","setLoading","error","setError","newStatus","setNewStatus","statusReason","setStatusReason","statusNotes","setStatusNotes","isUpdatingStatus","setIsUpdatingStatus","statusHistory","setStatusHistory","useEffect","fetchMachineData","fetchStatusHistory","handleMachineStatusChanged","data","prev","handleOperationStarted","handleOperationEnded","response","api","err","handleStatusUpdate","e","toast","getStatusConfig","status","normalizedStatus","CheckCircleIcon","XCircleIcon","WrenchScrewdriverIcon","ExclamationTriangleIcon","formatDateTime","dateString","date","jsx","jsxs","statusConfig","StatusIcon","Fragment","Helmet","ArrowLeftIcon","motion","alert","index","entry","entryStatusConfig","EntryStatusIcon"],"mappings":"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"}
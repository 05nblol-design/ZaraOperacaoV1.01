{"version":3,"file":"LeaderDashboard-C3W3iAbm.js","sources":["../../src/pages/LeaderDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  ChartBarIcon,\n  UserGroupIcon,\n  WrenchScrewdriverIcon,\n  BeakerIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  ClockIcon,\n  EyeIcon,\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n  CalendarDaysIcon,\n  DocumentTextIcon,\n  BellIcon,\n  CogIcon\n} from '@heroicons/react/24/outline';\n\n// Hooks\nimport { useAuth } from '@/hooks/useAuth';\nimport { useSocket } from '@/hooks/useSocket';\nimport { useMachineStatus } from '@/hooks/useMachineStatus';\nimport { useNotifications } from '@/contexts/NotificationContext';\nimport { useRealTimeProduction } from '@/hooks/useRealTimeProduction';\n\n// Utilitários\nimport { cn, formatNumber, formatDateTime } from '@/lib/utils';\nimport { ROUTES } from '@/config/routes';\nimport api from '@/services/api';\n\nconst LeaderDashboard = () => {\n  const [timeRange, setTimeRange] = useState('today');\n  const [selectedShift, setSelectedShift] = useState('current');\n  \n  const { user } = useAuth();\n  const { isConnected } = useSocket();\n  const { machines, stats } = useMachineStatus();\n  const { notifications } = useNotifications();\n\n  // Calcular dados reais de produção para o dashboard do líder\n  const calculateLeaderRealTimeData = () => {\n    if (!machines || machines.length === 0) {\n      return {\n        teamProduction: 0,\n        teamEfficiency: 0,\n        activeMachines: 0,\n        qualityRate: 95,\n        downtimeMinutes: 0\n      };\n    }\n\n    let totalProduction = 0;\n    let totalEfficiency = 0;\n    let activeMachines = 0;\n    let totalDowntime = 0;\n    let runningMachines = 0;\n\n    machines.forEach(machine => {\n      const isRunning = machine.status === 'FUNCIONANDO' || machine.status === 'RUNNING';\n      const isOffShift = machine.status === 'FORA_DE_TURNO' || machine.status === 'OFF_SHIFT';\n      \n      if (isRunning && machine.productionSpeed) {\n        const speed = machine.productionSpeed;\n        const runningMinutes = 480; // 8 horas de turno\n        const efficiency = 85; // Eficiência média\n        const production = Math.floor(runningMinutes * speed * (efficiency / 100));\n        \n        totalProduction += production;\n        totalEfficiency += efficiency;\n        activeMachines++;\n        runningMachines++;\n      } else if (!isOffShift) {\n        totalDowntime += 45; // Tempo de parada médio\n      }\n    });\n\n    return {\n      teamProduction: totalProduction,\n      teamEfficiency: runningMachines > 0 ? Math.round(totalEfficiency / runningMachines) : 0,\n      activeMachines,\n      qualityRate: 95, // Taxa de qualidade padrão\n      downtimeMinutes: totalDowntime\n    };\n  };\n\n  const leaderRealTimeData = calculateLeaderRealTimeData();\n\n  // Estados para dados da API\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [leaderData, setLeaderData] = useState(null);\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [supervisedMachines, setSupervisedMachines] = useState([]);\n  const [recentAlerts, setRecentAlerts] = useState([]);\n\n  // Função para buscar dados da API\n  const fetchLeaderData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await api.get(`/reports/leader-dashboard?timeRange=${timeRange}`);\n      \n      if (response.data.success) {\n        setLeaderData(response.data.data);\n        setTeamMembers(response.data.data.teamMembers || []);\n        setSupervisedMachines(response.data.data.supervisedMachines || []);\n        setRecentAlerts(response.data.data.recentAlerts || []);\n      } else {\n        throw new Error(response.data.message || 'Erro ao carregar dados');\n      }\n    } catch (err) {\n      console.error('Erro ao buscar dados do líder:', err);\n      setError(err.response?.data?.message || err.message || 'Erro ao carregar dados do dashboard');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Carregar dados quando o componente montar ou timeRange mudar\n  useEffect(() => {\n    fetchLeaderData();\n  }, [timeRange]);\n\n  // Componente de Card de Métrica\n  const MetricCard = ({ title, value, target, change, trend, icon: Icon, format = 'number', unit = '' }) => {\n    const percentage = target ? (value / target) * 100 : 0;\n    const isPositiveTrend = trend === 'up';\n    \n    const formatValue = (val) => {\n      if (format === 'percentage') return `${val}%`;\n      if (format === 'time') return `${val}min`;\n      return `${formatNumber(val)}${unit}`;\n    };\n\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\"\n      >\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-blue-100 dark:bg-blue-900/20 rounded-lg\">\n              <Icon className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n            </div>\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">{title}</h3>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {formatValue(value)}\n              </p>\n            </div>\n          </div>\n          \n          {change !== undefined && (\n            <div className={cn(\n              'flex items-center space-x-1 text-sm font-medium',\n              isPositiveTrend ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n            )}>\n              {isPositiveTrend ? (\n                <ArrowTrendingUpIcon className=\"h-4 w-4\" />\n              ) : (\n                <ArrowTrendingDownIcon className=\"h-4 w-4\" />\n              )}\n              <span>{Math.abs(change)}%</span>\n            </div>\n          )}\n        </div>\n        \n        {target && (\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\n              <span>Meta: {formatValue(target)}</span>\n              <span>{Math.round(percentage)}%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n              <div \n                className={cn(\n                  'h-2 rounded-full transition-all duration-300',\n                  percentage >= 100 ? 'bg-green-500' : percentage >= 80 ? 'bg-yellow-500' : 'bg-red-500'\n                )}\n                style={{ width: `${Math.min(percentage, 100)}%` }}\n              />\n            </div>\n          </div>\n        )}\n      </motion.div>\n    );\n  };\n\n  // Componente de Status da Máquina\n  const MachineStatusCard = ({ machine }) => {\n    const getStatusColor = (status) => {\n      switch (status) {\n        case 'FUNCIONANDO':\n        case 'RUNNING': return 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400';\n        case 'PARADA':\n        case 'STOPPED': return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400';\n        case 'MANUTENCAO':\n        case 'MAINTENANCE': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400';\n        case 'ERROR': return 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400';\n        case 'FORA_DE_TURNO':\n        case 'OFF_SHIFT': return 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400';\n        default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400';\n      }\n    };\n\n    const getStatusText = (status) => {\n      switch (status) {\n        case 'FUNCIONANDO':\n        case 'RUNNING': return 'Funcionando';\n        case 'PARADA':\n        case 'STOPPED': return 'Parada';\n        case 'MANUTENCAO':\n        case 'MAINTENANCE': return 'Manutenção';\n        case 'ERROR': return 'Erro';\n        case 'FORA_DE_TURNO':\n        case 'OFF_SHIFT': return 'Fora de Turno';\n        default: return 'Desconhecido';\n      }\n    };\n\n    // Buscar dados reais da máquina do hook useMachineStatus\n    const realMachine = machines?.find(m => m.id === machine.id || m.name === machine.name);\n    \n    // Calcular eficiência baseada no status e produção real\n    const calculateRealEfficiency = () => {\n      if (!realMachine) return machine.efficiency || 0;\n      \n      const status = realMachine.status;\n      const isRunning = status === 'FUNCIONANDO' || status === 'RUNNING';\n      const isStopped = status === 'PARADA' || status === 'STOPPED';\n      const isOffShift = status === 'FORA_DE_TURNO' || status === 'OFF_SHIFT';\n      const isMaintenance = status === 'MANUTENCAO' || status === 'MAINTENANCE';\n      \n      if (isOffShift) {\n        // Fora de turno: eficiência não é calculada\n        return 0;\n      } else if (isRunning) {\n        // Funcionando: eficiência baseada na produção real\n        if (!realMachine.productionSpeed) return acc;\n        const speed = realMachine.productionSpeed;\n        const runningTime = realMachine.runningTime || 0; // em minutos\n        const currentProduction = realMachine.currentProduction || 0;\n        \n        if (runningTime > 0) {\n          const expectedProduction = runningTime * speed;\n          const efficiency = Math.min(Math.round((currentProduction / expectedProduction) * 100), 100);\n          return efficiency > 0 ? efficiency : 85; // Eficiência padrão se não há dados suficientes\n        }\n        return 85; // Eficiência padrão para máquinas funcionando\n      } else if (isStopped) {\n        // Parada: eficiência cai drasticamente\n        return Math.max(machine.efficiency - 20, 10); // Reduz 20% da eficiência anterior, mínimo 10%\n      } else if (isMaintenance) {\n        // Manutenção: eficiência zerada\n        return 0;\n      }\n      \n      return machine.efficiency || 0;\n    };\n    \n    const realEfficiency = calculateRealEfficiency();\n\n    return (\n      <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h4 className=\"font-medium text-gray-900 dark:text-white\">{machine.name}</h4>\n          <span className={cn('px-2 py-1 text-xs font-medium rounded-full', getStatusColor(realMachine?.status || machine.status))}>\n            {getStatusText(realMachine?.status || machine.status)}\n          </span>\n        </div>\n        \n        <div className=\"space-y-2\">\n          <div className=\"flex justify-between text-sm\">\n            <span className=\"text-gray-500 dark:text-gray-400\">Eficiência:</span>\n            <span className=\"font-medium text-gray-900 dark:text-white\">{realEfficiency}%</span>\n          </div>\n          \n          {machine.operator && (\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-500 dark:text-gray-400\">Operador:</span>\n              <span className=\"font-medium text-gray-900 dark:text-white\">{machine.operator}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard do Líder - Sistema ZARA</title>\n        <meta name=\"description\" content=\"Dashboard de liderança do Sistema ZARA\" />\n      </Helmet>\n      \n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              Dashboard do Líder\n            </h1>\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n              Bem-vindo, {user?.name}! Monitore sua equipe e operações.\n            </p>\n          </div>\n          \n          <div className=\"mt-4 sm:mt-0 flex items-center space-x-3\">\n            {/* Seletor de turno */}\n            <select\n              value={selectedShift}\n              onChange={(e) => setSelectedShift(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"current\">Turno Atual</option>\n              <option value=\"morning\">Turno Manhã</option>\n              <option value=\"afternoon\">Turno Tarde</option>\n              <option value=\"night\">Turno Noite</option>\n            </select>\n            \n            {/* Seletor de período */}\n            <select\n              value={timeRange}\n              onChange={(e) => setTimeRange(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"today\">Hoje</option>\n              <option value=\"week\">Esta Semana</option>\n              <option value=\"month\">Este Mês</option>\n            </select>\n            \n            {/* Status de conexão */}\n            <div className={cn(\n              'flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium',\n              isConnected \n                ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n            )}>\n              <div className={cn(\n                'h-2 w-2 rounded-full',\n                isConnected ? 'bg-green-500' : 'bg-red-500'\n              )} />\n              <span>{isConnected ? 'Online' : 'Offline'}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Loading State */}\n        {loading && (\n          <div className=\"flex justify-center items-center py-12\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            <span className=\"ml-2 text-gray-600 dark:text-gray-400\">Carregando dados...</span>\n          </div>\n        )}\n\n        {/* Error State */}\n        {error && (\n          <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <ExclamationTriangleIcon className=\"h-5 w-5 text-red-400 mr-2\" />\n              <p className=\"text-red-800 dark:text-red-400\">Erro ao carregar dados: {error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Métricas principais - Dados Reais */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <MetricCard\n            title=\"Produção da Equipe\"\n            value={leaderRealTimeData.teamProduction}\n            target={leaderData?.shiftMetrics?.production?.target || 8000}\n            change={8.5}\n            trend={leaderRealTimeData.teamProduction > 6000 ? \"up\" : \"down\"}\n            icon={ChartBarIcon}\n            unit=\" pcs\"\n          />\n          \n          <MetricCard\n            title=\"Taxa de Qualidade\"\n            value={leaderRealTimeData.qualityRate}\n            target={leaderData?.shiftMetrics?.quality?.target || 98}\n            change={-1.2}\n            trend={leaderRealTimeData.qualityRate >= 95 ? \"up\" : \"down\"}\n            icon={BeakerIcon}\n            format=\"percentage\"\n          />\n          \n          <MetricCard\n            title=\"Eficiência da Equipe\"\n            value={leaderRealTimeData.teamEfficiency}\n            target={leaderData?.teamPerformance?.target || 90}\n            change={2.1}\n            trend={leaderRealTimeData.teamEfficiency >= 80 ? \"up\" : \"down\"}\n            icon={UserGroupIcon}\n            format=\"percentage\"\n          />\n          \n          <MetricCard\n            title=\"Tempo de Parada\"\n            value={leaderRealTimeData.downtimeMinutes}\n            target={leaderData?.shiftMetrics?.downtime?.target || 30}\n            change={15.0}\n            trend={leaderRealTimeData.downtimeMinutes < 60 ? \"up\" : \"down\"}\n            icon={ClockIcon}\n            format=\"time\"\n          />\n        </div>\n\n        {/* Seções adicionais */}\n        {!loading && !error && leaderData && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Status das Máquinas Supervisionadas */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Máquinas Supervisionadas\n                </h3>\n                <Link\n                  to={ROUTES.MACHINES}\n                  className=\"text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 flex items-center space-x-1\"\n                >\n                  <span>Ver todas</span>\n                  <EyeIcon className=\"h-4 w-4\" />\n                </Link>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {supervisedMachines.map((machine) => (\n                  <MachineStatusCard key={machine.id} machine={machine} />\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Alertas e Notificações */}\n          <div>\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Alertas Recentes\n                </h3>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400 text-xs font-medium px-2 py-1 rounded-full\">\n                    {leaderData.alerts.critical} críticos\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"space-y-4\">\n                {recentAlerts.map((alert) => {\n                  const getSeverityColor = (severity) => {\n                    switch (severity) {\n                      case 'high': return 'border-red-200 bg-red-50 dark:border-red-800 dark:bg-red-900/20';\n                      case 'medium': return 'border-yellow-200 bg-yellow-50 dark:border-yellow-800 dark:bg-yellow-900/20';\n                      case 'low': return 'border-green-200 bg-green-50 dark:border-green-800 dark:bg-green-900/20';\n                      default: return 'border-gray-200 bg-gray-50 dark:border-gray-700 dark:bg-gray-800';\n                    }\n                  };\n\n                  return (\n                    <div key={alert.id} className={cn(\n                      'p-4 rounded-lg border',\n                      getSeverityColor(alert.severity)\n                    )}>\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                            {alert.message}\n                          </p>\n                          <div className=\"mt-1 flex items-center space-x-2 text-xs text-gray-500 dark:text-gray-400\">\n                            <span>{alert.machine}</span>\n                            <span>•</span>\n                            <span>{formatDateTime(alert.timestamp)}</span>\n                          </div>\n                        </div>\n                        <span className={cn(\n                          'ml-2 px-2 py-1 text-xs font-medium rounded-full',\n                          alert.status === 'active' ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400' :\n                          alert.status === 'acknowledged' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400' :\n                          'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                        )}>\n                          {alert.status === 'active' ? 'Ativo' :\n                           alert.status === 'acknowledged' ? 'Reconhecido' : 'Resolvido'}\n                        </span>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              \n              <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n                <Link\n                  to={ROUTES.NOTIFICATIONS}\n                  className=\"text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 flex items-center space-x-1\"\n                >\n                  <BellIcon className=\"h-4 w-4\" />\n                  <span>Ver todas as notificações</span>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n        )}\n\n        {/* Equipe e Relatórios */}\n        {!loading && !error && leaderData && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Status da Equipe */}\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Status da Equipe\n              </h3>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                {leaderData.teamPerformance.activeOperators}/{leaderData.teamPerformance.totalOperators} ativos\n              </div>\n            </div>\n            \n            <div className=\"space-y-4\">\n              {teamMembers.map((member) => {\n                const getStatusColor = (status) => {\n                  switch (status) {\n                    case 'active': return 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400';\n                    case 'break': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400';\n                    case 'offline': return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400';\n                    default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400';\n                  }\n                };\n\n                const getStatusText = (status) => {\n                  switch (status) {\n                    case 'active': return 'Ativo';\n                    case 'break': return 'Pausa';\n                    case 'offline': return 'Offline';\n                    default: return 'Desconhecido';\n                  }\n                };\n\n                return (\n                  <div key={member.id} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"h-8 w-8 bg-blue-100 dark:bg-blue-900/20 rounded-full flex items-center justify-center\">\n                          <span className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">\n                            {member.name.split(' ').map(n => n[0]).join('')}\n                          </span>\n                        </div>\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                          {member.name}\n                        </p>\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                          {member.machine} • Eficiência: {member.efficiency}%\n                        </p>\n                      </div>\n                    </div>\n                    <span className={cn('px-2 py-1 text-xs font-medium rounded-full', getStatusColor(member.status))}>\n                      {getStatusText(member.status)}\n                    </span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Ações Rápidas */}\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">\n              Ações Rápidas\n            </h3>\n            \n            <div className=\"space-y-3\">\n              <Link\n                to={ROUTES.QUALITY_NEW}\n                className=\"flex items-center space-x-3 p-3 text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-colors\"\n              >\n                <BeakerIcon className=\"h-5 w-5\" />\n                <span>Novo Teste de Qualidade</span>\n              </Link>\n              \n              <Link\n                to={ROUTES.REPORTS}\n                className=\"flex items-center space-x-3 p-3 text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-colors\"\n              >\n                <DocumentTextIcon className=\"h-5 w-5\" />\n                <span>Relatórios de Turno</span>\n              </Link>\n              \n              <Link\n                to={ROUTES.MACHINES}\n                className=\"flex items-center space-x-3 p-3 text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-colors\"\n              >\n                <WrenchScrewdriverIcon className=\"h-5 w-5\" />\n                <span>Gerenciar Máquinas</span>\n              </Link>\n              \n              <Link\n                to={ROUTES.USERS}\n                className=\"flex items-center space-x-3 p-3 text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-colors\"\n              >\n                <UserGroupIcon className=\"h-5 w-5\" />\n                <span>Gerenciar Equipe</span>\n              </Link>\n              \n              <button className=\"flex items-center space-x-3 p-3 text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-colors w-full text-left\">\n                <CalendarDaysIcon className=\"h-5 w-5\" />\n                <span>Agendar Manutenção</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default LeaderDashboard;"],"names":["LeaderDashboard","timeRange","setTimeRange","useState","selectedShift","setSelectedShift","user","useAuth","isConnected","useSocket","machines","useMachineStatus","notifications","useNotifications","leaderRealTimeData","totalProduction","totalEfficiency","activeMachines","totalDowntime","runningMachines","machine","isRunning","isOffShift","speed","runningMinutes","efficiency","production","loading","setLoading","error","setError","leaderData","setLeaderData","teamMembers","setTeamMembers","supervisedMachines","setSupervisedMachines","recentAlerts","setRecentAlerts","fetchLeaderData","response","api","err","_b","_a","useEffect","MetricCard","title","value","target","change","trend","Icon","format","unit","percentage","isPositiveTrend","formatValue","val","formatNumber","jsxs","motion","jsx","cn","ArrowTrendingUpIcon","ArrowTrendingDownIcon","MachineStatusCard","getStatusColor","status","getStatusText","realMachine","m","realEfficiency","isStopped","isMaintenance","runningTime","currentProduction","expectedProduction","Fragment","Helmet","e","ExclamationTriangleIcon","ChartBarIcon","_d","_c","BeakerIcon","_e","UserGroupIcon","_g","_f","ClockIcon","Link","ROUTES","EyeIcon","alert","getSeverityColor","severity","formatDateTime","BellIcon","member","n","DocumentTextIcon","WrenchScrewdriverIcon","CalendarDaysIcon"],"mappings":"0WAiCA,MAAMA,GAAkB,IAAM,mBAC5B,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,OAAO,EAC5C,CAACC,EAAeC,CAAgB,EAAIF,EAAAA,SAAS,SAAS,EAEtD,CAAE,KAAAG,CAAA,EAASC,EAAA,EACX,CAAE,YAAAC,CAAA,EAAgBC,GAAA,EAClB,CAAE,SAAAC,CAAgB,EAAIC,GAAA,EACtB,CAAE,cAAAC,EAAA,EAAkBC,GAAA,EAgDpBC,GA7C8B,IAAM,CACxC,GAAI,CAACJ,GAAYA,EAAS,SAAW,EACnC,MAAO,CACL,eAAgB,EAChB,eAAgB,EAChB,eAAgB,EAChB,YAAa,GACb,gBAAiB,CAAA,EAIrB,IAAIK,EAAkB,EAClBC,EAAkB,EAClBC,EAAiB,EACjBC,EAAgB,EAChBC,EAAkB,EAEtB,OAAAT,EAAS,QAAQU,GAAW,CAC1B,MAAMC,EAAYD,EAAQ,SAAW,eAAiBA,EAAQ,SAAW,UACnEE,EAAaF,EAAQ,SAAW,iBAAmBA,EAAQ,SAAW,YAE5E,GAAIC,GAAaD,EAAQ,gBAAiB,CACxC,MAAMG,EAAQH,EAAQ,gBAChBI,EAAiB,IACjBC,EAAa,GACbC,EAAa,KAAK,MAAMF,EAAiBD,GAASE,EAAa,IAAI,EAEzEV,GAAmBW,EACnBV,GAAmBS,EACnBR,IACAE,GACF,MAAYG,IACVJ,GAAiB,GAErB,CAAC,EAEM,CACL,eAAgBH,EAChB,eAAgBI,EAAkB,EAAI,KAAK,MAAMH,EAAkBG,CAAe,EAAI,EACtF,eAAAF,EACA,YAAa,GACb,gBAAiBC,CAAA,CAErB,GAE2B,EAGrB,CAACS,EAASC,CAAU,EAAIzB,EAAAA,SAAS,EAAI,EACrC,CAAC0B,EAAOC,CAAQ,EAAI3B,EAAAA,SAAS,IAAI,EACjC,CAAC4B,EAAYC,CAAa,EAAI7B,EAAAA,SAAS,IAAI,EAC3C,CAAC8B,EAAaC,CAAc,EAAI/B,EAAAA,SAAS,CAAA,CAAE,EAC3C,CAACgC,EAAoBC,CAAqB,EAAIjC,EAAAA,SAAS,CAAA,CAAE,EACzD,CAACkC,EAAcC,CAAe,EAAInC,EAAAA,SAAS,CAAA,CAAE,EAG7CoC,EAAkB,SAAY,SAClC,GAAI,CACFX,EAAW,EAAI,EACfE,EAAS,IAAI,EAEb,MAAMU,EAAW,MAAMC,GAAI,IAAI,uCAAuCxC,CAAS,EAAE,EAEjF,GAAIuC,EAAS,KAAK,QAChBR,EAAcQ,EAAS,KAAK,IAAI,EAChCN,EAAeM,EAAS,KAAK,KAAK,aAAe,CAAA,CAAE,EACnDJ,EAAsBI,EAAS,KAAK,KAAK,oBAAsB,CAAA,CAAE,EACjEF,EAAgBE,EAAS,KAAK,KAAK,cAAgB,CAAA,CAAE,MAErD,OAAM,IAAI,MAAMA,EAAS,KAAK,SAAW,wBAAwB,CAErE,OAASE,EAAK,CACZ,QAAQ,MAAM,iCAAkCA,CAAG,EACnDZ,IAASa,GAAAC,EAAAF,EAAI,WAAJ,YAAAE,EAAc,OAAd,YAAAD,EAAoB,UAAWD,EAAI,SAAW,qCAAqC,CAC9F,QAAA,CACEd,EAAW,EAAK,CAClB,CACF,EAGAiB,EAAAA,UAAU,IAAM,CACdN,EAAA,CACF,EAAG,CAACtC,CAAS,CAAC,EAGd,MAAM6C,EAAa,CAAC,CAAE,MAAAC,EAAO,MAAAC,EAAO,OAAAC,EAAQ,OAAAC,EAAQ,MAAAC,EAAO,KAAMC,EAAM,OAAAC,EAAS,SAAU,KAAAC,EAAO,MAAS,CACxG,MAAMC,EAAaN,EAAUD,EAAQC,EAAU,IAAM,EAC/CO,EAAkBL,IAAU,KAE5BM,EAAeC,GACfL,IAAW,aAAqB,GAAGK,CAAG,IACtCL,IAAW,OAAe,GAAGK,CAAG,MAC7B,GAAGC,GAAaD,CAAG,CAAC,GAAGJ,CAAI,GAGpC,OACEM,EAAAA,KAACC,GAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAA,EAC1B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAA,EAC1B,UAAU,iGAEV,SAAA,CAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAE,EAAAA,IAAC,OAAI,UAAU,iDACb,eAACV,EAAA,CAAK,UAAU,2CAA2C,CAAA,CAC7D,SACC,MAAA,CACC,SAAA,CAAAU,EAAAA,IAAC,KAAA,CAAG,UAAU,uDAAwD,SAAAf,EAAM,QAC3E,IAAA,CAAE,UAAU,mDACV,SAAAU,EAAYT,CAAK,CAAA,CACpB,CAAA,CAAA,CACF,CAAA,EACF,EAECE,IAAW,QACVU,EAAAA,KAAC,MAAA,CAAI,UAAWG,EACd,kDACAP,EAAkB,qCAAuC,gCAAA,EAExD,SAAA,CAAAA,EACCM,EAAAA,IAACE,IAAoB,UAAU,SAAA,CAAU,EAEzCF,EAAAA,IAACG,GAAA,CAAsB,UAAU,SAAA,CAAU,SAE5C,OAAA,CAAM,SAAA,CAAA,KAAK,IAAIf,CAAM,EAAE,GAAA,CAAA,CAAC,CAAA,CAAA,CAC3B,CAAA,EAEJ,EAECD,GACCW,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,gEACb,SAAA,CAAAA,OAAC,OAAA,CAAK,SAAA,CAAA,SAAOH,EAAYR,CAAM,CAAA,EAAE,SAChC,OAAA,CAAM,SAAA,CAAA,KAAK,MAAMM,CAAU,EAAE,GAAA,CAAA,CAAC,CAAA,EACjC,EACAO,EAAAA,IAAC,MAAA,CAAI,UAAU,uDACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAWC,EACT,+CACAR,GAAc,IAAM,eAAiBA,GAAc,GAAK,gBAAkB,YAAA,EAE5E,MAAO,CAAE,MAAO,GAAG,KAAK,IAAIA,EAAY,GAAG,CAAC,GAAA,CAAI,CAAA,CAClD,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAIR,EAGMW,EAAoB,CAAC,CAAE,QAAA9C,KAAc,CACzC,MAAM+C,EAAkBC,GAAW,CACjC,OAAQA,EAAA,CACN,IAAK,cACL,IAAK,UAAW,MAAO,uEACvB,IAAK,SACL,IAAK,UAAW,MAAO,mEACvB,IAAK,aACL,IAAK,cAAe,MAAO,2EAC3B,IAAK,QAAS,MAAO,+DACrB,IAAK,gBACL,IAAK,YAAa,MAAO,mEACzB,QAAS,MAAO,kEAAA,CAEpB,EAEMC,EAAiBD,GAAW,CAChC,OAAQA,EAAA,CACN,IAAK,cACL,IAAK,UAAW,MAAO,cACvB,IAAK,SACL,IAAK,UAAW,MAAO,SACvB,IAAK,aACL,IAAK,cAAe,MAAO,aAC3B,IAAK,QAAS,MAAO,OACrB,IAAK,gBACL,IAAK,YAAa,MAAO,gBACzB,QAAS,MAAO,cAAA,CAEpB,EAGME,EAAc5D,GAAA,YAAAA,EAAU,KAAK6D,GAAKA,EAAE,KAAOnD,EAAQ,IAAMmD,EAAE,OAASnD,EAAQ,MAuC5EoD,GApC0B,IAAM,CACpC,GAAI,CAACF,EAAa,OAAOlD,EAAQ,YAAc,EAE/C,MAAMgD,EAASE,EAAY,OACrBjD,EAAY+C,IAAW,eAAiBA,IAAW,UACnDK,EAAYL,IAAW,UAAYA,IAAW,UAC9C9C,EAAa8C,IAAW,iBAAmBA,IAAW,YACtDM,EAAgBN,IAAW,cAAgBA,IAAW,cAE5D,GAAI9C,EAEF,MAAO,MACED,EAAW,CAEpB,GAAI,CAACiD,EAAY,gBAAiB,OAAO,IACzC,MAAM/C,EAAQ+C,EAAY,gBACpBK,EAAcL,EAAY,aAAe,EACzCM,EAAoBN,EAAY,mBAAqB,EAE3D,GAAIK,EAAc,EAAG,CACnB,MAAME,EAAqBF,EAAcpD,EACnCE,EAAa,KAAK,IAAI,KAAK,MAAOmD,EAAoBC,EAAsB,GAAG,EAAG,GAAG,EAC3F,OAAOpD,EAAa,EAAIA,EAAa,EACvC,CACA,MAAO,GACT,SAAWgD,EAET,OAAO,KAAK,IAAIrD,EAAQ,WAAa,GAAI,EAAE,KAClCsD,EAET,MAAO,GAGT,OAAOtD,EAAQ,YAAc,CAC/B,GAEuB,EAEvB,OACEwC,EAAAA,KAAC,MAAA,CAAI,UAAU,uFACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAG,UAAU,4CAA6C,SAAA1C,EAAQ,KAAK,QACvE,OAAA,CAAK,UAAW2C,EAAG,6CAA8CI,GAAeG,GAAA,YAAAA,EAAa,SAAUlD,EAAQ,MAAM,CAAC,EACpH,SAAAiD,GAAcC,GAAA,YAAAA,EAAa,SAAUlD,EAAQ,MAAM,CAAA,CACtD,CAAA,EACF,EAEAwC,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAE,EAAAA,IAAC,OAAA,CAAK,UAAU,mCAAmC,SAAA,cAAW,EAC9DF,EAAAA,KAAC,OAAA,CAAK,UAAU,4CAA6C,SAAA,CAAAY,EAAe,GAAA,CAAA,CAAC,CAAA,EAC/E,EAECpD,EAAQ,UACPwC,OAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAE,EAAAA,IAAC,OAAA,CAAK,UAAU,mCAAmC,SAAA,YAAS,EAC5DA,EAAAA,IAAC,OAAA,CAAK,UAAU,4CAA6C,WAAQ,QAAA,CAAS,CAAA,CAAA,CAChF,CAAA,CAAA,CAEJ,CAAA,EACF,CAEJ,EAEA,OACEF,EAAAA,KAAAkB,WAAA,CACE,SAAA,CAAAlB,OAACmB,GAAA,CACC,SAAA,CAAAjB,EAAAA,IAAC,SAAM,SAAA,mCAAA,CAAiC,EACxCA,EAAAA,IAAC,OAAA,CAAK,KAAK,cAAc,QAAQ,wCAAA,CAAyC,CAAA,EAC5E,EAEAF,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,+DACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAG,UAAU,mDAAmD,SAAA,qBAEjE,EACAF,EAAAA,KAAC,IAAA,CAAE,UAAU,gDAAgD,SAAA,CAAA,cAC/CtD,GAAA,YAAAA,EAAM,KAAK,oCAAA,CAAA,CACzB,CAAA,EACF,EAEAsD,EAAAA,KAAC,MAAA,CAAI,UAAU,2CAEb,SAAA,CAAAA,EAAAA,KAAC,SAAA,CACC,MAAOxD,EACP,SAAW4E,GAAM3E,EAAiB2E,EAAE,OAAO,KAAK,EAChD,UAAU,mIAEV,SAAA,CAAAlB,EAAAA,IAAC,SAAA,CAAO,MAAM,UAAU,SAAA,cAAW,EACnCA,EAAAA,IAAC,SAAA,CAAO,MAAM,UAAU,SAAA,cAAW,EACnCA,EAAAA,IAAC,SAAA,CAAO,MAAM,YAAY,SAAA,cAAW,EACrCA,EAAAA,IAAC,SAAA,CAAO,MAAM,QAAQ,SAAA,aAAA,CAAW,CAAA,CAAA,CAAA,EAInCF,EAAAA,KAAC,SAAA,CACC,MAAO3D,EACP,SAAW+E,GAAM9E,EAAa8E,EAAE,OAAO,KAAK,EAC5C,UAAU,mIAEV,SAAA,CAAAlB,EAAAA,IAAC,SAAA,CAAO,MAAM,QAAQ,SAAA,OAAI,EAC1BA,EAAAA,IAAC,SAAA,CAAO,MAAM,OAAO,SAAA,cAAW,EAChCA,EAAAA,IAAC,SAAA,CAAO,MAAM,QAAQ,SAAA,UAAA,CAAQ,CAAA,CAAA,CAAA,EAIhCF,OAAC,OAAI,UAAWG,EACd,uEACAvD,EACI,uEACA,8DAAA,EAEJ,SAAA,CAAAsD,MAAC,OAAI,UAAWC,EACd,uBACAvD,EAAc,eAAiB,YAAA,EAC9B,EACHsD,EAAAA,IAAC,OAAA,CAAM,SAAAtD,EAAc,SAAW,SAAA,CAAU,CAAA,CAAA,CAC5C,CAAA,CAAA,CACF,CAAA,EACF,EAGCmB,GACCiC,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAI,UAAU,8DAAA,CAA+D,EAC9EA,EAAAA,IAAC,OAAA,CAAK,UAAU,wCAAwC,SAAA,qBAAA,CAAmB,CAAA,EAC7E,EAIDjC,SACE,MAAA,CAAI,UAAU,wFACb,SAAA+B,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAE,EAAAA,IAACmB,GAAA,CAAwB,UAAU,2BAAA,CAA4B,EAC/DrB,EAAAA,KAAC,IAAA,CAAE,UAAU,iCAAiC,SAAA,CAAA,2BAAyB/B,CAAA,CAAA,CAAM,CAAA,CAAA,CAC/E,CAAA,CACF,EAIF+B,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAE,EAAAA,IAAChB,EAAA,CACC,MAAM,qBACN,MAAOhC,EAAmB,eAC1B,SAAQ6B,GAAAC,EAAAb,GAAA,YAAAA,EAAY,eAAZ,YAAAa,EAA0B,aAA1B,YAAAD,EAAsC,SAAU,IACxD,OAAQ,IACR,MAAO7B,EAAmB,eAAiB,IAAO,KAAO,OACzD,KAAMoE,GACN,KAAK,MAAA,CAAA,EAGPpB,EAAAA,IAAChB,EAAA,CACC,MAAM,oBACN,MAAOhC,EAAmB,YAC1B,SAAQqE,GAAAC,EAAArD,GAAA,YAAAA,EAAY,eAAZ,YAAAqD,EAA0B,UAA1B,YAAAD,EAAmC,SAAU,GACrD,OAAQ,KACR,MAAOrE,EAAmB,aAAe,GAAK,KAAO,OACrD,KAAMuE,EACN,OAAO,YAAA,CAAA,EAGTvB,EAAAA,IAAChB,EAAA,CACC,MAAM,uBACN,MAAOhC,EAAmB,eAC1B,SAAQwE,EAAAvD,GAAA,YAAAA,EAAY,kBAAZ,YAAAuD,EAA6B,SAAU,GAC/C,OAAQ,IACR,MAAOxE,EAAmB,gBAAkB,GAAK,KAAO,OACxD,KAAMyE,EACN,OAAO,YAAA,CAAA,EAGTzB,EAAAA,IAAChB,EAAA,CACC,MAAM,kBACN,MAAOhC,EAAmB,gBAC1B,SAAQ0E,GAAAC,EAAA1D,GAAA,YAAAA,EAAY,eAAZ,YAAA0D,EAA0B,WAA1B,YAAAD,EAAoC,SAAU,GACtD,OAAQ,GACR,MAAO1E,EAAmB,gBAAkB,GAAK,KAAO,OACxD,KAAM4E,GACN,OAAO,MAAA,CAAA,CACT,EACF,EAGC,CAAC/D,GAAW,CAACE,GAASE,GACvB6B,EAAAA,KAAC,MAAA,CAAI,UAAU,wCAEb,SAAA,CAAAE,EAAAA,IAAC,OAAI,UAAU,gBACb,SAAAF,EAAAA,KAAC,MAAA,CAAI,UAAU,iGACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAG,UAAU,sDAAsD,SAAA,2BAEpE,EACAF,EAAAA,KAAC+B,EAAA,CACC,GAAIC,EAAO,SACX,UAAU,oHAEV,SAAA,CAAA9B,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,EACfA,EAAAA,IAAC+B,GAAA,CAAQ,UAAU,SAAA,CAAU,CAAA,CAAA,CAAA,CAC/B,EACF,EAEA/B,EAAAA,IAAC,MAAA,CAAI,UAAU,wCACZ,WAAmB,IAAK1C,GACvB0C,EAAAA,IAACI,EAAA,CAAmC,QAAA9C,CAAA,EAAZA,EAAQ,EAAsB,CACvD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CACF,EAGA0C,MAAC,MAAA,CACC,SAAAF,EAAAA,KAAC,MAAA,CAAI,UAAU,iGACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAG,UAAU,sDAAsD,SAAA,mBAEpE,QACC,MAAA,CAAI,UAAU,8BACb,SAAAF,EAAAA,KAAC,OAAA,CAAK,UAAU,0GACb,SAAA,CAAA7B,EAAW,OAAO,SAAS,WAAA,CAAA,CAC9B,CAAA,CACF,CAAA,EACF,QAEC,MAAA,CAAI,UAAU,YACZ,SAAAM,EAAa,IAAKyD,GAAU,CAC3B,MAAMC,EAAoBC,GAAa,CACrC,OAAQA,EAAA,CACN,IAAK,OAAQ,MAAO,kEACpB,IAAK,SAAU,MAAO,8EACtB,IAAK,MAAO,MAAO,0EACnB,QAAS,MAAO,kEAAA,CAEpB,EAEA,OACElC,MAAC,OAAmB,UAAWC,EAC7B,wBACAgC,EAAiBD,EAAM,QAAQ,CAAA,EAE/B,SAAAlC,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,oDACV,SAAAgC,EAAM,QACT,EACAlC,EAAAA,KAAC,MAAA,CAAI,UAAU,4EACb,SAAA,CAAAE,EAAAA,IAAC,OAAA,CAAM,WAAM,OAAA,CAAQ,EACrBA,EAAAA,IAAC,QAAK,SAAA,GAAA,CAAC,EACPA,EAAAA,IAAC,OAAA,CAAM,SAAAmC,GAAeH,EAAM,SAAS,CAAA,CAAE,CAAA,CAAA,CACzC,CAAA,EACF,EACAhC,MAAC,QAAK,UAAWC,EACf,kDACA+B,EAAM,SAAW,SAAW,+DAC5BA,EAAM,SAAW,eAAiB,2EAClC,sEAAA,EAEC,WAAM,SAAW,SAAW,QAC5BA,EAAM,SAAW,eAAiB,cAAgB,WAAA,CACrD,CAAA,EACF,CAAA,EAxBQA,EAAM,EAyBhB,CAEJ,CAAC,CAAA,CACH,EAEAhC,EAAAA,IAAC,MAAA,CAAI,UAAU,0DACb,SAAAF,EAAAA,KAAC+B,EAAA,CACC,GAAIC,EAAO,cACX,UAAU,oHAEV,SAAA,CAAA9B,EAAAA,IAACoC,GAAA,CAAS,UAAU,SAAA,CAAU,EAC9BpC,EAAAA,IAAC,QAAK,SAAA,2BAAA,CAAyB,CAAA,CAAA,CAAA,CACjC,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAIC,CAACnC,GAAW,CAACE,GAASE,GACvB6B,EAAAA,KAAC,MAAA,CAAI,UAAU,wCAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,iGACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAG,UAAU,sDAAsD,SAAA,mBAEpE,EACAF,EAAAA,KAAC,MAAA,CAAI,UAAU,2CACZ,SAAA,CAAA7B,EAAW,gBAAgB,gBAAgB,IAAEA,EAAW,gBAAgB,eAAe,SAAA,CAAA,CAC1F,CAAA,EACF,QAEC,MAAA,CAAI,UAAU,YACZ,SAAAE,EAAY,IAAKkE,GAAW,CAC3B,MAAMhC,EAAkBC,GAAW,CACjC,OAAQA,EAAA,CACN,IAAK,SAAU,MAAO,uEACtB,IAAK,QAAS,MAAO,2EACrB,IAAK,UAAW,MAAO,mEACvB,QAAS,MAAO,kEAAA,CAEpB,EAEMC,EAAiBD,GAAW,CAChC,OAAQA,EAAA,CACN,IAAK,SAAU,MAAO,QACtB,IAAK,QAAS,MAAO,QACrB,IAAK,UAAW,MAAO,UACvB,QAAS,MAAO,cAAA,CAEpB,EAEA,OACER,EAAAA,KAAC,MAAA,CAAoB,UAAU,kFAC7B,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAI,UAAU,gBACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,wFACb,SAAAA,EAAAA,IAAC,OAAA,CAAK,UAAU,uDACb,SAAAqC,EAAO,KAAK,MAAM,GAAG,EAAE,IAAIC,GAAKA,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAA,CAChD,CAAA,CACF,EACF,SACC,MAAA,CACC,SAAA,CAAAtC,EAAAA,IAAC,IAAA,CAAE,UAAU,oDACV,SAAAqC,EAAO,KACV,EACAvC,EAAAA,KAAC,IAAA,CAAE,UAAU,2CACV,SAAA,CAAAuC,EAAO,QAAQ,kBAAgBA,EAAO,WAAW,GAAA,CAAA,CACpD,CAAA,CAAA,CACF,CAAA,EACF,EACArC,EAAAA,IAAC,OAAA,CAAK,UAAWC,EAAG,6CAA8CI,EAAegC,EAAO,MAAM,CAAC,EAC5F,SAAA9B,EAAc8B,EAAO,MAAM,CAAA,CAC9B,CAAA,CAAA,EApBQA,EAAO,EAqBjB,CAEJ,CAAC,CAAA,CACH,CAAA,EACF,EAGAvC,EAAAA,KAAC,MAAA,CAAI,UAAU,iGACb,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAG,UAAU,2DAA2D,SAAA,gBAEzE,EAEAF,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC+B,EAAA,CACC,GAAIC,EAAO,YACX,UAAU,gMAEV,SAAA,CAAA9B,EAAAA,IAACuB,EAAA,CAAW,UAAU,SAAA,CAAU,EAChCvB,EAAAA,IAAC,QAAK,SAAA,yBAAA,CAAuB,CAAA,CAAA,CAAA,EAG/BF,EAAAA,KAAC+B,EAAA,CACC,GAAIC,EAAO,QACX,UAAU,gMAEV,SAAA,CAAA9B,EAAAA,IAACuC,GAAA,CAAiB,UAAU,SAAA,CAAU,EACtCvC,EAAAA,IAAC,QAAK,SAAA,qBAAA,CAAmB,CAAA,CAAA,CAAA,EAG3BF,EAAAA,KAAC+B,EAAA,CACC,GAAIC,EAAO,SACX,UAAU,gMAEV,SAAA,CAAA9B,EAAAA,IAACwC,GAAA,CAAsB,UAAU,SAAA,CAAU,EAC3CxC,EAAAA,IAAC,QAAK,SAAA,oBAAA,CAAkB,CAAA,CAAA,CAAA,EAG1BF,EAAAA,KAAC+B,EAAA,CACC,GAAIC,EAAO,MACX,UAAU,gMAEV,SAAA,CAAA9B,EAAAA,IAACyB,EAAA,CAAc,UAAU,SAAA,CAAU,EACnCzB,EAAAA,IAAC,QAAK,SAAA,kBAAA,CAAgB,CAAA,CAAA,CAAA,EAGxBF,EAAAA,KAAC,SAAA,CAAO,UAAU,iNAChB,SAAA,CAAAE,EAAAA,IAACyC,GAAA,CAAiB,UAAU,SAAA,CAAU,EACtCzC,EAAAA,IAAC,QAAK,SAAA,oBAAA,CAAkB,CAAA,CAAA,CAC1B,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEF,CAAA,EACF,CAEJ"}
{"version":3,"file":"QualityTests-Dy6T33TS.js","sources":["../../src/pages/QualityTests.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  MagnifyingGlassIcon,\n  FunnelIcon,\n  PlusIcon,\n  EyeIcon,\n  DocumentTextIcon,\n  BeakerIcon,\n  CheckCircleIcon,\n  XCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  UserIcon,\n  CogIcon,\n  ChartBarIcon,\n  CalendarDaysIcon,\n  PhotoIcon,\n  ArrowDownTrayIcon\n} from '@heroicons/react/24/outline';\n\n// Hooks\nimport { useAuth } from '@/hooks/useAuth';\nimport { useSocket } from '@/hooks/useSocket';\n\n// Utilitários\nimport { cn, formatDateTime, formatNumber } from '@/lib/utils';\nimport { ROUTES } from '@/config/routes';\n\nconst QualityTests = () => {\n  const location = useLocation();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('ALL');\n  const [machineFilter, setMachineFilter] = useState('ALL');\n  const [dateRange, setDateRange] = useState('TODAY'); // TODAY, WEEK, MONTH, ALL\n  const [sortBy, setSortBy] = useState('timestamp'); // timestamp, machine, operator, result\n  const [sortOrder, setSortOrder] = useState('desc');\n  const [selectedTest, setSelectedTest] = useState(null);\n  const [showFilters, setShowFilters] = useState(false);\n  \n  const { user } = useAuth();\n  const { isConnected } = useSocket();\n  \n  // Mensagem de sucesso do estado da navegação\n  const [successMessage, setSuccessMessage] = useState(location.state?.message || '');\n  \n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => setSuccessMessage(''), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n  \n  // Estados para dados dos testes\n  const [tests, setTests] = useState([]);\n  const [machines, setMachines] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Carregar dados dos testes e máquinas da API\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const [testsResponse, machinesResponse] = await Promise.all([\n          fetch('/api/quality-tests', {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n          }),\n          fetch('/api/machines', {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n          })\n        ]);\n        \n        if (!testsResponse.ok || !machinesResponse.ok) {\n          throw new Error('Erro ao carregar dados');\n        }\n        \n        const [testsData, machinesData] = await Promise.all([\n          testsResponse.json(),\n          machinesResponse.json()\n        ]);\n        \n        if (testsData.success) {\n          setTests(testsData.data || []);\n        }\n        \n        if (machinesData.success) {\n          setMachines(machinesData.data || []);\n        }\n      } catch (err) {\n        setError('Erro ao carregar dados');\n        console.error('Erro ao carregar dados:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadData();\n  }, []);\n  \n\n  \n  // Filtrar testes\n  const filteredTests = tests\n    .filter(test => {\n      const machineNameSearch = test.machine?.name || '';\n      const userNameSearch = test.user?.name || '';\n      const productSearch = test.product || '';\n      const lotSearch = test.lot || '';\n      \n      const matchesSearch = test.id.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           machineNameSearch.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           userNameSearch.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           productSearch.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           lotSearch.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const matchesStatus = statusFilter === 'ALL' || (test.approved ? 'PASS' : 'FAIL') === statusFilter;\n      const matchesMachine = machineFilter === 'ALL' || test.machineId === machineFilter;\n      \n      // Filtro de data\n      let matchesDate = true;\n      if (dateRange !== 'ALL') {\n        const now = new Date();\n        const testDate = new Date(test.testDate || test.createdAt);\n        \n        switch (dateRange) {\n          case 'TODAY':\n            matchesDate = testDate.toDateString() === now.toDateString();\n            break;\n          case 'WEEK':\n            const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n            matchesDate = testDate >= weekAgo;\n            break;\n          case 'MONTH':\n            const monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n            matchesDate = testDate >= monthAgo;\n            break;\n        }\n      }\n      \n      return matchesSearch && matchesStatus && matchesMachine && matchesDate;\n    })\n    .sort((a, b) => {\n      let aValue, bValue;\n      \n      switch (sortBy) {\n        case 'timestamp':\n          aValue = new Date(a.testDate || a.createdAt);\n          bValue = new Date(b.testDate || b.createdAt);\n          break;\n        case 'machine':\n          aValue = a.machine?.name || '';\n          bValue = b.machine?.name || '';\n          break;\n        case 'operator':\n          aValue = a.user?.name || '';\n          bValue = b.user?.name || '';\n          break;\n        case 'result':\n          aValue = a.overallResult;\n          bValue = b.overallResult;\n          break;\n        default:\n          return 0;\n      }\n      \n      if (sortOrder === 'asc') {\n        return aValue > bValue ? 1 : -1;\n      } else {\n        return aValue < bValue ? 1 : -1;\n      }\n    });\n  \n  const getResultConfig = (result) => {\n    switch (result) {\n      case 'PASS':\n        return {\n          label: 'Aprovado',\n          color: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400',\n          icon: CheckCircleIcon,\n          iconColor: 'text-green-600 dark:text-green-400'\n        };\n      case 'FAIL':\n        return {\n          label: 'Reprovado',\n          color: 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400',\n          icon: XCircleIcon,\n          iconColor: 'text-red-600 dark:text-red-400'\n        };\n      default:\n        return {\n          label: 'Pendente',\n          color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400',\n          icon: ClockIcon,\n          iconColor: 'text-yellow-600 dark:text-yellow-400'\n        };\n    }\n  };\n  \n  const getTestTypeLabel = (type) => {\n    switch (type) {\n      case 'ROUTINE':\n        return 'Rotina';\n      case 'SPECIAL':\n        return 'Especial';\n      case 'COMPLAINT':\n        return 'Reclamação';\n      default:\n        return type;\n    }\n  };\n  \n  const getShiftLabel = (shift) => {\n    switch (shift) {\n      case 'TURNO_1':\n        return 'Turno 1';\n      case 'TURNO_2':\n        return 'Turno 2';\n      case 'TURNO_3':\n        return 'Turno 3';\n      default:\n        return shift;\n    }\n  };\n  \n  const TestCard = ({ test }) => {\n    const resultConfig = getResultConfig(test.approved ? 'PASS' : 'FAIL');\n    const ResultIcon = resultConfig.icon;\n    \n    const testResults = test.testResults || {};\n    const passedTests = Object.values(testResults).filter(result => result === 'PASS').length;\n    const totalTests = Object.values(testResults).filter(result => result !== null).length;\n    \n    return (\n      <motion.div\n        layout\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -20 }}\n        className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 hover:shadow-md transition-shadow\"\n      >\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <div className={cn(\n              'p-2 rounded-lg',\n              test.approved ? 'bg-green-100 dark:bg-green-900/20' :\n                      !test.approved ? 'bg-red-100 dark:bg-red-900/20' :\n              'bg-yellow-100 dark:bg-yellow-900/20'\n            )}>\n              <ResultIcon className={cn('h-6 w-6', resultConfig.iconColor)} />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                {test.id}\n              </h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                {test.machine?.name || 'N/A'} • {test.machine?.location || ''}\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className={cn(\n              'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',\n              resultConfig.color\n            )}>\n              {resultConfig.label}\n            </span>\n            \n            {test.defects && test.defects.length > 0 && (\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400\">\n                {test.defects.length} defeitos\n              </span>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-2 gap-4 mb-4\">\n          <div>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">Operador</p>\n            <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n              {test.user?.name || 'N/A'}\n            </p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">Produto</p>\n            <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n              {test.product || 'N/A'}\n            </p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">Lote</p>\n            <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n              {test.lot || 'N/A'}\n            </p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">Caixa</p>\n            <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n              {test.boxNumber || 'N/A'}\n            </p>\n          </div>\n        </div>\n        \n        {/* Progresso dos testes */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1\">\n            <span>Testes Realizados</span>\n            <span>{passedTests}/{totalTests} aprovados</span>\n          </div>\n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n            <div \n              className={cn(\n                'h-2 rounded-full transition-all duration-300',\n                passedTests === totalTests ? 'bg-green-500' :\n                passedTests >= totalTests * 0.8 ? 'bg-yellow-500' :\n                'bg-red-500'\n              )}\n              style={{ width: `${totalTests > 0 ? (passedTests / totalTests) * 100 : 0}%` }}\n            />\n          </div>\n        </div>\n        \n        {/* Observações (resumo) */}\n        {test.observations && (\n          <div className=\"mb-4\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 line-clamp-2\">\n              {test.observations}\n            </p>\n          </div>\n        )}\n        \n        <div className=\"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400 mb-4\">\n          <div className=\"flex items-center space-x-4\">\n            <span>{formatDateTime(test.testDate || test.createdAt)}</span>\n            {test.images && test.images.length > 0 && (\n              <div className=\"flex items-center space-x-1\">\n                <PhotoIcon className=\"h-3 w-3\" />\n                <span>{test.images.length} fotos</span>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <Link\n              to={`/quality/tests/${test.id}`}\n              className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n            >\n              <EyeIcon className=\"h-4 w-4 mr-1\" />\n              Detalhes\n            </Link>\n            \n            {(user?.role === 'ADMIN' || user?.role === 'MANAGER' || user?.role === 'LEADER') && (\n              <button className=\"inline-flex items-center px-3 py-1.5 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\">\n                <DocumentTextIcon className=\"h-4 w-4 mr-1\" />\n                Relatório\n              </button>\n            )}\n          </div>\n          \n          <div className=\"flex items-center space-x-1\">\n            <button className=\"p-1.5 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\">\n              <ChartBarIcon className=\"h-4 w-4\" />\n            </button>\n            <button className=\"p-1.5 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\">\n              <ArrowDownTrayIcon className=\"h-4 w-4\" />\n            </button>\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n  \n  return (\n    <>\n      <Helmet>\n        <title>Testes de Qualidade - Sistema ZARA</title>\n        <meta name=\"description\" content=\"Histórico de testes de qualidade do Sistema ZARA\" />\n      </Helmet>\n      \n      <div className=\"space-y-6\">\n        {/* Mensagem de Sucesso */}\n        <AnimatePresence>\n          {successMessage && (\n            <motion.div\n              initial={{ opacity: 0, y: -50 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -50 }}\n              className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-md p-4\"\n            >\n              <div className=\"flex\">\n                <CheckCircleIcon className=\"h-5 w-5 text-green-400\" />\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-green-600 dark:text-green-400\">\n                    {successMessage}\n                  </p>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n        \n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              Testes de Qualidade\n            </h1>\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n              Histórico e resultados dos testes de qualidade\n            </p>\n          </div>\n        </div>\n        \n        {/* Loading State */}\n        {loading && (\n          <div className=\"flex items-center justify-center py-12\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            <span className=\"ml-3 text-gray-600 dark:text-gray-400\">Carregando testes...</span>\n          </div>\n        )}\n        \n        {/* Error State */}\n        {error && (\n          <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md p-4\">\n            <div className=\"flex\">\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-600 dark:text-red-400\">\n                  {error}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Content - only show when not loading */}\n        {!loading && !error && (\n          <>\n          {/* Header Actions */}\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n            <div></div>\n            <div className=\"mt-4 sm:mt-0\">\n              <Link\n                to={ROUTES.QUALITY_NEW}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 transition-colors\"\n              >\n                <PlusIcon className=\"h-4 w-4 mr-2\" />\n                Novo Teste\n              </Link>\n            </div>\n          </div>\n        \n        {/* Estatísticas Rápidas */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-blue-100 dark:bg-blue-900/20 rounded-lg\">\n                <BeakerIcon className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total de Testes</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{tests.length}</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-green-100 dark:bg-green-900/20 rounded-lg\">\n                <CheckCircleIcon className=\"h-6 w-6 text-green-600 dark:text-green-400\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Aprovados</p>\n                <p className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n                  {tests.filter(t => t.overallResult === 'PASS').length}\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-red-100 dark:bg-red-900/20 rounded-lg\">\n                <XCircleIcon className=\"h-6 w-6 text-red-600 dark:text-red-400\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Reprovados</p>\n                <p className=\"text-2xl font-bold text-red-600 dark:text-red-400\">\n                  {tests.filter(t => t.overallResult === 'FAIL').length}\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-yellow-100 dark:bg-yellow-900/20 rounded-lg\">\n                <ChartBarIcon className=\"h-6 w-6 text-yellow-600 dark:text-yellow-400\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Taxa de Aprovação</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {tests.length > 0 ? Math.round((tests.filter(t => t.overallResult === 'PASS').length / tests.length) * 100) : 0}%\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Filtros e Busca */}\n        <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col space-y-4\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center space-y-4 sm:space-y-0 sm:space-x-4\">\n                {/* Busca */}\n                <div className=\"relative\">\n                  <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Buscar testes...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                \n                {/* Filtros */}\n                <div className=\"flex items-center space-x-2\">\n                  <select\n                    value={statusFilter}\n                    onChange={(e) => setStatusFilter(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"ALL\">Todos os Resultados</option>\n                    <option value=\"PASS\">Aprovados</option>\n                    <option value=\"FAIL\">Reprovados</option>\n                  </select>\n                  \n                  <select\n                    value={machineFilter}\n                    onChange={(e) => setMachineFilter(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"ALL\">Todas as Máquinas</option>\n                    {machines.map(machine => (\n                      <option key={machine.id} value={machine.id}>\n                        {machine.name}\n                      </option>\n                    ))}\n                  </select>\n                  \n                  <select\n                    value={dateRange}\n                    onChange={(e) => setDateRange(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"TODAY\">Hoje</option>\n                    <option value=\"WEEK\">Esta Semana</option>\n                    <option value=\"MONTH\">Este Mês</option>\n                    <option value=\"ALL\">Todos os Períodos</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {filteredTests.length} testes\n                </span>\n                \n                {/* Status de conexão */}\n                <div className={cn(\n                  'flex items-center space-x-2 px-3 py-1 rounded-full text-xs font-medium',\n                  isConnected \n                    ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                    : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n                )}>\n                  <div className={cn(\n                    'h-1.5 w-1.5 rounded-full',\n                    isConnected ? 'bg-green-500' : 'bg-red-500'\n                  )} />\n                  <span>{isConnected ? 'Online' : 'Offline'}</span>\n                </div>\n              </div>\n            </div>\n            \n            {/* Ordenação */}\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-sm text-gray-500 dark:text-gray-400\">Ordenar por:</span>\n              <div className=\"flex items-center space-x-2\">\n                <select\n                  value={sortBy}\n                  onChange={(e) => setSortBy(e.target.value)}\n                  className=\"px-3 py-1 border border-gray-300 dark:border-gray-600 rounded text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"timestamp\">Data/Hora</option>\n                  <option value=\"machine\">Máquina</option>\n                  <option value=\"operator\">Operador</option>\n                  <option value=\"result\">Resultado</option>\n                </select>\n                \n                <button\n                  onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\n                  className=\"p-1 border border-gray-300 dark:border-gray-600 rounded text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  {sortOrder === 'asc' ? '↑' : '↓'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Lista de Testes */}\n        <AnimatePresence>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {filteredTests.map((test) => (\n              <TestCard key={test.id} test={test} />\n            ))}\n          </div>\n        </AnimatePresence>\n        \n        {filteredTests.length === 0 && (\n          <div className=\"text-center py-12\">\n            <BeakerIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">\n              Nenhum teste encontrado\n            </h3>\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n              Tente ajustar os filtros de busca ou criar um novo teste.\n            </p>\n            <div className=\"mt-6\">\n              <Link\n                to={ROUTES.QUALITY_NEW}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 transition-colors\"\n              >\n                <PlusIcon className=\"h-4 w-4 mr-2\" />\n                Novo Teste\n              </Link>\n            </div>\n          </div>\n        )}\n        \n        </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default QualityTests;"],"names":["QualityTests","location","useLocation","searchTerm","setSearchTerm","useState","statusFilter","setStatusFilter","machineFilter","setMachineFilter","dateRange","setDateRange","sortBy","setSortBy","sortOrder","setSortOrder","selectedTest","setSelectedTest","showFilters","setShowFilters","user","useAuth","isConnected","useSocket","successMessage","setSuccessMessage","_a","useEffect","timer","tests","setTests","machines","setMachines","loading","setLoading","error","setError","testsResponse","machinesResponse","testsData","machinesData","err","filteredTests","test","machineNameSearch","userNameSearch","_b","productSearch","lotSearch","matchesSearch","matchesStatus","matchesMachine","matchesDate","now","testDate","weekAgo","monthAgo","a","b","aValue","bValue","_c","_d","getResultConfig","result","CheckCircleIcon","XCircleIcon","ClockIcon","TestCard","resultConfig","ResultIcon","testResults","passedTests","totalTests","jsxs","motion","jsx","cn","formatDateTime","PhotoIcon","Link","EyeIcon","DocumentTextIcon","ChartBarIcon","ArrowDownTrayIcon","Fragment","Helmet","AnimatePresence","ROUTES","PlusIcon","BeakerIcon","t","MagnifyingGlassIcon","e","machine"],"mappings":"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"}
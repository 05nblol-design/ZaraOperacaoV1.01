{"version":3,"file":"Settings-B5tRUQ9I.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/DevicePhoneMobileIcon.js","../../node_modules/@heroicons/react/24/outline/esm/PaintBrushIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ServerIcon.js","../../node_modules/@heroicons/react/24/outline/esm/WifiIcon.js","../../src/pages/Settings.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction DevicePhoneMobileIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 1.5H8.25A2.25 2.25 0 0 0 6 3.75v16.5a2.25 2.25 0 0 0 2.25 2.25h7.5A2.25 2.25 0 0 0 18 20.25V3.75a2.25 2.25 0 0 0-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(DevicePhoneMobileIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PaintBrushIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9.53 16.122a3 3 0 0 0-5.78 1.128 2.25 2.25 0 0 1-2.4 2.245 4.5 4.5 0 0 0 8.4-2.245c0-.399-.078-.78-.22-1.128Zm0 0a15.998 15.998 0 0 0 3.388-1.62m-5.043-.025a15.994 15.994 0 0 1 1.622-3.395m3.42 3.42a15.995 15.995 0 0 0 4.764-4.648l3.876-5.814a1.151 1.151 0 0 0-1.597-1.597L14.146 6.32a15.996 15.996 0 0 0-4.649 4.763m3.42 3.42a6.776 6.776 0 0 0-3.42-3.42\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PaintBrushIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ServerIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21.75 17.25v-.228a4.5 4.5 0 0 0-.12-1.03l-2.268-9.64a3.375 3.375 0 0 0-3.285-2.602H7.923a3.375 3.375 0 0 0-3.285 2.602l-2.268 9.64a4.5 4.5 0 0 0-.12 1.03v.228m19.5 0a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3m19.5 0a3 3 0 0 0-3-3H5.25a3 3 0 0 0-3 3m16.5 0h.008v.008h-.008v-.008Zm-3 0h.008v.008h-.008v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ServerIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction WifiIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.288 15.038a5.25 5.25 0 0 1 7.424 0M5.106 11.856c3.807-3.808 9.98-3.808 13.788 0M1.924 8.674c5.565-5.565 14.587-5.565 20.152 0M12.53 18.22l-.53.53-.53-.53a.75.75 0 0 1 1.06 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(WifiIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  UserIcon,\n  CogIcon,\n  BellIcon,\n  ShieldCheckIcon,\n  PaintBrushIcon,\n  GlobeAltIcon,\n  DevicePhoneMobileIcon,\n  ComputerDesktopIcon,\n  EyeIcon,\n  EyeSlashIcon,\n  CheckIcon,\n  XMarkIcon,\n  ExclamationTriangleIcon,\n  InformationCircleIcon,\n  KeyIcon,\n  EnvelopeIcon,\n  PhoneIcon,\n  BuildingOfficeIcon,\n  ClockIcon,\n  DocumentTextIcon,\n  ChartBarIcon,\n  Cog6ToothIcon,\n  ServerIcon,\n  WifiIcon,\n  SignalIcon\n} from '@heroicons/react/24/outline';\n\n// Hooks\nimport { useAuth } from '@/hooks/useAuth';\nimport { useTheme } from '@/hooks/useTheme';\nimport { useSocket } from '@/hooks/useSocket';\n\n// Utilitários\nimport { cn, formatDateTime } from '@/lib/utils';\n\nconst Settings = () => {\n  const [activeTab, setActiveTab] = useState('profile');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [showPassword, setShowPassword] = useState(false);\n  \n  const { user, updateProfile, changePassword } = useAuth();\n  const { theme, setTheme, systemTheme } = useTheme();\n  const { isConnected } = useSocket();\n  \n  // Estados dos formulários\n  const [profileData, setProfileData] = useState({\n    name: user?.name || '',\n    email: user?.email || '',\n    phone: user?.phone || '',\n    department: user?.department || '',\n    position: user?.position || ''\n  });\n  \n  const [passwordData, setPasswordData] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  \n  const [notificationSettings, setNotificationSettings] = useState({\n    emailNotifications: true,\n    pushNotifications: true,\n    qualityAlerts: true,\n    maintenanceAlerts: true,\n    productionAlerts: true,\n    systemAlerts: true,\n    weeklyReports: true,\n    monthlyReports: false\n  });\n  \n  const [systemSettings, setSystemSettings] = useState({\n    language: 'pt-BR',\n    timezone: 'America/Sao_Paulo',\n    dateFormat: 'DD/MM/YYYY',\n    timeFormat: '24h',\n    currency: 'BRL',\n    autoRefresh: true,\n    refreshInterval: 30,\n    soundAlerts: true,\n    compactMode: false\n  });\n  \n  const [securitySettings, setSecuritySettings] = useState({\n    twoFactorAuth: false,\n    sessionTimeout: 480, // 8 horas em minutos\n    loginNotifications: true,\n    deviceTracking: true,\n    ipWhitelist: '',\n    passwordExpiry: 90 // dias\n  });\n  \n  const tabs = [\n    {\n      id: 'profile',\n      name: 'Perfil',\n      icon: UserIcon,\n      description: 'Informações pessoais e profissionais'\n    },\n    {\n      id: 'notifications',\n      name: 'Notificações',\n      icon: BellIcon,\n      description: 'Preferências de alertas e notificações'\n    },\n    {\n      id: 'appearance',\n      name: 'Aparência',\n      icon: PaintBrushIcon,\n      description: 'Tema, idioma e personalização'\n    },\n    {\n      id: 'security',\n      name: 'Segurança',\n      icon: ShieldCheckIcon,\n      description: 'Senha, autenticação e privacidade'\n    },\n    {\n      id: 'system',\n      name: 'Sistema',\n      icon: CogIcon,\n      description: 'Configurações gerais do sistema'\n    }\n  ];\n  \n  const showMessage = (type, text) => {\n    setMessage({ type, text });\n    setTimeout(() => setMessage({ type: '', text: '' }), 5000);\n  };\n  \n  const handleProfileUpdate = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    try {\n      await updateProfile(profileData);\n      showMessage('success', 'Perfil atualizado com sucesso!');\n    } catch (error) {\n      showMessage('error', 'Erro ao atualizar perfil: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handlePasswordChange = async (e) => {\n    e.preventDefault();\n    \n    if (passwordData.newPassword !== passwordData.confirmPassword) {\n      showMessage('error', 'As senhas não coincidem!');\n      return;\n    }\n    \n    if (passwordData.newPassword.length < 8) {\n      showMessage('error', 'A nova senha deve ter pelo menos 8 caracteres!');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      await changePassword(passwordData.currentPassword, passwordData.newPassword);\n      setPasswordData({ currentPassword: '', newPassword: '', confirmPassword: '' });\n      showMessage('success', 'Senha alterada com sucesso!');\n    } catch (error) {\n      showMessage('error', 'Erro ao alterar senha: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleNotificationUpdate = async () => {\n    setLoading(true);\n    \n    try {\n      // Simular API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      showMessage('success', 'Configurações de notificação atualizadas!');\n    } catch (error) {\n      showMessage('error', 'Erro ao atualizar configurações!');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleSystemUpdate = async () => {\n    setLoading(true);\n    \n    try {\n      // Simular API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      showMessage('success', 'Configurações do sistema atualizadas!');\n    } catch (error) {\n      showMessage('error', 'Erro ao atualizar configurações!');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleSecurityUpdate = async () => {\n    setLoading(true);\n    \n    try {\n      // Simular API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      showMessage('success', 'Configurações de segurança atualizadas!');\n    } catch (error) {\n      showMessage('error', 'Erro ao atualizar configurações!');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const ProfileTab = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Informações Pessoais\n        </h3>\n        \n        <form onSubmit={handleProfileUpdate} className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Nome Completo\n              </label>\n              <input\n                type=\"text\"\n                value={profileData.name}\n                onChange={(e) => setProfileData({ ...profileData, name: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                value={profileData.email}\n                onChange={(e) => setProfileData({ ...profileData, email: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Telefone\n              </label>\n              <input\n                type=\"tel\"\n                value={profileData.phone}\n                onChange={(e) => setProfileData({ ...profileData, phone: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Departamento\n              </label>\n              <select\n                value={profileData.department}\n                onChange={(e) => setProfileData({ ...profileData, department: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"\">Selecione...</option>\n                <option value=\"PRODUCTION\">Produção</option>\n                <option value=\"QUALITY\">Qualidade</option>\n                <option value=\"MAINTENANCE\">Manutenção</option>\n                <option value=\"MANAGEMENT\">Gestão</option>\n                <option value=\"IT\">TI</option>\n              </select>\n            </div>\n            \n            <div className=\"md:col-span-2\">\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Cargo\n              </label>\n              <input\n                type=\"text\"\n                value={profileData.position}\n                onChange={(e) => setProfileData({ ...profileData, position: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              {loading ? 'Salvando...' : 'Salvar Alterações'}\n            </button>\n          </div>\n        </form>\n      </div>\n      \n      <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Alterar Senha\n        </h3>\n        \n        <form onSubmit={handlePasswordChange} className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Senha Atual\n            </label>\n            <div className=\"relative\">\n              <input\n                type={showPassword ? 'text' : 'password'}\n                value={passwordData.currentPassword}\n                onChange={(e) => setPasswordData({ ...passwordData, currentPassword: e.target.value })}\n                className=\"w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n              >\n                {showPassword ? (\n                  <EyeSlashIcon className=\"h-4 w-4 text-gray-400\" />\n                ) : (\n                  <EyeIcon className=\"h-4 w-4 text-gray-400\" />\n                )}\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Nova Senha\n              </label>\n              <input\n                type=\"password\"\n                value={passwordData.newPassword}\n                onChange={(e) => setPasswordData({ ...passwordData, newPassword: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n                minLength={8}\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Confirmar Nova Senha\n              </label>\n              <input\n                type=\"password\"\n                value={passwordData.confirmPassword}\n                onChange={(e) => setPasswordData({ ...passwordData, confirmPassword: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n                minLength={8}\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 focus:ring-2 focus:ring-red-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              {loading ? 'Alterando...' : 'Alterar Senha'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n  \n  const NotificationsTab = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Preferências de Notificação\n        </h3>\n        \n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n            <div className=\"flex items-center space-x-3\">\n              <EnvelopeIcon className=\"h-5 w-5 text-gray-400\" />\n              <div>\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  Notificações por Email\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  Receber alertas e relatórios por email\n                </p>\n              </div>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={notificationSettings.emailNotifications}\n                onChange={(e) => setNotificationSettings({\n                  ...notificationSettings,\n                  emailNotifications: e.target.checked\n                })}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n          \n          <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n            <div className=\"flex items-center space-x-3\">\n              <DevicePhoneMobileIcon className=\"h-5 w-5 text-gray-400\" />\n              <div>\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  Notificações Push\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  Receber notificações no navegador\n                </p>\n              </div>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={notificationSettings.pushNotifications}\n                onChange={(e) => setNotificationSettings({\n                  ...notificationSettings,\n                  pushNotifications: e.target.checked\n                })}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Tipos de Alertas\n        </h3>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {[\n            { key: 'qualityAlerts', label: 'Alertas de Qualidade', desc: 'Testes reprovados e defeitos' },\n            { key: 'maintenanceAlerts', label: 'Alertas de Manutenção', desc: 'Manutenções programadas e emergenciais' },\n            { key: 'productionAlerts', label: 'Alertas de Produção', desc: 'Metas e eficiência de produção' },\n            { key: 'systemAlerts', label: 'Alertas do Sistema', desc: 'Atualizações e problemas técnicos' }\n          ].map((alert) => (\n            <div key={alert.key} className=\"flex items-center justify-between p-3 border border-gray-200 dark:border-gray-600 rounded-lg\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {alert.label}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {alert.desc}\n                </p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={notificationSettings[alert.key]}\n                  onChange={(e) => setNotificationSettings({\n                    ...notificationSettings,\n                    [alert.key]: e.target.checked\n                  })}\n                  className=\"sr-only peer\"\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"flex justify-end\">\n        <button\n          onClick={handleNotificationUpdate}\n          disabled={loading}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n        >\n          {loading ? 'Salvando...' : 'Salvar Configurações'}\n        </button>\n      </div>\n    </div>\n  );\n  \n  const AppearanceTab = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Tema\n        </h3>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          {[\n            { value: 'light', label: 'Claro', icon: ComputerDesktopIcon },\n            { value: 'dark', label: 'Escuro', icon: DevicePhoneMobileIcon },\n            { value: 'system', label: 'Sistema', icon: CogIcon }\n          ].map((themeOption) => {\n            const Icon = themeOption.icon;\n            const isSelected = theme === themeOption.value;\n            \n            return (\n              <button\n                key={themeOption.value}\n                onClick={() => setTheme(themeOption.value)}\n                className={cn(\n                  'p-4 border-2 rounded-lg text-left transition-all duration-200',\n                  isSelected\n                    ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\n                    : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\n                )}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div className={cn(\n                    'p-2 rounded-lg',\n                    isSelected\n                      ? 'bg-blue-100 dark:bg-blue-900/40'\n                      : 'bg-gray-100 dark:bg-gray-700'\n                  )}>\n                    <Icon className={cn(\n                      'h-6 w-6',\n                      isSelected\n                        ? 'text-blue-600 dark:text-blue-400'\n                        : 'text-gray-600 dark:text-gray-400'\n                    )} />\n                  </div>\n                  <div>\n                    <p className={cn(\n                      'font-medium',\n                      isSelected\n                        ? 'text-blue-900 dark:text-blue-100'\n                        : 'text-gray-900 dark:text-white'\n                    )}>\n                      {themeOption.label}\n                    </p>\n                    {themeOption.value === 'system' && (\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Detectado: {systemTheme}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n      \n      <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Idioma e Região\n        </h3>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Idioma\n            </label>\n            <select\n              value={systemSettings.language}\n              onChange={(e) => setSystemSettings({ ...systemSettings, language: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"pt-BR\">Português (Brasil)</option>\n              <option value=\"en-US\">English (US)</option>\n              <option value=\"es-ES\">Español</option>\n            </select>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Fuso Horário\n            </label>\n            <select\n              value={systemSettings.timezone}\n              onChange={(e) => setSystemSettings({ ...systemSettings, timezone: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"America/Sao_Paulo\">São Paulo (GMT-3)</option>\n              <option value=\"America/New_York\">New York (GMT-5)</option>\n              <option value=\"Europe/London\">London (GMT+0)</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Formato\n        </h3>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Formato de Data\n            </label>\n            <select\n              value={systemSettings.dateFormat}\n              onChange={(e) => setSystemSettings({ ...systemSettings, dateFormat: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"DD/MM/YYYY\">DD/MM/AAAA</option>\n              <option value=\"MM/DD/YYYY\">MM/DD/AAAA</option>\n              <option value=\"YYYY-MM-DD\">AAAA-MM-DD</option>\n            </select>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Formato de Hora\n            </label>\n            <select\n              value={systemSettings.timeFormat}\n              onChange={(e) => setSystemSettings({ ...systemSettings, timeFormat: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"24h\">24 horas</option>\n              <option value=\"12h\">12 horas (AM/PM)</option>\n            </select>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Moeda\n            </label>\n            <select\n              value={systemSettings.currency}\n              onChange={(e) => setSystemSettings({ ...systemSettings, currency: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"BRL\">Real (R$)</option>\n              <option value=\"USD\">Dólar ($)</option>\n              <option value=\"EUR\">Euro (€)</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  \n  const SecurityTab = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Autenticação\n        </h3>\n        \n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n            <div className=\"flex items-center space-x-3\">\n              <ShieldCheckIcon className=\"h-5 w-5 text-gray-400\" />\n              <div>\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  Autenticação de Dois Fatores\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  Adicionar uma camada extra de segurança\n                </p>\n              </div>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={securitySettings.twoFactorAuth}\n                onChange={(e) => setSecuritySettings({\n                  ...securitySettings,\n                  twoFactorAuth: e.target.checked\n                })}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Timeout da Sessão (minutos)\n              </label>\n              <input\n                type=\"number\"\n                value={securitySettings.sessionTimeout}\n                onChange={(e) => setSecuritySettings({\n                  ...securitySettings,\n                  sessionTimeout: parseInt(e.target.value)\n                })}\n                min={30}\n                max={1440}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Expiração da Senha (dias)\n              </label>\n              <input\n                type=\"number\"\n                value={securitySettings.passwordExpiry}\n                onChange={(e) => setSecuritySettings({\n                  ...securitySettings,\n                  passwordExpiry: parseInt(e.target.value)\n                })}\n                min={30}\n                max={365}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Monitoramento\n        </h3>\n        \n        <div className=\"space-y-4\">\n          {[\n            { key: 'loginNotifications', label: 'Notificações de Login', desc: 'Alertar sobre novos logins' },\n            { key: 'deviceTracking', label: 'Rastreamento de Dispositivos', desc: 'Monitorar dispositivos utilizados' }\n          ].map((setting) => (\n            <div key={setting.key} className=\"flex items-center justify-between p-3 border border-gray-200 dark:border-gray-600 rounded-lg\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {setting.label}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {setting.desc}\n                </p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={securitySettings[setting.key]}\n                  onChange={(e) => setSecuritySettings({\n                    ...securitySettings,\n                    [setting.key]: e.target.checked\n                  })}\n                  className=\"sr-only peer\"\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"flex justify-end\">\n        <button\n          onClick={handleSecurityUpdate}\n          disabled={loading}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n        >\n          {loading ? 'Salvando...' : 'Salvar Configurações'}\n        </button>\n      </div>\n    </div>\n  );\n  \n  const SystemTab = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Atualização Automática\n        </h3>\n        \n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n            <div className=\"flex items-center space-x-3\">\n              <ServerIcon className=\"h-5 w-5 text-gray-400\" />\n              <div>\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  Atualização Automática\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  Atualizar dados automaticamente\n                </p>\n              </div>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={systemSettings.autoRefresh}\n                onChange={(e) => setSystemSettings({\n                  ...systemSettings,\n                  autoRefresh: e.target.checked\n                })}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n          \n          {systemSettings.autoRefresh && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Intervalo de Atualização (segundos)\n              </label>\n              <input\n                type=\"number\"\n                value={systemSettings.refreshInterval}\n                onChange={(e) => setSystemSettings({\n                  ...systemSettings,\n                  refreshInterval: parseInt(e.target.value)\n                })}\n                min={10}\n                max={300}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Interface\n        </h3>\n        \n        <div className=\"space-y-4\">\n          {[\n            { key: 'soundAlerts', label: 'Alertas Sonoros', desc: 'Reproduzir sons para alertas importantes' },\n            { key: 'compactMode', label: 'Modo Compacto', desc: 'Interface mais densa com menos espaçamento' }\n          ].map((setting) => (\n            <div key={setting.key} className=\"flex items-center justify-between p-3 border border-gray-200 dark:border-gray-600 rounded-lg\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {setting.label}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {setting.desc}\n                </p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={systemSettings[setting.key]}\n                  onChange={(e) => setSystemSettings({\n                    ...systemSettings,\n                    [setting.key]: e.target.checked\n                  })}\n                  className=\"sr-only peer\"\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          Informações do Sistema\n        </h3>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <WifiIcon className=\"h-4 w-4 text-gray-400\" />\n              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                Status da Conexão\n              </span>\n            </div>\n            <div className={cn(\n              'flex items-center space-x-2',\n              isConnected ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n            )}>\n              <div className={cn(\n                'h-2 w-2 rounded-full',\n                isConnected ? 'bg-green-500' : 'bg-red-500'\n              )} />\n              <span className=\"text-sm\">\n                {isConnected ? 'Conectado' : 'Desconectado'}\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <DocumentTextIcon className=\"h-4 w-4 text-gray-400\" />\n              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                Versão do Sistema\n              </span>\n            </div>\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n              v1.0.1 (Build 2024.01.15)\n            </span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"flex justify-end\">\n        <button\n          onClick={handleSystemUpdate}\n          disabled={loading}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n        >\n          {loading ? 'Salvando...' : 'Salvar Configurações'}\n        </button>\n      </div>\n    </div>\n  );\n  \n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'profile':\n        return <ProfileTab />;\n      case 'notifications':\n        return <NotificationsTab />;\n      case 'appearance':\n        return <AppearanceTab />;\n      case 'security':\n        return <SecurityTab />;\n      case 'system':\n        return <SystemTab />;\n      default:\n        return <ProfileTab />;\n    }\n  };\n  \n  return (\n    <>\n      <Helmet>\n        <title>Configurações - Sistema ZARA</title>\n        <meta name=\"description\" content=\"Configurações do Sistema ZARA\" />\n      </Helmet>\n      \n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              Configurações\n            </h1>\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n              Gerencie suas preferências e configurações do sistema\n            </p>\n          </div>\n          \n          {/* Status de conexão */}\n          <div className={cn(\n            'mt-4 sm:mt-0 flex items-center space-x-2 px-3 py-1 rounded-full text-xs font-medium',\n            isConnected \n              ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n              : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n          )}>\n            <div className={cn(\n              'h-1.5 w-1.5 rounded-full',\n              isConnected ? 'bg-green-500' : 'bg-red-500'\n            )} />\n            <span>{isConnected ? 'Online' : 'Offline'}</span>\n          </div>\n        </div>\n        \n        {/* Mensagem de feedback */}\n        <AnimatePresence>\n          {message.text && (\n            <motion.div\n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              className={cn(\n                'p-4 rounded-lg flex items-center space-x-3',\n                message.type === 'success' \n                  ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                  : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n              )}\n            >\n              {message.type === 'success' ? (\n                <CheckIcon className=\"h-5 w-5\" />\n              ) : (\n                <ExclamationTriangleIcon className=\"h-5 w-5\" />\n              )}\n              <span className=\"text-sm font-medium\">{message.text}</span>\n              <button\n                onClick={() => setMessage({ type: '', text: '' })}\n                className=\"ml-auto\"\n              >\n                <XMarkIcon className=\"h-4 w-4\" />\n              </button>\n            </motion.div>\n          )}\n        </AnimatePresence>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Navegação das abas */}\n          <div className=\"lg:col-span-1\">\n            <nav className=\"space-y-1\">\n              {tabs.map((tab) => {\n                const Icon = tab.icon;\n                const isActive = activeTab === tab.id;\n                \n                return (\n                  <button\n                    key={tab.id}\n                    onClick={() => setActiveTab(tab.id)}\n                    className={cn(\n                      'w-full flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors',\n                      isActive\n                        ? 'bg-blue-100 text-blue-700 dark:bg-blue-900/20 dark:text-blue-400'\n                        : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-700/50'\n                    )}\n                  >\n                    <Icon className={cn(\n                      'mr-3 h-5 w-5',\n                      isActive ? 'text-blue-500 dark:text-blue-400' : 'text-gray-400'\n                    )} />\n                    <div className=\"text-left\">\n                      <div>{tab.name}</div>\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400 font-normal\">\n                        {tab.description}\n                      </div>\n                    </div>\n                  </button>\n                );\n              })}\n            </nav>\n          </div>\n          \n          {/* Conteúdo da aba */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"bg-white dark:bg-gray-800 shadow-sm rounded-lg border border-gray-200 dark:border-gray-700\">\n              <div className=\"p-6\">\n                <AnimatePresence mode=\"wait\">\n                  <motion.div\n                    key={activeTab}\n                    initial={{ opacity: 0, x: 20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: -20 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    {renderTabContent()}\n                  </motion.div>\n                </AnimatePresence>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Settings;"],"names":["DevicePhoneMobileIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","PaintBrushIcon","ServerIcon","WifiIcon","Settings","activeTab","setActiveTab","useState","loading","setLoading","message","setMessage","showPassword","setShowPassword","user","updateProfile","changePassword","useAuth","theme","setTheme","systemTheme","useTheme","isConnected","useSocket","profileData","setProfileData","passwordData","setPasswordData","notificationSettings","setNotificationSettings","systemSettings","setSystemSettings","securitySettings","setSecuritySettings","tabs","UserIcon","BellIcon","ShieldCheckIcon","CogIcon","showMessage","type","text","handleProfileUpdate","e","error","handlePasswordChange","handleNotificationUpdate","resolve","handleSystemUpdate","handleSecurityUpdate","ProfileTab","jsxs","jsx","EyeSlashIcon","EyeIcon","NotificationsTab","EnvelopeIcon","alert","AppearanceTab","ComputerDesktopIcon","themeOption","Icon","isSelected","cn","SecurityTab","setting","SystemTab","DocumentTextIcon","renderTabContent","Fragment","Helmet","AnimatePresence","motion","CheckIcon","ExclamationTriangleIcon","XMarkIcon","tab","isActive"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}
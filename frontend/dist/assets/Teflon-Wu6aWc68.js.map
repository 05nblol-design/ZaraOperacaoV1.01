{"version":3,"file":"Teflon-Wu6aWc68.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/ArrowsUpDownIcon.js","../../src/utils/index.js","../../src/pages/Teflon.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowsUpDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3 7.5 7.5 3m0 0L12 7.5M7.5 3v13.5m13.5 0L16.5 21m0 0L12 16.5m4.5 4.5V7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowsUpDownIcon);\nexport default ForwardRef;","// Utilitários de formatação\nexport const formatDate = (date, options = {}) => {\n  if (!date) return '';\n  \n  const defaultOptions = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    ...options\n  };\n  \n  return new Date(date).toLocaleDateString('pt-BR', defaultOptions);\n};\n\nexport const formatDateTime = (date, options = {}) => {\n  if (!date) return '';\n  \n  const defaultOptions = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    ...options\n  };\n  \n  return new Date(date).toLocaleString('pt-BR', defaultOptions);\n};\n\nexport const formatTime = (date) => {\n  if (!date) return '';\n  \n  return new Date(date).toLocaleTimeString('pt-BR', {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\nexport const formatDuration = (seconds) => {\n  if (!seconds || seconds < 0) return '0s';\n  \n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const remainingSeconds = seconds % 60;\n  \n  if (hours > 0) {\n    return `${hours}h ${minutes}m ${remainingSeconds}s`;\n  } else if (minutes > 0) {\n    return `${minutes}m ${remainingSeconds}s`;\n  } else {\n    return `${remainingSeconds}s`;\n  }\n};\n\nexport const formatFileSize = (bytes) => {\n  if (!bytes || bytes === 0) return '0 B';\n  \n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n};\n\nexport const formatNumber = (number, options = {}) => {\n  if (number === null || number === undefined) return '';\n  \n  const defaultOptions = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n    ...options\n  };\n  \n  return new Intl.NumberFormat('pt-BR', defaultOptions).format(number);\n};\n\nexport const formatPercentage = (value, total) => {\n  if (!total || total === 0) return '0%';\n  \n  const percentage = (value / total) * 100;\n  return `${percentage.toFixed(1)}%`;\n};\n\n// Utilitários de validação\nexport const isValidEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\nexport const isValidCPF = (cpf) => {\n  if (!cpf) return false;\n  \n  // Remove caracteres não numéricos\n  cpf = cpf.replace(/\\D/g, '');\n  \n  // Verifica se tem 11 dígitos\n  if (cpf.length !== 11) return false;\n  \n  // Verifica se todos os dígitos são iguais\n  if (/^(\\d)\\1{10}$/.test(cpf)) return false;\n  \n  // Validação do primeiro dígito verificador\n  let sum = 0;\n  for (let i = 0; i < 9; i++) {\n    sum += parseInt(cpf.charAt(i)) * (10 - i);\n  }\n  let remainder = (sum * 10) % 11;\n  if (remainder === 10 || remainder === 11) remainder = 0;\n  if (remainder !== parseInt(cpf.charAt(9))) return false;\n  \n  // Validação do segundo dígito verificador\n  sum = 0;\n  for (let i = 0; i < 10; i++) {\n    sum += parseInt(cpf.charAt(i)) * (11 - i);\n  }\n  remainder = (sum * 10) % 11;\n  if (remainder === 10 || remainder === 11) remainder = 0;\n  if (remainder !== parseInt(cpf.charAt(10))) return false;\n  \n  return true;\n};\n\nexport const isValidPhone = (phone) => {\n  if (!phone) return false;\n  \n  // Remove caracteres não numéricos\n  const cleanPhone = phone.replace(/\\D/g, '');\n  \n  // Verifica se tem 10 ou 11 dígitos (com DDD)\n  return cleanPhone.length === 10 || cleanPhone.length === 11;\n};\n\n// Utilitários de string\nexport const capitalize = (str) => {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nexport const capitalizeWords = (str) => {\n  if (!str) return '';\n  return str.split(' ').map(word => capitalize(word)).join(' ');\n};\n\nexport const truncate = (str, length = 50) => {\n  if (!str || str.length <= length) return str;\n  return str.substring(0, length) + '...';\n};\n\nexport const slugify = (str) => {\n  if (!str) return '';\n  \n  return str\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n    .replace(/[^a-z0-9\\s-]/g, '') // Remove caracteres especiais\n    .replace(/\\s+/g, '-') // Substitui espaços por hífens\n    .replace(/-+/g, '-') // Remove hífens duplicados\n    .trim('-'); // Remove hífens do início e fim\n};\n\nexport const generateId = () => {\n  return Math.random().toString(36).substring(2) + Date.now().toString(36);\n};\n\n// Utilitários de array\nexport const groupBy = (array, key) => {\n  return array.reduce((groups, item) => {\n    const group = item[key];\n    groups[group] = groups[group] || [];\n    groups[group].push(item);\n    return groups;\n  }, {});\n};\n\nexport const sortBy = (array, key, direction = 'asc') => {\n  return [...array].sort((a, b) => {\n    const aVal = a[key];\n    const bVal = b[key];\n    \n    if (aVal < bVal) return direction === 'asc' ? -1 : 1;\n    if (aVal > bVal) return direction === 'asc' ? 1 : -1;\n    return 0;\n  });\n};\n\nexport const unique = (array, key) => {\n  if (!key) return [...new Set(array)];\n  \n  const seen = new Set();\n  return array.filter(item => {\n    const value = item[key];\n    if (seen.has(value)) return false;\n    seen.add(value);\n    return true;\n  });\n};\n\n// Utilitários de objeto\nexport const pick = (obj, keys) => {\n  return keys.reduce((result, key) => {\n    if (key in obj) {\n      result[key] = obj[key];\n    }\n    return result;\n  }, {});\n};\n\nexport const omit = (obj, keys) => {\n  const result = { ...obj };\n  keys.forEach(key => delete result[key]);\n  return result;\n};\n\nexport const deepClone = (obj) => {\n  if (obj === null || typeof obj !== 'object') return obj;\n  if (obj instanceof Date) return new Date(obj.getTime());\n  if (obj instanceof Array) return obj.map(item => deepClone(item));\n  if (typeof obj === 'object') {\n    const cloned = {};\n    Object.keys(obj).forEach(key => {\n      cloned[key] = deepClone(obj[key]);\n    });\n    return cloned;\n  }\n};\n\n// Utilitários de debounce e throttle\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function executedFunction(...args) {\n    if (!inThrottle) {\n      func.apply(this, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Utilitários de localStorage\nexport const storage = {\n  get: (key, defaultValue = null) => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : defaultValue;\n    } catch (error) {\n      console.error('Error reading from localStorage:', error);\n      return defaultValue;\n    }\n  },\n  \n  set: (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error('Error writing to localStorage:', error);\n    }\n  },\n  \n  remove: (key) => {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.error('Error removing from localStorage:', error);\n    }\n  },\n  \n  clear: () => {\n    try {\n      localStorage.clear();\n    } catch (error) {\n      console.error('Error clearing localStorage:', error);\n    }\n  }\n};\n\n// Utilitários de URL\nexport const getQueryParams = (url = window.location.search) => {\n  const params = new URLSearchParams(url);\n  const result = {};\n  \n  for (const [key, value] of params.entries()) {\n    result[key] = value;\n  }\n  \n  return result;\n};\n\nexport const buildQueryString = (params) => {\n  const searchParams = new URLSearchParams();\n  \n  Object.keys(params).forEach(key => {\n    const value = params[key];\n    if (value !== null && value !== undefined && value !== '') {\n      searchParams.append(key, value);\n    }\n  });\n  \n  return searchParams.toString();\n};\n\n// Utilitários de cores\nexport const getStatusColor = (status) => {\n  const colors = {\n    active: 'text-green-600 bg-green-100',\n    inactive: 'text-gray-600 bg-gray-100',\n    maintenance: 'text-yellow-600 bg-yellow-100',\n    error: 'text-red-600 bg-red-100',\n    pending: 'text-blue-600 bg-blue-100',\n    approved: 'text-green-600 bg-green-100',\n    rejected: 'text-red-600 bg-red-100',\n    in_progress: 'text-yellow-600 bg-yellow-100',\n    completed: 'text-green-600 bg-green-100',\n    cancelled: 'text-gray-600 bg-gray-100'\n  };\n  \n  return colors[status] || 'text-gray-600 bg-gray-100';\n};\n\nexport const getPriorityColor = (priority) => {\n  const colors = {\n    low: 'text-green-600 bg-green-100',\n    medium: 'text-yellow-600 bg-yellow-100',\n    high: 'text-red-600 bg-red-100',\n    critical: 'text-red-800 bg-red-200'\n  };\n  \n  return colors[priority] || 'text-gray-600 bg-gray-100';\n};\n\n// Utilitários de arquivo\nexport const getFileExtension = (filename) => {\n  if (!filename) return '';\n  return filename.split('.').pop().toLowerCase();\n};\n\nexport const isImageFile = (filename) => {\n  const imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg'];\n  return imageExtensions.includes(getFileExtension(filename));\n};\n\nexport const isVideoFile = (filename) => {\n  const videoExtensions = ['mp4', 'avi', 'mov', 'wmv', 'flv', 'webm', 'mkv'];\n  return videoExtensions.includes(getFileExtension(filename));\n};\n\nexport const isDocumentFile = (filename) => {\n  const docExtensions = ['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'txt'];\n  return docExtensions.includes(getFileExtension(filename));\n};\n\n// Utilitários de erro\nexport const getErrorMessage = (error) => {\n  if (typeof error === 'string') return error;\n  if (error?.response?.data?.message) return error.response.data.message;\n  if (error?.message) return error.message;\n  return 'Ocorreu um erro inesperado';\n};\n\n// Utilitários de permissão\nexport const hasPermission = (userRole, requiredRole) => {\n  if (!requiredRole) return true;\n  if (!userRole) return false;\n  \n  // Se requiredRole é um array, verificar se o usuário tem pelo menos uma das roles\n  if (Array.isArray(requiredRole)) {\n    return requiredRole.some(role => hasRolePermission(userRole, role));\n  }\n  \n  return hasRolePermission(userRole, requiredRole);\n};\n\n// Função auxiliar para verificar hierarquia de roles\nconst hasRolePermission = (userRole, requiredRole) => {\n  const roleHierarchy = {\n    'ADMIN': 4,\n    'MANAGER': 3,\n    'LEADER': 2,\n    'OPERATOR': 1\n  };\n\n  return roleHierarchy[userRole] >= roleHierarchy[requiredRole];\n};\n\n// Utilitários de tema\nexport const getSystemTheme = () => {\n  return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n};\n\nexport const applyTheme = (theme) => {\n  const root = document.documentElement;\n  \n  if (theme === 'dark') {\n    root.classList.add('dark');\n  } else {\n    root.classList.remove('dark');\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  PlusIcon, \n  ClockIcon, \n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  MagnifyingGlassIcon,\n  CalendarIcon,\n  ChartBarIcon,\n  CogIcon,\n  ArrowsUpDownIcon\n} from '@heroicons/react/24/outline';\nimport { useAuth } from '../hooks/useAuth';\nimport { useSocket } from '../hooks/useSocket';\nimport { formatDateTime, formatNumber } from '../utils';\nimport { cn } from '../lib/utils';\nimport api from '../services/api';\n\nconst Teflon = () => {\n  const { user } = useAuth();\n  const { socket, isConnected } = useSocket();\n  const navigate = useNavigate();\n  const [teflonChanges, setTeflonChanges] = useState([]);\n  const [machines, setMachines] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [machineFilter, setMachineFilter] = useState('ALL');\n  const [statusFilter, setStatusFilter] = useState('ALL');\n  const [dateRange, setDateRange] = useState('ALL');\n  const [sortBy, setSortBy] = useState('timestamp');\n  const [sortOrder, setSortOrder] = useState('desc');\n  const [showChangeModal, setShowChangeModal] = useState(false);\n  const [selectedChangeId, setSelectedChangeId] = useState(null);\n\n  // Estados para nova troca\n  const [newChange, setNewChange] = useState({\n    machineId: '',\n    teflonType: '',\n    expiryDate: '',\n    observations: ''\n  });\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on('teflonChange', handleTeflonUpdate);\n      return () => socket.off('teflonChange', handleTeflonUpdate);\n    }\n  }, [socket]);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      const [changesRes, machinesRes] = await Promise.all([\n        api.get('/teflon'),\n        api.get('/machines')\n      ]);\n      \n      setTeflonChanges(Array.isArray(changesRes.data.data) ? changesRes.data.data : []);\n      setMachines(Array.isArray(machinesRes.data.data) ? machinesRes.data.data : []);\n    } catch (err) {\n      console.error('Erro ao carregar dados:', err);\n      setError('Erro ao carregar dados do Teflon');\n      setMachines([]);\n      setTeflonChanges([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTeflonUpdate = (data) => {\n    if (data.type === 'TEFLON_CHANGE') {\n      loadData();\n    }\n  };\n\n  const handleNewChange = async (e) => {\n    e.preventDefault();\n    try {\n      await api.post('/teflon', newChange);\n      setNewChange({ machineId: '', teflonType: '', expiryDate: '', observations: '' });\n      setShowChangeModal(false);\n      loadData();\n    } catch (err) {\n      console.error('Erro ao registrar troca:', err);\n      setError('Erro ao registrar troca de Teflon');\n    }\n  };\n\n\n\n  const getStatusConfig = (status) => {\n    switch (status) {\n      case 'ACTIVE':\n        return {\n          label: 'Ativo',\n          color: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400',\n          icon: CheckCircleIcon,\n          iconColor: 'text-green-600 dark:text-green-400'\n        };\n      case 'EXPIRING_SOON':\n        return {\n          label: 'Expirando',\n          color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400',\n          icon: ExclamationTriangleIcon,\n          iconColor: 'text-yellow-600 dark:text-yellow-400'\n        };\n      case 'EXPIRED':\n        return {\n          label: 'Expirado',\n          color: 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400',\n          icon: ClockIcon,\n          iconColor: 'text-red-600 dark:text-red-400'\n        };\n      default:\n        return {\n          label: 'Desconhecido',\n          color: 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400',\n          icon: ClockIcon,\n          iconColor: 'text-gray-600 dark:text-gray-400'\n        };\n    }\n  };\n\n  const getStatusColor = (status) => {\n    return getStatusConfig(status).color;\n  };\n\n  const getStatusIcon = (status) => {\n    const config = getStatusConfig(status);\n    const IconComponent = config.icon;\n    return <IconComponent className={`h-4 w-4 ${config.iconColor}`} />;\n  };\n\n  const getStatusText = (status) => {\n    return getStatusConfig(status).label;\n  };\n\n  // Função para determinar o status baseado nos dados da troca\n  const getStatusFromChange = (change) => {\n    if (!change.expiryDate) return 'ACTIVE';\n    \n    const now = new Date();\n    const expiryDate = new Date(change.expiryDate);\n    const daysUntilExpiry = Math.ceil((expiryDate - now) / (1000 * 60 * 60 * 24));\n    \n    if (daysUntilExpiry <= 0) {\n      return 'EXPIRED';\n    } else if (daysUntilExpiry <= 7) {\n      return 'EXPIRING_SOON';\n    } else {\n      return 'ACTIVE';\n    }\n  };\n\n\n\n  // Filtrar e ordenar trocas de teflon\n  const filteredChanges = (Array.isArray(teflonChanges) ? teflonChanges : [])\n    .filter(change => {\n      const machineNameSearch = change.machine?.name || '';\n      const teflonTypeSearch = change.teflonType || '';\n      const userNameSearch = change.user?.name || '';\n      \n      const matchesSearch = change.id.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           machineNameSearch.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           teflonTypeSearch.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           userNameSearch.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const matchesMachine = machineFilter === 'ALL' || change.machineId === machineFilter;\n      \n      // Filtro de status\n      let matchesStatus = true;\n      if (statusFilter !== 'ALL') {\n        const status = getStatusFromChange(change);\n        matchesStatus = status === statusFilter;\n      }\n      \n      // Filtro de data\n      let matchesDate = true;\n      if (dateRange !== 'ALL') {\n        const now = new Date();\n        const changeDate = new Date(change.changeDate || change.createdAt);\n        \n        switch (dateRange) {\n          case 'TODAY':\n            matchesDate = changeDate.toDateString() === now.toDateString();\n            break;\n          case 'WEEK':\n            const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n            matchesDate = changeDate >= weekAgo;\n            break;\n          case 'MONTH':\n            const monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n            matchesDate = changeDate >= monthAgo;\n            break;\n        }\n      }\n      \n      return matchesSearch && matchesMachine && matchesStatus && matchesDate;\n    })\n    .sort((a, b) => {\n      let aValue, bValue;\n      \n      switch (sortBy) {\n        case 'timestamp':\n          aValue = new Date(a.changeDate || a.createdAt);\n          bValue = new Date(b.changeDate || b.createdAt);\n          break;\n        case 'machine':\n          aValue = a.machine?.name || '';\n          bValue = b.machine?.name || '';\n          break;\n        case 'operator':\n          aValue = a.user?.name || '';\n          bValue = b.user?.name || '';\n          break;\n        case 'status':\n          aValue = getStatusFromChange(a);\n          bValue = getStatusFromChange(b);\n          break;\n        case 'type':\n          aValue = a.teflonType || '';\n          bValue = b.teflonType || '';\n          break;\n        default:\n          return 0;\n      }\n      \n      if (sortOrder === 'asc') {\n        return aValue > bValue ? 1 : -1;\n      } else {\n        return aValue < bValue ? 1 : -1;\n      }\n    });\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Controle de Teflon - Zara Operação</title>\n      </Helmet>\n\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Controle de Teflon</h1>\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n              Gerencie as trocas de Teflon das máquinas\n            </p>\n          </div>\n          \n          {(user?.role === 'OPERATOR' || user?.role === 'LEADER' || user?.role === 'MANAGER' || user?.role === 'ADMIN') && (\n            <motion.button\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              onClick={() => navigate('/teflon/change')}\n              className=\"mt-4 sm:mt-0 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-gray-800 transition-colors\"\n            >\n              <PlusIcon className=\"-ml-1 mr-2 h-5 w-5\" />\n              Nova Troca\n            </motion.button>\n          )}\n        </div>\n\n        {/* Estatísticas Rápidas */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-blue-100 dark:bg-blue-900/20 rounded-lg\">\n                <CogIcon className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total de Trocas</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {formatNumber(teflonChanges.length)}\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-green-100 dark:bg-green-900/20 rounded-lg\">\n                <CheckCircleIcon className=\"h-6 w-6 text-green-600 dark:text-green-400\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Ativos</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {formatNumber(teflonChanges.filter(t => getStatusFromChange(t) === 'ACTIVE').length)}\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-yellow-100 dark:bg-yellow-900/20 rounded-lg\">\n                <ExclamationTriangleIcon className=\"h-6 w-6 text-yellow-600 dark:text-yellow-400\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Expirando</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {formatNumber(teflonChanges.filter(t => getStatusFromChange(t) === 'EXPIRING_SOON').length)}\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-red-100 dark:bg-red-900/20 rounded-lg\">\n                <ClockIcon className=\"h-6 w-6 text-red-600 dark:text-red-400\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Expirados</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {formatNumber(teflonChanges.filter(t => getStatusFromChange(t) === 'EXPIRED').length)}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Filtros e Busca */}\n        <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col space-y-4\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center space-y-4 sm:space-y-0 sm:space-x-4\">\n                {/* Busca */}\n                <div className=\"relative\">\n                  <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Buscar trocas...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                \n                {/* Filtros */}\n                <div className=\"flex items-center space-x-2\">\n                  <select\n                    value={statusFilter}\n                    onChange={(e) => setStatusFilter(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"ALL\">Todos os Status</option>\n                    <option value=\"ACTIVE\">Ativos</option>\n                    <option value=\"EXPIRING_SOON\">Expirando</option>\n                    <option value=\"EXPIRED\">Expirados</option>\n                  </select>\n                  \n                  <select\n                    value={machineFilter}\n                    onChange={(e) => setMachineFilter(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"ALL\">Todas as Máquinas</option>\n                    {machines.map(machine => (\n                      <option key={machine.id} value={machine.id}>\n                        {machine.name}\n                      </option>\n                    ))}\n                  </select>\n                  \n                  <select\n                    value={dateRange}\n                    onChange={(e) => setDateRange(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"TODAY\">Hoje</option>\n                    <option value=\"WEEK\">Esta Semana</option>\n                    <option value=\"MONTH\">Este Mês</option>\n                    <option value=\"ALL\">Todos os Períodos</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {filteredChanges.length} trocas\n                </span>\n                \n                {/* Status de conexão */}\n                <div className={cn(\n                  'flex items-center space-x-2 px-3 py-1 rounded-full text-xs font-medium',\n                  isConnected \n                    ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                    : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n                )}>\n                  <div className={cn(\n                    'h-1.5 w-1.5 rounded-full',\n                    isConnected ? 'bg-green-500' : 'bg-red-500'\n                  )} />\n                  <span>{isConnected ? 'Online' : 'Offline'}</span>\n                </div>\n              </div>\n            </div>\n            \n            {/* Ordenação */}\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-sm text-gray-500 dark:text-gray-400\">Ordenar por:</span>\n              <div className=\"flex items-center space-x-2\">\n                <select\n                  value={sortBy}\n                  onChange={(e) => setSortBy(e.target.value)}\n                  className=\"px-3 py-1 border border-gray-300 dark:border-gray-600 rounded text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"timestamp\">Data</option>\n                  <option value=\"machine\">Máquina</option>\n                  <option value=\"operator\">Operador</option>\n                  <option value=\"status\">Status</option>\n                  <option value=\"type\">Tipo de Teflon</option>\n                </select>\n                \n                <button\n                  onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\n                  className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                >\n                  <ArrowsUpDownIcon className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Lista de Trocas */}\n        {error && (\n          <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n            <p className=\"text-sm text-red-600 dark:text-red-400\">{error}</p>\n          </div>\n        )}\n        \n        {filteredChanges.length === 0 ? (\n          <div className=\"bg-white dark:bg-gray-800 shadow-sm rounded-lg border border-gray-200 dark:border-gray-700 px-6 py-12 text-center\">\n            <CogIcon className=\"mx-auto h-12 w-12 text-gray-400 dark:text-gray-500\" />\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">Nenhuma troca encontrada</h3>\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n              {searchTerm || statusFilter !== 'ALL' || machineFilter !== 'ALL' || dateRange !== 'ALL'\n                ? 'Tente ajustar os filtros para ver mais resultados.'\n                : 'Comece registrando uma nova troca de Teflon.'}\n            </p>\n            {(user?.role === 'OPERATOR' || user?.role === 'LEADER' || user?.role === 'MANAGER' || user?.role === 'ADMIN') && (\n              <div className=\"mt-6\">\n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => navigate('/teflon/change')}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-gray-800 transition-colors\"\n                >\n                  <PlusIcon className=\"-ml-1 mr-2 h-5 w-5\" />\n                  Nova Troca\n                </motion.button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-2 gap-6\">\n            {filteredChanges.map((change, index) => {\n                const status = getStatusFromChange(change);\n                const statusConfig = getStatusConfig(status);\n                const StatusIcon = statusConfig.icon;\n                \n              return (\n                <motion.div\n                  key={change.id}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: index * 0.05 }}\n                  className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 hover:shadow-md transition-shadow cursor-pointer\"\n                  onClick={() => {\n                    // Apenas líderes e gerentes podem ver detalhes\n                    if (user?.role === 'LEADER' || user?.role === 'MANAGER' || user?.role === 'ADMIN') {\n                      navigate(`/teflon/${change.id}`);\n                    }\n                  }}\n                >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className={cn(\n                            'flex items-center space-x-2 px-3 py-1 rounded-full text-xs font-medium',\n                            statusConfig.color\n                          )}>\n                            <StatusIcon className=\"h-4 w-4\" />\n                            <span>{statusConfig.label}</span>\n                          </div>\n                          \n                          <div className=\"flex-1 min-w-0\">\n                            <h3 className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                              {change.machine?.name || 'Máquina não encontrada'}\n                            </h3>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 truncate\">\n                              Tipo: {change.teflonType || 'Não especificado'}\n                            </p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"mt-3 flex items-center text-sm text-gray-500 dark:text-gray-400 space-x-6\">\n                          <div className=\"flex items-center space-x-1\">\n                            <CalendarIcon className=\"h-4 w-4\" />\n                            <span>Troca: {formatDateTime(change.changeDate || change.createdAt)}</span>\n                          </div>\n                          \n                          {change.expiryDate && (\n                            <div className=\"flex items-center space-x-1\">\n                              <ClockIcon className=\"h-4 w-4\" />\n                              <span>Expira: {formatDateTime(change.expiryDate)}</span>\n                            </div>\n                          )}\n                          \n                          {change.user?.name && (\n                            <div className=\"flex items-center space-x-1\">\n                              <span>Por: {change.user.name}</span>\n                            </div>\n                          )}\n                          \n                          {change.status?.daysUntilExpiry !== undefined && (\n                            <div className=\"flex items-center space-x-1\">\n                              <span className={cn(\n                                'font-medium',\n                                change.status.daysUntilExpiry <= 0 ? 'text-red-600 dark:text-red-400' :\n                                change.status.daysUntilExpiry <= 7 ? 'text-yellow-600 dark:text-yellow-400' :\n                                'text-green-600 dark:text-green-400'\n                              )}>\n                                {change.status.daysUntilExpiry <= 0 \n                                  ? `Expirado há ${Math.abs(change.status.daysUntilExpiry)} dias`\n                                  : `${change.status.daysUntilExpiry} dias restantes`}\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        \n                        {change.observations && (\n                          <div className=\"mt-2\">\n                            <p className=\"text-sm text-gray-600 dark:text-gray-300 italic\">\n                              \"{change.observations}\"\n                            </p>\n                          </div>\n                        )}\n                      </div>\n                      \n                      {/* Indicador de acesso para líderes */}\n                      {(user?.role === 'LEADER' || user?.role === 'MANAGER' || user?.role === 'ADMIN') && (\n                        <div className=\"ml-4 flex-shrink-0\">\n                          <div className=\"text-gray-400 dark:text-gray-500\">\n                            <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                            </svg>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                </motion.div>\n              );\n            })}\n          </div>\n        )}\n\n        {/* Modal Nova Troca */}\n        {showChangeModal && (\n          <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n            <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n              <div className=\"mt-3\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                  Registrar Nova Troca de Teflon\n                </h3>\n                \n                <form onSubmit={handleNewChange} className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Máquina\n                    </label>\n                    <select\n                      value={newChange.machineId}\n                      onChange={(e) => setNewChange({...newChange, machineId: e.target.value})}\n                      required\n                      className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                    >\n                      <option value=\"\">Selecione uma máquina</option>\n                      {machines.map(machine => (\n                        <option key={machine.id} value={machine.id}>\n                          {machine.name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Tipo de Teflon\n                    </label>\n                    <select\n                      value={newChange.teflonType}\n                      onChange={(e) => setNewChange({...newChange, teflonType: e.target.value})}\n                      required\n                      className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                    >\n                      <option value=\"\">Selecione o tipo</option>\n                      <option value=\"PTFE Standard\">PTFE Standard</option>\n                      <option value=\"PTFE Reforçado\">PTFE Reforçado</option>\n                      <option value=\"PTFE Alta Temperatura\">PTFE Alta Temperatura</option>\n                      <option value=\"PTFE Antiaderente\">PTFE Antiaderente</option>\n                      <option value=\"Outros\">Outros</option>\n                    </select>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Data de Validade\n                    </label>\n                    <input\n                      type=\"datetime-local\"\n                      value={newChange.expiryDate}\n                      onChange={(e) => setNewChange({...newChange, expiryDate: e.target.value})}\n                      required\n                      min={new Date().toISOString().slice(0, 16)}\n                      className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Observações\n                    </label>\n                    <textarea\n                      value={newChange.observations}\n                      onChange={(e) => setNewChange({...newChange, observations: e.target.value})}\n                      rows={3}\n                      className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                      placeholder=\"Observações adicionais (opcional)\"\n                    />\n                  </div>\n                  \n                  <div className=\"flex justify-end space-x-3 pt-4\">\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setShowChangeModal(false);\n                        setNewChange({ machineId: '', teflonType: '', expiryDate: '', observations: '' });\n                      }}\n                      className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md\"\n                    >\n                      Cancelar\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md\"\n                    >\n                      Registrar Troca\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n            <div className=\"flex\">\n              <ExclamationTriangleIcon className=\"h-5 w-5 text-red-400\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-800\">{error}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Teflon;"],"names":["ArrowsUpDownIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","formatDateTime","date","options","defaultOptions","formatNumber","number","Teflon","user","useAuth","socket","isConnected","useSocket","navigate","useNavigate","teflonChanges","setTeflonChanges","useState","machines","setMachines","loading","setLoading","error","setError","searchTerm","setSearchTerm","machineFilter","setMachineFilter","statusFilter","setStatusFilter","dateRange","setDateRange","sortBy","setSortBy","sortOrder","setSortOrder","showChangeModal","setShowChangeModal","selectedChangeId","setSelectedChangeId","newChange","setNewChange","useEffect","loadData","handleTeflonUpdate","changesRes","machinesRes","api","err","data","handleNewChange","e","getStatusConfig","status","CheckCircleIcon","ExclamationTriangleIcon","ClockIcon","getStatusFromChange","change","now","expiryDate","daysUntilExpiry","filteredChanges","machineNameSearch","_a","teflonTypeSearch","userNameSearch","_b","matchesSearch","matchesMachine","matchesStatus","matchesDate","changeDate","weekAgo","monthAgo","a","b","aValue","bValue","_c","_d","jsx","jsxs","Fragment","Helmet","motion","PlusIcon","CogIcon","t","MagnifyingGlassIcon","machine","cn","index","statusConfig","StatusIcon","CalendarIcon"],"mappings":"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","x_google_ignoreList":[0]}
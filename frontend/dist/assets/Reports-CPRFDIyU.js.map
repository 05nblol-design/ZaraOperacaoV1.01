{"version":3,"file":"Reports-CPRFDIyU.js","sources":["../../src/pages/Reports.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  ChartBarIcon,\n  DocumentChartBarIcon,\n  CalendarDaysIcon,\n  FunnelIcon,\n  ArrowDownTrayIcon,\n  PrinterIcon,\n  EyeIcon,\n  ChartPieIcon,\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n  ClockIcon,\n  CogIcon,\n  BeakerIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  XCircleIcon,\n  UserGroupIcon,\n  BuildingOfficeIcon,\n  Cog6ToothIcon\n} from '@heroicons/react/24/outline';\n\n// Hooks\nimport { useAuth } from '@/hooks/useAuth';\nimport { useMachinePermissions } from '@/hooks/useMachinePermissions';\nimport { useSocket } from '@/hooks/useSocket';\nimport { useRealTimeProduction } from '@/hooks/useRealTimeProduction';\nimport { useMachineStatus } from '@/hooks/useMachineStatus';\n\n// Utilitários\nimport { cn, formatDateTime, formatNumber, formatCurrency } from '@/lib/utils';\n\n// Popups\nimport DataAnalysisPopup from '@/components/popups/DataAnalysisPopup';\nimport ReportsPopup from '@/components/popups/ReportsPopup';\n\nconst Reports = () => {\n  const [selectedReport, setSelectedReport] = useState('production');\n  const [dateRange, setDateRange] = useState('MONTH'); // TODAY, WEEK, MONTH, QUARTER, YEAR\n  const [selectedMachine, setSelectedMachine] = useState('ALL');\n  const [selectedOperator, setSelectedOperator] = useState('ALL');\n  const [loading, setLoading] = useState(false);\n  const [showDataAnalysisPopup, setShowDataAnalysisPopup] = useState(false);\n  const [showReportsPopup, setShowReportsPopup] = useState(false);\n  \n\n  \n\n  \n  const { user } = useAuth();\n  const { isConnected } = useSocket();\n  const { machines } = useMachineStatus();\n  const { filterMachinesByPermissions } = useMachinePermissions();\n  \n  // Estados para dados de relatórios da API\n  const [reportsRealTimeData, setReportsRealTimeData] = useState({\n    totalProduction: 0,\n    totalRunningTime: 0,\n    averageEfficiency: 0,\n    totalDowntime: 0,\n    qualityRate: 0,\n    machinePerformance: []\n  });\n\n  // Buscar dados reais de produção para relatórios da API\n  const fetchReportsProductionData = async () => {\n    try {\n      const response = await fetch('/api/reports/production-summary', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        if (data.success) {\n          setReportsRealTimeData(data.data);\n          return;\n        }\n      }\n      \n      // Fallback: usar dados básicos das máquinas sem cálculos aleatórios\n      if (machines && machines.length > 0) {\n        const filteredMachines = filterMachinesByPermissions(machines, 'canView');\n        const runningMachines = filteredMachines.filter(m => \n          m.status === 'FUNCIONANDO' || m.status === 'RUNNING'\n        );\n        \n        setReportsRealTimeData({\n          totalProduction: runningMachines.length * 150, // Estimativa conservadora\n          totalRunningTime: runningMachines.length * 60,\n          averageEfficiency: runningMachines.length > 0 ? 80 : 0, // Estimativa conservadora\n          totalDowntime: (filteredMachines.length - runningMachines.length) * 2,\n          qualityRate: 95, // Valor padrão conservador\n          machinePerformance: filteredMachines.map(machine => ({\n            machine: machine.name || `Máquina ${machine.code}`,\n            production: (machine.status === 'FUNCIONANDO' || machine.status === 'RUNNING') ? 150 : 0,\n            efficiency: (machine.status === 'FUNCIONANDO' || machine.status === 'RUNNING') ? 80 : 0,\n            downtime: (machine.status === 'FUNCIONANDO' || machine.status === 'RUNNING') ? 0 : 2\n          }))\n        });\n      }\n    } catch (error) {\n      console.error('Erro ao buscar dados de produção para relatórios:', error);\n    }\n  };\n\n  // Atualizar dados de relatórios periodicamente\n  useEffect(() => {\n    fetchReportsProductionData();\n    const interval = setInterval(fetchReportsProductionData, 60000); // A cada 1 minuto\n    return () => clearInterval(interval);\n  }, [machines, dateRange, selectedMachine]);\n  \n  // Função para buscar dados dos relatórios\n  const fetchReportData = async () => {\n    try {\n      setLoading(true);\n      \n      const token = localStorage.getItem('token');\n      const headers = {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n      \n      // Buscar dados de produção\n      const productionResponse = await fetch('/api/reports/production-data', { headers });\n      const productionData = await productionResponse.json();\n      \n      // Buscar métricas de qualidade\n      const qualityResponse = await fetch('/api/reports/quality-metrics', { headers });\n      const qualityData = await qualityResponse.json();\n      \n      // Buscar performance das máquinas\n      const machineResponse = await fetch('/api/reports/machine-performance', { headers });\n      const machineData = await machineResponse.json();\n      \n      // Buscar dados de manutenção\n      const maintenanceResponse = await fetch('/api/reports/maintenance-data', { headers });\n      const maintenanceData = await maintenanceResponse.json();\n      \n      // Buscar dados de produtividade de operadores\n      const operatorResponse = await fetch('/api/reports/operator-productivity', { headers });\n      const operatorData = await operatorResponse.json();\n      \n      // Atualizar estado com dados reais\n      if (productionData.success && qualityData.success && machineData.success && maintenanceData.success && operatorData.success) {\n        setReportData(prevData => ({\n          ...prevData,\n          production: {\n            totalProduction: productionData.data.total || reportsRealTimeData.totalProduction || 0,\n            targetProduction: 16000, // Meta padrão\n            efficiency: machineData.data.avgEfficiency || reportsRealTimeData.averageEfficiency || 0,\n            downtime: machineData.data.avgDowntime || reportsRealTimeData.totalDowntime || 0,\n            qualityRate: qualityData.data.approvalRate || reportsRealTimeData.qualityRate || 0,\n            defectRate: 100 - (qualityData.data.approvalRate || reportsRealTimeData.qualityRate || 0),\n            machineUtilization: machineData.data.avgUtilization || reportsRealTimeData.averageEfficiency || 0,\n            energyConsumption: 1250.5, // Valor padrão\n            dailyProduction: productionData.data.daily?.map((value, index) => ({\n              date: productionData.data.labels?.[index] || new Date().toISOString().split('T')[0],\n              production: value,\n              target: 550,\n              efficiency: (value / 550) * 100\n            })) || [],\n            machinePerformance: machineData.data.machines?.length > 0 ? machineData.data.machines : (reportsRealTimeData.machinePerformance || [])\n          },\n          quality: {\n            totalTests: qualityData.data.total || 0,\n            passedTests: qualityData.data.approved || 0,\n            failedTests: qualityData.data.rejected || 0,\n            passRate: qualityData.data.approvalRate || 0,\n            avgTestTime: qualityData.data.avgTestTime || 12.5,\n            criticalDefects: qualityData.data.criticalDefects || 0,\n            minorDefects: qualityData.data.minorDefects || 0,\n            testsByType: qualityData.data.testsByType || prevData.quality?.testsByType || [],\n            defectsByCategory: qualityData.data.defectsByCategory || prevData.quality?.defectsByCategory || [],\n            qualityTrend: qualityData.data.labels?.map((date, index) => ({\n              date,\n              passRate: qualityData.data.approved?.[index] && qualityData.data.total > 0 \n                ? Math.round((qualityData.data.approved[index] / (qualityData.data.approved[index] + qualityData.data.rejected[index])) * 100)\n                : 0,\n              tests: (qualityData.data.approved?.[index] || 0) + (qualityData.data.rejected?.[index] || 0)\n            })) || prevData.quality?.qualityTrend || []\n          },\n          maintenance: {\n            totalMaintenance: maintenanceData.data.totalMaintenance || 0,\n            preventive: maintenanceData.data.preventive || 0,\n            corrective: maintenanceData.data.corrective || 0,\n            avgDowntime: maintenanceData.data.avgDowntime || 0,\n            maintenanceCost: maintenanceData.data.maintenanceCost || 0,\n            plannedVsUnplanned: maintenanceData.data.plannedVsUnplanned || { planned: 0, unplanned: 0 },\n            maintenanceByMachine: maintenanceData.data.maintenanceByMachine || [],\n            downtimeTrend: maintenanceData.data.downtimeTrend || []\n          },\n          operators: {\n            totalOperators: operatorData.data.length || 0,\n            activeOperators: operatorData.data.filter(op => op.metrics.totalOperations > 0).length || 0,\n            avgProductivity: operatorData.data.length > 0 \n              ? Math.round(operatorData.data.reduce((sum, op) => sum + parseFloat(op.metrics.approvalRate || 0), 0) / operatorData.data.length * 100) / 100\n              : 0,\n            totalHours: Math.round(operatorData.data.reduce((sum, op) => sum + (op.metrics.totalOperationHours || 0), 0) * 100) / 100,\n            overtimeHours: 0, // Não disponível na API atual\n            operatorPerformance: operatorData.data.slice(0, 5).map(op => ({\n              name: op.operator.name,\n              shift: 'Turno 1', // Valor padrão - não disponível na API\n              productivity: parseFloat(op.metrics.approvalRate || 0),\n              hours: Math.round(op.metrics.totalOperationHours || 0),\n              tests: op.metrics.totalQualityTests || 0\n            })),\n            shiftPerformance: [\n              { shift: 'Turno 1', operators: Math.ceil(operatorData.data.length / 3), avgProductivity: 97.2, production: 5420 },\n              { shift: 'Turno 2', operators: Math.ceil(operatorData.data.length / 3), avgProductivity: 94.8, production: 4890 },\n              { shift: 'Turno 3', operators: Math.floor(operatorData.data.length / 3), avgProductivity: 91.5, production: 3110 }\n            ]\n          }\n        }));\n      }\n    } catch (error) {\n      console.error('Erro ao buscar dados dos relatórios:', error);\n      // Manter dados padrão em caso de erro\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Buscar dados quando o componente montar ou filtros mudarem\n  useEffect(() => {\n    fetchReportData();\n  }, [selectedReport, dateRange, selectedMachine, selectedOperator]);\n  \n  // Dados dos relatórios vindos da API\n  const [reportData, setReportData] = useState({\n    production: {\n      totalProduction: reportsRealTimeData.totalProduction || 15420,\n      targetProduction: 16000,\n      efficiency: reportsRealTimeData.averageEfficiency || 96.4,\n      downtime: reportsRealTimeData.totalDowntime || 2.1,\n      qualityRate: reportsRealTimeData.qualityRate || 98.7,\n      defectRate: 100 - (reportsRealTimeData.qualityRate || 98.7),\n      machineUtilization: reportsRealTimeData.averageEfficiency || 94.2,\n      energyConsumption: 1250.5,\n      dailyProduction: [\n        { date: '2024-01-08', production: 520, target: 550, efficiency: 94.5 },\n        { date: '2024-01-09', production: 545, target: 550, efficiency: 99.1 },\n        { date: '2024-01-10', production: 532, target: 550, efficiency: 96.7 },\n        { date: '2024-01-11', production: 558, target: 550, efficiency: 101.5 },\n        { date: '2024-01-12', production: 541, target: 550, efficiency: 98.4 },\n        { date: '2024-01-13', production: 525, target: 550, efficiency: 95.5 },\n        { date: '2024-01-14', production: 539, target: 550, efficiency: 98.0 }\n      ],\n      machinePerformance: reportsRealTimeData.machinePerformance.length > 0 ? reportsRealTimeData.machinePerformance : [\n        { machine: 'Máquina 01', production: 3200, efficiency: 98.2, downtime: 1.2 },\n        { machine: 'Máquina 02', production: 3150, efficiency: 96.8, downtime: 2.1 },\n        { machine: 'Máquina 03', production: 3080, efficiency: 94.5, downtime: 3.8 },\n        { machine: 'Máquina 04', production: 3100, efficiency: 95.1, downtime: 2.9 },\n        { machine: 'Máquina 05', production: 2890, efficiency: 88.7, downtime: 7.2 }\n      ]\n    },\n    quality: {\n      totalTests: reportsRealTimeData.totalTests || 1247,\n      passedTests: reportsRealTimeData.approvedTests || 1231,\n      failedTests: reportsRealTimeData.rejectedTests || 16,\n      passRate: reportsRealTimeData.passRate || 98.7,\n      avgTestTime: 12.5,\n      criticalDefects: 3,\n      minorDefects: 13,\n      testsByType: [\n        { type: 'Rotina', count: 1089, passed: 1078, failed: 11 },\n        { type: 'Especial', count: 124, passed: 121, failed: 3 },\n        { type: 'Reclamação', count: 34, passed: 32, failed: 2 }\n      ],\n      defectsByCategory: [\n        { category: 'Dimensional', count: 8, percentage: 50.0 },\n        { category: 'Visual', count: 4, percentage: 25.0 },\n        { category: 'Aderência', count: 2, percentage: 12.5 },\n        { category: 'Cor', count: 2, percentage: 12.5 }\n      ],\n      qualityTrend: [\n        { date: '2024-01-08', passRate: 97.8, tests: 178 },\n        { date: '2024-01-09', passRate: 98.9, tests: 182 },\n        { date: '2024-01-10', passRate: 98.2, tests: 175 },\n        { date: '2024-01-11', passRate: 99.1, tests: 189 },\n        { date: '2024-01-12', passRate: 98.5, tests: 177 },\n        { date: '2024-01-13', passRate: 97.9, tests: 171 },\n        { date: '2024-01-14', passRate: 99.3, tests: 185 }\n      ]\n    },\n    maintenance: {\n      totalMaintenance: reportsRealTimeData.totalMaintenance || 47,\n      preventive: reportsRealTimeData.preventiveMaintenance || 32,\n      corrective: reportsRealTimeData.correctiveMaintenance || 15,\n      avgDowntime: reportsRealTimeData.totalDowntime || 2.8,\n      maintenanceCost: 125400,\n      plannedVsUnplanned: {\n        planned: 68.1,\n        unplanned: 31.9\n      },\n      maintenanceByMachine: [\n        { machine: 'Máquina 01', preventive: 6, corrective: 2, cost: 18500 },\n        { machine: 'Máquina 02', preventive: 7, corrective: 3, cost: 22100 },\n        { machine: 'Máquina 03', preventive: 8, corrective: 4, cost: 28900 },\n        { machine: 'Máquina 04', preventive: 6, corrective: 3, cost: 21200 },\n        { machine: 'Máquina 05', preventive: 5, corrective: 3, cost: 34700 }\n      ],\n      downtimeTrend: [\n        { date: '2024-01-08', downtime: 3.2, maintenance: 2 },\n        { date: '2024-01-09', downtime: 1.8, maintenance: 1 },\n        { date: '2024-01-10', downtime: 4.1, maintenance: 3 },\n        { date: '2024-01-11', downtime: 2.1, maintenance: 1 },\n        { date: '2024-01-12', downtime: 2.9, maintenance: 2 },\n        { date: '2024-01-13', downtime: 3.8, maintenance: 3 },\n        { date: '2024-01-14', downtime: 1.5, maintenance: 1 }\n      ]\n    },\n    operators: {\n      totalOperators: reportsRealTimeData.totalOperators || 24,\n      activeOperators: reportsRealTimeData.activeOperators || 18,\n      avgProductivity: reportsRealTimeData.averageProductivity || 94.2,\n      totalHours: reportsRealTimeData.totalHours || 1920,\n      overtimeHours: 156,\n      operatorPerformance: [\n        { name: 'João Silva', shift: 'Turno 1', productivity: 98.5, hours: 160, tests: 89 },\n        { name: 'Maria Santos', shift: 'Turno 1', productivity: 96.8, hours: 158, tests: 92 },\n        { name: 'Carlos Oliveira', shift: 'Turno 2', productivity: 95.2, hours: 162, tests: 87 },\n        { name: 'Ana Lima', shift: 'Turno 3', productivity: 93.7, hours: 155, tests: 78 },\n        { name: 'Pedro Costa', shift: 'Turno 1', productivity: 97.1, hours: 160, tests: 85 }\n      ],\n      shiftPerformance: [\n        { shift: 'Turno 1', operators: 8, avgProductivity: 97.2, production: 5420 },\n        { shift: 'Turno 2', operators: 6, avgProductivity: 94.8, production: 4890 },\n        { shift: 'Turno 3', operators: 4, avgProductivity: 91.5, production: 3110 }\n      ]\n    }\n  });\n  \n  const reportTypes = [\n    {\n      id: 'production',\n      name: 'Produção',\n      icon: ChartBarIcon,\n      description: 'Métricas de produção, eficiência e utilização'\n    },\n    {\n      id: 'quality',\n      name: 'Qualidade',\n      icon: BeakerIcon,\n      description: 'Testes de qualidade, defeitos e aprovações'\n    },\n    {\n      id: 'maintenance',\n      name: 'Manutenção',\n      icon: Cog6ToothIcon,\n      description: 'Manutenções preventivas, corretivas e custos'\n    },\n    {\n      id: 'operators',\n      name: 'Operadores',\n      icon: UserGroupIcon,\n      description: 'Performance dos operadores e turnos'\n    }\n  ];\n  \n  const mockMachines = [\n    { id: 'M001', name: 'Máquina 01' },\n    { id: 'M002', name: 'Máquina 02' },\n    { id: 'M003', name: 'Máquina 03' },\n    { id: 'M004', name: 'Máquina 04' },\n    { id: 'M005', name: 'Máquina 05' }\n  ];\n  \n  const operators = [\n    { id: 'OP001', name: 'João Silva' },\n    { id: 'OP002', name: 'Maria Santos' },\n    { id: 'OP003', name: 'Carlos Oliveira' },\n    { id: 'OP004', name: 'Ana Lima' },\n    { id: 'OP005', name: 'Pedro Costa' }\n  ];\n  \n  const handleExport = (format) => {\n    console.log(`Exportar relatório em ${format}`);\n    // Implementar exportação\n  };\n  \n  const handlePrint = () => {\n    window.print();\n  };\n  \n  const MetricCard = ({ title, value, change, changeType, icon: Icon, color = 'blue', onClick }) => {\n    const colorClasses = {\n      blue: 'bg-blue-100 text-blue-600 dark:bg-blue-900/20 dark:text-blue-400',\n      green: 'bg-green-100 text-green-600 dark:bg-green-900/20 dark:text-green-400',\n      red: 'bg-red-100 text-red-600 dark:bg-red-900/20 dark:text-red-400',\n      yellow: 'bg-yellow-100 text-yellow-600 dark:bg-yellow-900/20 dark:text-yellow-400'\n    };\n    \n    return (\n      <div \n        className={cn(\n          \"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 transition-all duration-200\",\n          onClick && \"cursor-pointer hover:shadow-md hover:border-gray-300 dark:hover:border-gray-600\"\n        )}\n        onClick={onClick}\n      >\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\n              {title}\n            </p>\n            <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {value}\n            </p>\n            {change && (\n              <div className=\"flex items-center mt-1\">\n                {changeType === 'increase' ? (\n                  <ArrowTrendingUpIcon className=\"h-4 w-4 text-green-500 mr-1\" />\n                ) : (\n                  <ArrowTrendingDownIcon className=\"h-4 w-4 text-red-500 mr-1\" />\n                )}\n                <span className={cn(\n                  'text-sm font-medium',\n                  changeType === 'increase' ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                )}>\n                  {change}\n                </span>\n              </div>\n            )}\n          </div>\n          <div className={cn('p-3 rounded-lg', colorClasses[color])}>\n            <Icon className=\"h-6 w-6\" />\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  const ProductionReport = () => {\n    const data = reportData.production;\n    \n    return (\n      <div className=\"space-y-6\">\n        {/* Métricas Principais */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <MetricCard\n            title=\"Produção Total\"\n            value={formatNumber(data.totalProduction)}\n            change=\"+5.2%\"\n            changeType=\"increase\"\n            icon={ChartBarIcon}\n            color=\"blue\"\n            onClick={() => setShowDataAnalysisPopup(true)}\n          />\n          <MetricCard\n            title=\"Eficiência\"\n            value={`${data.efficiency}%`}\n            change=\"+2.1%\"\n            changeType=\"increase\"\n            icon={ArrowTrendingUpIcon}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Tempo de Parada\"\n            value={`${data.downtime}h`}\n            change=\"-0.8h\"\n            changeType=\"increase\"\n            icon={ClockIcon}\n            color=\"red\"\n          />\n          <MetricCard\n            title=\"Taxa de Qualidade\"\n            value={`${data.qualityRate}%`}\n            change=\"+0.3%\"\n            changeType=\"increase\"\n            icon={CheckCircleIcon}\n            color=\"green\"\n          />\n        </div>\n        \n        {/* Gráfico de Produção Diária */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Produção Diária\n          </h3>\n          <div className=\"h-64 flex items-end space-x-2\">\n            {data.dailyProduction.map((day, index) => {\n              const height = (day.production / Math.max(...data.dailyProduction.map(d => d.production))) * 100;\n              const targetHeight = (day.target / Math.max(...data.dailyProduction.map(d => d.production))) * 100;\n              \n              return (\n                <div key={index} className=\"flex-1 flex flex-col items-center\">\n                  <div className=\"w-full relative mb-2\" style={{ height: '200px' }}>\n                    {/* Linha da meta */}\n                    <div \n                      className=\"absolute w-full border-t-2 border-dashed border-gray-400\"\n                      style={{ bottom: `${targetHeight * 2}px` }}\n                    />\n                    {/* Barra de produção */}\n                    <div \n                      className={cn(\n                        'absolute bottom-0 w-full rounded-t transition-all duration-300',\n                        day.production >= day.target ? 'bg-green-500' : 'bg-red-500'\n                      )}\n                      style={{ height: `${height * 2}px` }}\n                    />\n                  </div>\n                  <div className=\"text-center\">\n                    <p className=\"text-xs font-medium text-gray-900 dark:text-white\">\n                      {day.production}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {new Date(day.date).toLocaleDateString('pt-BR', { day: '2-digit', month: '2-digit' })}\n                    </p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"flex items-center justify-center mt-4 space-x-6 text-sm\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 bg-green-500 rounded\" />\n              <span className=\"text-gray-600 dark:text-gray-400\">Meta Atingida</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 bg-red-500 rounded\" />\n              <span className=\"text-gray-600 dark:text-gray-400\">Abaixo da Meta</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-0.5 bg-gray-400 border-dashed\" />\n              <span className=\"text-gray-600 dark:text-gray-400\">Meta</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Performance por Máquina */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Performance por Máquina\n          </h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Máquina\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Produção\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Eficiência\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Tempo de Parada\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                {data.machinePerformance.map((machine, index) => (\n                  <tr key={index}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                      {machine.machine}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                      {formatNumber(machine.production)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-16 bg-gray-200 dark:bg-gray-700 rounded-full h-2 mr-2\">\n                          <div \n                            className={cn(\n                              'h-2 rounded-full',\n                              machine.efficiency >= 95 ? 'bg-green-500' :\n                              machine.efficiency >= 90 ? 'bg-yellow-500' : 'bg-red-500'\n                            )}\n                            style={{ width: `${machine.efficiency}%` }}\n                          />\n                        </div>\n                        <span>{machine.efficiency}%</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                      {machine.downtime}h\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={cn(\n                        'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',\n                        machine.efficiency >= 95 \n                          ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                          : machine.efficiency >= 90\n                          ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400'\n                          : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n                      )}>\n                        {machine.efficiency >= 95 ? 'Excelente' :\n                         machine.efficiency >= 90 ? 'Bom' : 'Atenção'}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  const QualityReport = () => {\n    const data = reportData.quality;\n    \n    return (\n      <div className=\"space-y-6\">\n        {/* Métricas Principais */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <MetricCard\n            title=\"Total de Testes\"\n            value={formatNumber(data.totalTests)}\n            change=\"+12\"\n            changeType=\"increase\"\n            icon={BeakerIcon}\n            color=\"blue\"\n          />\n          <MetricCard\n            title=\"Taxa de Aprovação\"\n            value={`${data.passRate}%`}\n            change=\"+0.3%\"\n            changeType=\"increase\"\n            icon={CheckCircleIcon}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Defeitos Críticos\"\n            value={data.criticalDefects}\n            change=\"-2\"\n            changeType=\"increase\"\n            icon={ExclamationTriangleIcon}\n            color=\"red\"\n          />\n          <MetricCard\n            title=\"Tempo Médio\"\n            value={`${data.avgTestTime}min`}\n            change=\"-1.2min\"\n            changeType=\"increase\"\n            icon={ClockIcon}\n            color=\"yellow\"\n          />\n        </div>\n        \n        {/* Testes por Tipo */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Testes por Tipo\n          </h3>\n          <div className=\"space-y-4\">\n            {data.testsByType.map((type, index) => {\n              const passRate = (type.passed / type.count) * 100;\n              \n              return (\n                <div key={index} className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        {type.type}\n                      </h4>\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {type.count} testes\n                      </span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 dark:bg-gray-600 rounded-full h-2\">\n                      <div \n                        className=\"bg-green-500 h-2 rounded-full transition-all duration-300\"\n                        style={{ width: `${passRate}%` }}\n                      />\n                    </div>\n                    <div className=\"flex justify-between mt-1 text-xs text-gray-500 dark:text-gray-400\">\n                      <span>{type.passed} aprovados</span>\n                      <span>{type.failed} reprovados</span>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        \n        {/* Defeitos por Categoria */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Defeitos por Categoria\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-3\">\n              {data.defectsByCategory.map((defect, index) => (\n                <div key={index} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className={cn(\n                      'w-3 h-3 rounded-full',\n                      index === 0 ? 'bg-red-500' :\n                      index === 1 ? 'bg-orange-500' :\n                      index === 2 ? 'bg-yellow-500' : 'bg-blue-500'\n                    )} />\n                    <span className=\"text-sm text-gray-900 dark:text-white\">\n                      {defect.category}\n                    </span>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {defect.count}\n                    </span>\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-1\">\n                      ({defect.percentage}%)\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"flex items-center justify-center\">\n              <div className=\"relative w-32 h-32\">\n                <div className=\"absolute inset-0 rounded-full border-8 border-gray-200 dark:border-gray-700\" />\n                {/* Simulação de gráfico de pizza */}\n                <div className=\"absolute inset-0 rounded-full border-8 border-red-500\" \n                     style={{ \n                       clipPath: 'polygon(50% 50%, 50% 0%, 100% 0%, 100% 50%)' \n                     }} />\n                <div className=\"absolute inset-0 flex items-center justify-center\">\n                  <div className=\"text-center\">\n                    <p className=\"text-lg font-bold text-gray-900 dark:text-white\">\n                      {data.failedTests}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Total\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  const MaintenanceReport = () => {\n    const data = reportData.maintenance;\n    \n    return (\n      <div className=\"space-y-6\">\n        {/* Métricas Principais */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <MetricCard\n            title=\"Total de Manutenções\"\n            value={data.totalMaintenance}\n            change=\"+3\"\n            changeType=\"increase\"\n            icon={Cog6ToothIcon}\n            color=\"blue\"\n          />\n          <MetricCard\n            title=\"Preventivas\"\n            value={data.preventive}\n            change=\"+2\"\n            changeType=\"increase\"\n            icon={CheckCircleIcon}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Corretivas\"\n            value={data.corrective}\n            change=\"+1\"\n            changeType=\"decrease\"\n            icon={ExclamationTriangleIcon}\n            color=\"red\"\n          />\n          <MetricCard\n            title=\"Custo Total\"\n            value={formatCurrency(data.maintenanceCost)}\n            change=\"-R$ 5.2k\"\n            changeType=\"increase\"\n            icon={DocumentChartBarIcon}\n            color=\"yellow\"\n            onClick={() => setShowReportsPopup(true)}\n          />\n        </div>\n        \n        {/* Planejadas vs Não Planejadas */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Manutenções Planejadas vs Não Planejadas\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Planejadas</span>\n                <span className=\"text-sm font-medium text-green-600 dark:text-green-400\">\n                  {data.plannedVsUnplanned.planned}%\n                </span>\n              </div>\n              <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3\">\n                <div \n                  className=\"bg-green-500 h-3 rounded-full transition-all duration-300\"\n                  style={{ width: `${data.plannedVsUnplanned.planned}%` }}\n                />\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Não Planejadas</span>\n                <span className=\"text-sm font-medium text-red-600 dark:text-red-400\">\n                  {data.plannedVsUnplanned.unplanned}%\n                </span>\n              </div>\n              <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3\">\n                <div \n                  className=\"bg-red-500 h-3 rounded-full transition-all duration-300\"\n                  style={{ width: `${data.plannedVsUnplanned.unplanned}%` }}\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex items-center justify-center\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n                  {data.avgDowntime}h\n                </div>\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  Tempo médio de parada\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Manutenção por Máquina */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Manutenção por Máquina\n          </h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Máquina\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Preventivas\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Corretivas\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Custo\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                {data.maintenanceByMachine.map((machine, index) => {\n                  const ratio = machine.preventive / (machine.preventive + machine.corrective);\n                  \n                  return (\n                    <tr key={index}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                        {machine.machine}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                        {machine.preventive}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                        {machine.corrective}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                        {formatCurrency(machine.cost)}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={cn(\n                          'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',\n                          ratio >= 0.8 \n                            ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                            : ratio >= 0.6\n                            ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400'\n                            : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n                        )}>\n                          {ratio >= 0.8 ? 'Excelente' :\n                           ratio >= 0.6 ? 'Bom' : 'Atenção'}\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  const OperatorsReport = () => {\n    const data = reportData.operators;\n    \n    return (\n      <div className=\"space-y-6\">\n        {/* Métricas Principais */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <MetricCard\n            title=\"Total de Operadores\"\n            value={data.totalOperators}\n            change=\"+2\"\n            changeType=\"increase\"\n            icon={UserGroupIcon}\n            color=\"blue\"\n          />\n          <MetricCard\n            title=\"Operadores Ativos\"\n            value={data.activeOperators}\n            change=\"+1\"\n            changeType=\"increase\"\n            icon={CheckCircleIcon}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Produtividade Média\"\n            value={`${data.avgProductivity}%`}\n            change=\"+1.2%\"\n            changeType=\"increase\"\n            icon={ArrowTrendingUpIcon}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Horas Extras\"\n            value={`${data.overtimeHours}h`}\n            change=\"-12h\"\n            changeType=\"increase\"\n            icon={ClockIcon}\n            color=\"yellow\"\n          />\n        </div>\n        \n        {/* Performance por Turno */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Performance por Turno\n          </h3>\n          <div className=\"space-y-4\">\n            {data.shiftPerformance.map((shift, index) => (\n              <div key={index} className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {shift.shift}\n                    </h4>\n                    <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      {shift.operators} operadores\n                    </span>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <span className=\"text-gray-500 dark:text-gray-400\">Produtividade: </span>\n                      <span className=\"font-medium text-gray-900 dark:text-white\">\n                        {shift.avgProductivity}%\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-500 dark:text-gray-400\">Produção: </span>\n                      <span className=\"font-medium text-gray-900 dark:text-white\">\n                        {formatNumber(shift.production)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        {/* Top Operadores */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Top Operadores\n          </h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Operador\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Turno\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Produtividade\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Horas\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Testes\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                {data.operatorPerformance.map((operator, index) => (\n                  <tr key={index}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                      {operator.name}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                      {operator.shift}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-16 bg-gray-200 dark:bg-gray-700 rounded-full h-2 mr-2\">\n                          <div \n                            className={cn(\n                              'h-2 rounded-full',\n                              operator.productivity >= 97 ? 'bg-green-500' :\n                              operator.productivity >= 94 ? 'bg-yellow-500' : 'bg-red-500'\n                            )}\n                            style={{ width: `${operator.productivity}%` }}\n                          />\n                        </div>\n                        <span>{operator.productivity}%</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                      {operator.hours}h\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                      {operator.tests}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  const renderReport = () => {\n    switch (selectedReport) {\n      case 'production':\n        return <ProductionReport />;\n      case 'quality':\n        return <QualityReport />;\n      case 'maintenance':\n        return <MaintenanceReport />;\n      case 'operators':\n        return <OperatorsReport />;\n      default:\n        return <ProductionReport />;\n    }\n  };\n  \n  return (\n    <>\n      <Helmet>\n        <title>Relatórios - Sistema ZARA</title>\n        <meta name=\"description\" content=\"Relatórios e análises do Sistema ZARA\" />\n      </Helmet>\n      \n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              Relatórios\n            </h1>\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n              Análises e métricas de performance do sistema\n            </p>\n          </div>\n          \n          <div className=\"mt-4 sm:mt-0 flex items-center space-x-2\">\n\n            <button\n              onClick={handlePrint}\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n            >\n              <PrinterIcon className=\"h-4 w-4 mr-2\" />\n              Imprimir\n            </button>\n            \n            <div className=\"relative\">\n              <select\n                onChange={(e) => handleExport(e.target.value)}\n                className=\"appearance-none bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 py-2 px-4 pr-8 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"\">Exportar</option>\n                <option value=\"pdf\">PDF</option>\n                <option value=\"excel\">Excel</option>\n                <option value=\"csv\">CSV</option>\n              </select>\n              <ArrowDownTrayIcon className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\n            </div>\n          </div>\n        </div>\n        \n        {/* Filtros */}\n        <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center space-y-4 sm:space-y-0 sm:space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <CalendarDaysIcon className=\"h-4 w-4 text-gray-400\" />\n                <select\n                  value={dateRange}\n                  onChange={(e) => setDateRange(e.target.value)}\n                  className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"TODAY\">Hoje</option>\n                  <option value=\"WEEK\">Esta Semana</option>\n                  <option value=\"MONTH\">Este Mês</option>\n                  <option value=\"QUARTER\">Este Trimestre</option>\n                  <option value=\"YEAR\">Este Ano</option>\n                </select>\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <CogIcon className=\"h-4 w-4 text-gray-400\" />\n                <select\n                  value={selectedMachine}\n                  onChange={(e) => setSelectedMachine(e.target.value)}\n                  className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"ALL\">Todas as Máquinas</option>\n                  {mockMachines.map(machine => (\n                    <option key={machine.id} value={machine.id}>\n                      {machine.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              {(user?.role === 'ADMIN' || user?.role === 'MANAGER') && (\n                <div className=\"flex items-center space-x-2\">\n                  <UserGroupIcon className=\"h-4 w-4 text-gray-400\" />\n                  <select\n                    value={selectedOperator}\n                    onChange={(e) => setSelectedOperator(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"ALL\">Todos os Operadores</option>\n                    {operators.map(operator => (\n                      <option key={operator.id} value={operator.id}>\n                        {operator.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              )}\n            </div>\n            \n            {/* Status de conexão */}\n            <div className={cn(\n              'flex items-center space-x-2 px-3 py-1 rounded-full text-xs font-medium',\n              isConnected \n                ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n            )}>\n              <div className={cn(\n                'h-1.5 w-1.5 rounded-full',\n                isConnected ? 'bg-green-500' : 'bg-red-500'\n              )} />\n              <span>{isConnected ? 'Online' : 'Offline'}</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Seletor de Relatórios */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {reportTypes.map((report) => {\n            const Icon = report.icon;\n            const isSelected = selectedReport === report.id;\n            \n            return (\n              <motion.button\n                key={report.id}\n                onClick={() => setSelectedReport(report.id)}\n                className={cn(\n                  'p-4 rounded-lg border-2 text-left transition-all duration-200',\n                  isSelected\n                    ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\n                    : 'border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 hover:border-gray-300 dark:hover:border-gray-600'\n                )}\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div className={cn(\n                    'p-2 rounded-lg',\n                    isSelected\n                      ? 'bg-blue-100 dark:bg-blue-900/40'\n                      : 'bg-gray-100 dark:bg-gray-700'\n                  )}>\n                    <Icon className={cn(\n                      'h-6 w-6',\n                      isSelected\n                        ? 'text-blue-600 dark:text-blue-400'\n                        : 'text-gray-600 dark:text-gray-400'\n                    )} />\n                  </div>\n                  <div>\n                    <h3 className={cn(\n                      'font-medium',\n                      isSelected\n                        ? 'text-blue-900 dark:text-blue-100'\n                        : 'text-gray-900 dark:text-white'\n                    )}>\n                      {report.name}\n                    </h3>\n                    <p className={cn(\n                      'text-sm',\n                      isSelected\n                        ? 'text-blue-600 dark:text-blue-300'\n                        : 'text-gray-500 dark:text-gray-400'\n                    )}>\n                      {report.description}\n                    </p>\n                  </div>\n                </div>\n              </motion.button>\n            );\n          })}\n        </div>\n        \n        {/* Conteúdo do Relatório */}\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={selectedReport}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.2 }}\n          >\n            {loading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n              </div>\n            ) : (\n              renderReport()\n            )}\n          </motion.div>\n        </AnimatePresence>\n      </div>\n      \n      {/* Popups */}\n      <DataAnalysisPopup\n          isOpen={showDataAnalysisPopup}\n          onClose={() => setShowDataAnalysisPopup(false)}\n        />\n      <ReportsPopup\n          isOpen={showReportsPopup}\n          onClose={() => setShowReportsPopup(false)}\n        />\n    </>\n  );\n};\n\nexport default Reports;"],"names":["Reports","selectedReport","setSelectedReport","useState","dateRange","setDateRange","selectedMachine","setSelectedMachine","selectedOperator","setSelectedOperator","loading","setLoading","showDataAnalysisPopup","setShowDataAnalysisPopup","showReportsPopup","setShowReportsPopup","user","useAuth","isConnected","useSocket","machines","useMachineStatus","filterMachinesByPermissions","useMachinePermissions","reportsRealTimeData","setReportsRealTimeData","fetchReportsProductionData","response","data","filteredMachines","runningMachines","m","machine","error","useEffect","interval","fetchReportData","headers","productionData","qualityData","machineData","maintenanceData","operatorData","setReportData","prevData","_a","value","index","_b","_c","_d","_e","date","_f","op","sum","reportData","reportTypes","ChartBarIcon","BeakerIcon","Cog6ToothIcon","UserGroupIcon","mockMachines","operators","handleExport","format","handlePrint","MetricCard","title","change","changeType","Icon","color","onClick","colorClasses","jsx","cn","jsxs","ArrowTrendingUpIcon","ArrowTrendingDownIcon","ProductionReport","formatNumber","ClockIcon","CheckCircleIcon","day","height","d","targetHeight","QualityReport","ExclamationTriangleIcon","type","passRate","defect","MaintenanceReport","formatCurrency","DocumentChartBarIcon","ratio","OperatorsReport","shift","operator","renderReport","Fragment","Helmet","PrinterIcon","e","ArrowDownTrayIcon","CalendarDaysIcon","CogIcon","report","isSelected","motion","AnimatePresence","DataAnalysisPopup","ReportsPopup"],"mappings":"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"}
{"version":3,"file":"MachineDetail-BkJQ789y.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/ArrowPathIcon.js","../../src/components/ProductionSpeedControl.jsx","../../src/components/ProductionMetrics.jsx","../../src/components/MachineOperationControls.jsx","../../src/pages/MachineDetail.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowPathIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowPathIcon);\nexport default ForwardRef;","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { CogIcon, CheckIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../hooks/useAuth';\nimport { toast } from 'react-hot-toast';\n\nconst ProductionSpeedControl = ({ machine, onSpeedUpdate }) => {\n  const { user } = useAuth();\n  const [isEditing, setIsEditing] = useState(false);\n  const [speed, setSpeed] = useState(machine?.productionSpeed || 0);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  // Verificar se o usuário tem permissão para alterar velocidade\n  // Apenas LEADER, MANAGER e ADMIN podem alterar velocidade de produção\n  const canEditSpeed = ['LEADER', 'MANAGER', 'ADMIN'].includes(user?.role);\n\n  const handleSave = async () => {\n    if (!speed || speed <= 0) {\n      toast.error('Velocidade inválida');\n      return;\n    }\n\n    setIsUpdating(true);\n    try {\n      const response = await fetch(`/api/machines/${machine.id}/production-speed`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({ productionSpeed: parseInt(speed) })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        \n        if (response.status === 403) {\n          toast.error('Sem permissão');\n          throw new Error('INSUFFICIENT_PERMISSION');\n        }\n        \n        toast.error('Erro');\n        throw new Error(errorData.message || 'Erro ao atualizar velocidade');\n      }\n\n      const data = await response.json();\n      toast.success('Salvo');\n      setIsEditing(false);\n      \n      if (onSpeedUpdate) {\n        onSpeedUpdate(data.machine);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar velocidade:', error);\n      \n      // Verificar se é erro de permissão\n      if (error.message && error.message.includes('403')) {\n        toast.error('Sem permissão');\n      } else if (error.message && error.message.includes('INSUFFICIENT_PERMISSION')) {\n        toast.error('Sem permissão');\n      } else {\n        toast.error('Erro');\n      }\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setSpeed(machine?.productionSpeed || 0);\n    setIsEditing(false);\n  };\n\n  if (!canEditSpeed) {\n    return (\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n        <div className=\"flex items-center\">\n          <CogIcon className=\"h-5 w-5 text-gray-400 mr-2\" />\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n            Velocidade de Produção\n          </h3>\n        </div>\n        <div className=\"mt-4\">\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            {machine?.productionSpeed || 0} <span className=\"text-sm font-normal text-gray-500\">batidas/min</span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <CogIcon className=\"h-5 w-5 text-blue-500 mr-2\" />\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n            Velocidade de Produção\n          </h3>\n        </div>\n        {!isEditing && (\n          <button\n            onClick={() => setIsEditing(true)}\n            className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 dark:bg-blue-900/20 dark:text-blue-400 dark:hover:bg-blue-900/30 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            Editar\n          </button>\n        )}\n      </div>\n\n      <div className=\"mt-4\">\n        {isEditing ? (\n          <motion.div\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"space-y-4\"\n          >\n            <div>\n              <label htmlFor=\"speed\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                Batidas por minuto\n              </label>\n              <input\n                type=\"number\"\n                id=\"speed\"\n                min=\"1\"\n                max=\"1000\"\n                value={speed}\n                onChange={(e) => setSpeed(e.target.value)}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Ex: 120\"\n              />\n              <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n                Velocidade atual: {machine?.productionSpeed || 0} batidas/min\n              </p>\n            </div>\n\n            <div className=\"flex space-x-2\">\n              <button\n                onClick={handleSave}\n                disabled={isUpdating || !speed || speed <= 0}\n                className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <CheckIcon className=\"h-4 w-4 mr-1\" />\n                {isUpdating ? 'Salvando...' : 'Salvar'}\n              </button>\n              <button\n                onClick={handleCancel}\n                disabled={isUpdating}\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                <XMarkIcon className=\"h-4 w-4 mr-1\" />\n                Cancelar\n              </button>\n            </div>\n          </motion.div>\n        ) : (\n          <div>\n            <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n              {machine?.productionSpeed || 0}\n              <span className=\"text-lg font-normal text-gray-500 ml-2\">batidas/min</span>\n            </p>\n            <div className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">\n              <p>Produção estimada por hora: <span className=\"font-medium\">{((machine?.productionSpeed || 0) * 60).toLocaleString()}</span> batidas</p>\n              <p>Produção estimada por turno (8h): <span className=\"font-medium\">{((machine?.productionSpeed || 0) * 60 * 8).toLocaleString()}</span> batidas</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductionSpeedControl;","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  ChartBarIcon,\n  ClockIcon,\n  CogIcon,\n  ExclamationTriangleIcon,\n  ArrowPathIcon\n} from '@heroicons/react/24/outline';\nimport { useAuth } from '@/hooks/useAuth';\nimport { useRealTimeProduction } from '@/hooks/useRealTimeProduction';\nimport { toast } from 'react-hot-toast';\n\nconst ProductionMetrics = ({ machineId, machine, refreshTrigger = 0 }) => {\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [currentShift, setCurrentShift] = useState(null);\n  const [dailyProduction, setDailyProduction] = useState(null);\n  const [error, setError] = useState(null);\n  \n  // Hook para produção em tempo real\n  const realTimeProduction = useRealTimeProduction(machine, 1000);\n\n  const fetchProductionData = async () => {\n    if (!machineId) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const token = localStorage.getItem('token');\n      const headers = {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n\n      // Buscar produção do turno atual\n      const shiftResponse = await fetch(\n        `/api/machines/${machineId}/production/current-shift`,\n        { headers }\n      );\n      \n      if (!shiftResponse.ok) {\n        throw new Error('Erro ao buscar produção do turno');\n      }\n      \n      const shiftData = await shiftResponse.json();\n      setCurrentShift(shiftData.data);\n\n      // Buscar produção diária\n      const dailyResponse = await fetch(\n        `/api/machines/${machineId}/production/daily`,\n        { headers }\n      );\n      \n      if (!dailyResponse.ok) {\n        throw new Error('Erro ao buscar produção diária');\n      }\n      \n      const dailyData = await dailyResponse.json();\n      setDailyProduction(dailyData.data);\n      \n    } catch (err) {\n      console.error('Erro ao buscar dados de produção:', err);\n      setError(err.message);\n      toast.error('Erro ao carregar dados de produção');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchProductionData();\n  }, [machineId, refreshTrigger]);\n\n  const formatTime = (minutes) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    return `${hours}h ${mins}m`;\n  };\n\n  const getEfficiencyColor = (efficiency) => {\n    if (efficiency >= 80) return 'text-green-600';\n    if (efficiency >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const getEfficiencyBgColor = (efficiency) => {\n    if (efficiency >= 80) return 'bg-green-100';\n    if (efficiency >= 60) return 'bg-yellow-100';\n    return 'bg-red-100';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <div className=\"flex items-center justify-center h-32\">\n          <ArrowPathIcon className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          <span className=\"ml-2 text-gray-500\">Carregando métricas...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <div className=\"flex items-center justify-center h-32 text-red-500\">\n          <ExclamationTriangleIcon className=\"h-8 w-8\" />\n          <span className=\"ml-2\">Erro ao carregar métricas</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Produção do Turno Atual */}\n      {currentShift && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\"\n        >\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n              <ClockIcon className=\"h-5 w-5 mr-2 text-blue-500\" />\n              Turno Atual\n            </h3>\n            <button\n              onClick={fetchProductionData}\n              className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n              title=\"Atualizar dados\"\n            >\n              <ArrowPathIcon className=\"h-4 w-4\" />\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600\">Produção Atual</p>\n                  <p className=\"text-2xl font-bold text-blue-600\">\n                    {realTimeProduction.currentProduction}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">peças produzidas</p>\n                </div>\n                <ChartBarIcon className=\"h-8 w-8 text-blue-500\" />\n              </div>\n            </div>\n\n            <div className=\"bg-green-50 p-4 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600\">Eficiência</p>\n                  <p className={`text-2xl font-bold ${\n                    getEfficiencyColor(realTimeProduction.efficiency)\n                  }`}>\n                    {realTimeProduction.efficiency}%\n                  </p>\n                  <p className=\"text-xs text-gray-500\">tempo real</p>\n                </div>\n                <CogIcon className=\"h-8 w-8 text-green-500\" />\n              </div>\n            </div>\n\n            <div className=\"bg-purple-50 p-4 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600\">Tempo Funcionando</p>\n                  <p className=\"text-2xl font-bold text-purple-600\">\n                    {realTimeProduction.runningTimeFormatted || '0h 0m'}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">turno atual</p>\n                </div>\n                <ClockIcon className=\"h-8 w-8 text-purple-500\" />\n              </div>\n            </div>\n\n            <div className=\"bg-orange-50 p-4 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600\">Velocidade Atual</p>\n                  <p className=\"text-2xl font-bold text-orange-600\">\n                    {realTimeProduction.currentSpeed} pç/min\n                  </p>\n                  <p className={`text-xs ${\n                    realTimeProduction.isRunning ? 'text-green-600' : 'text-red-600'\n                  }`}>\n                    {realTimeProduction.isRunning ? 'Funcionando' : 'Parada'}\n                  </p>\n                </div>\n                <ArrowPathIcon className=\"h-8 w-8 text-orange-500\" />\n              </div>\n            </div>\n          </div>\n\n          {/* Breakdown de Status */}\n          {currentShift.statusBreakdown && currentShift.statusBreakdown.length > 0 && (\n            <div className=\"mt-4\">\n              <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Distribuição do Tempo</h4>\n              <div className=\"flex rounded-lg overflow-hidden h-3 bg-gray-200\">\n                {currentShift.statusBreakdown.map((status, index) => {\n                  let bgColor = 'bg-gray-400';\n                  if (status.status === 'FUNCIONANDO') bgColor = 'bg-green-500';\n                  else if (status.status === 'PARADA') bgColor = 'bg-red-500';\n                  else if (status.status === 'MANUTENCAO') bgColor = 'bg-yellow-500';\n                  \n                  return (\n                    <div\n                      key={index}\n                      className={`${bgColor}`}\n                      style={{ width: `${status.percentage}%` }}\n                      title={`${status.status}: ${formatTime(status.minutes)} (${status.percentage}%)`}\n                    />\n                  );\n                })}\n              </div>\n              <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                {currentShift.statusBreakdown.map((status, index) => (\n                  <span key={index}>\n                    {status.status}: {status.percentage}%\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n        </motion.div>\n      )}\n\n      {/* Produção Diária - Dados Reais */}\n      {realTimeProduction && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n          className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\"\n        >\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n              <ChartBarIcon className=\"h-5 w-5 mr-2 text-green-500\" />\n              Produção Diária\n            </h3>\n            <div className=\"text-sm text-gray-500\">\n              {new Date().toLocaleDateString('pt-BR')} - Dados em Tempo Real\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-green-600\">\n                {Math.floor(realTimeProduction.currentProduction).toLocaleString()}\n              </div>\n              <div className=\"text-sm text-gray-500\">Total de Peças</div>\n              <div className=\"text-xs text-green-600 mt-1\">\n                {realTimeProduction.isRunning ? `+${realTimeProduction.currentSpeed}/min` : 'Parada'}\n              </div>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className={`text-3xl font-bold ${getEfficiencyColor(realTimeProduction.efficiency)}`}>\n                {realTimeProduction.efficiency}%\n              </div>\n              <div className=\"text-sm text-gray-500\">Eficiência Atual</div>\n              <div className={`text-xs mt-1 ${getEfficiencyColor(realTimeProduction.efficiency)}`}>\n                {realTimeProduction.efficiency >= 80 ? 'Excelente' : \n                 realTimeProduction.efficiency >= 60 ? 'Boa' : 'Baixa'}\n              </div>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">\n                {realTimeProduction.runningTimeFormatted || formatTime(realTimeProduction.runningTime)}\n              </div>\n              <div className=\"text-sm text-gray-500\">Tempo Ativo</div>\n              <div className=\"text-xs text-blue-600 mt-1\">\n                {realTimeProduction.isRunning ? 'Em funcionamento' : 'Parada'}\n              </div>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-orange-600\">\n                {machine?.productionSpeed || 0}/min\n              </div>\n              <div className=\"text-sm text-gray-500\">Velocidade Atual</div>\n              <div className=\"text-xs text-orange-600 mt-1\">\n                Configurada: {machine?.productionSpeed || 0} peças/min\n              </div>\n            </div>\n          </div>\n\n          {/* Gráfico de Eficiência */}\n          <div className=\"mt-6\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium text-gray-700\">Eficiência em Tempo Real</span>\n              <span className={`text-sm font-semibold ${getEfficiencyColor(realTimeProduction.efficiency)}`}>\n                {realTimeProduction.efficiency}%\n              </span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-3\">\n              <div\n                className={`h-3 rounded-full transition-all duration-500 ${\n                  realTimeProduction.efficiency >= 80 ? 'bg-green-500' :\n                  realTimeProduction.efficiency >= 60 ? 'bg-yellow-500' : 'bg-red-500'\n                }`}\n                style={{ width: `${Math.min(realTimeProduction.efficiency, 100)}%` }}\n              />\n            </div>\n            <div className=\"flex justify-between text-xs text-gray-500 mt-2\">\n              <span>0%</span>\n              <span className=\"text-gray-700\">Meta: 80%</span>\n              <span>100%</span>\n            </div>\n          </div>\n\n          {/* Indicador de Status */}\n          <div className=\"mt-4 p-3 rounded-lg bg-gray-50\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div className={`w-3 h-3 rounded-full mr-2 ${\n                  realTimeProduction.isRunning ? 'bg-green-500 animate-pulse' : 'bg-red-500'\n                }`}></div>\n                <span className=\"text-sm font-medium text-gray-700\">\n                  Status: {realTimeProduction.isRunning ? 'Funcionando' : 'Parada'}\n                </span>\n              </div>\n              <div className=\"text-xs text-gray-500\">\n                Última atualização: {realTimeProduction.lastUpdate ? \n                  new Date(realTimeProduction.lastUpdate).toLocaleTimeString('pt-BR') : 'N/A'}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default ProductionMetrics;","import React, { useState } from 'react';\nimport { PlayIcon, StopIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '@/hooks/useAuth';\nimport { useMachinePermissions } from '@/hooks/useMachinePermissions';\nimport { cn } from '@/lib/utils';\n\nconst MachineOperationControls = ({ machine, onOperationChange }) => {\n  const { user } = useAuth();\n  const { hasPermissionForMachine } = useMachinePermissions();\n  const [loading, setLoading] = useState(false);\n  const [notes, setNotes] = useState('');\n  const [showNotesInput, setShowNotesInput] = useState(false);\n\n  // Verificar se o usuário pode operar esta máquina\n  const canOperate = hasPermissionForMachine(machine.id, 'canOperate');\n  \n  // Verificar se a máquina tem operação ativa\n  const hasActiveOperation = machine.currentOperation && \n    (machine.currentOperation.status === 'ACTIVE' || machine.currentOperation.status === 'FUNCIONANDO');\n  \n  // Verificar se o usuário atual é o operador da máquina\n  const isCurrentOperator = hasActiveOperation && machine.currentOperation.userId === user?.id;\n  \n  // Verificar se pode iniciar operação (máquina parada e usuário tem permissão)\n  const canStartOperation = canOperate && !hasActiveOperation && ['STOPPED', 'PARADA'].includes(machine.status);\n  \n  // Verificar se pode parar operação (usuário é o operador atual ou é admin/manager)\n  const canStopOperation = hasActiveOperation && (isCurrentOperator || ['ADMIN', 'MANAGER'].includes(user?.role));\n\n  const handleStartOperation = async () => {\n    if (!canStartOperation) return;\n    \n    setLoading(true);\n    try {\n      const response = await fetch(`/api/machines/${machine.id}/start-operation`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({ notes: notes.trim() || undefined })\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Erro ao iniciar operação');\n      }\n\n      // Notificar o componente pai sobre a mudança\n      if (onOperationChange) {\n        onOperationChange({\n          ...machine,\n          status: 'FUNCIONANDO',\n          currentOperation: data.data,\n          operator: user.name\n        });\n      }\n\n      setNotes('');\n      setShowNotesInput(false);\n      \n      // Mostrar mensagem de sucesso (você pode implementar um toast aqui)\n      console.log('Operação iniciada com sucesso');\n      \n    } catch (error) {\n      console.error('Erro ao iniciar operação:', error);\n      alert(error.message || 'Erro ao iniciar operação');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStopOperation = async () => {\n    if (!canStopOperation) return;\n    \n    setLoading(true);\n    try {\n      const response = await fetch(`/api/machines/${machine.id}/end-operation`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({ notes: notes.trim() || undefined })\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Erro ao finalizar operação');\n      }\n\n      // Notificar o componente pai sobre a mudança\n      if (onOperationChange) {\n        onOperationChange({\n          ...machine,\n          status: 'STOPPED',\n          currentOperation: null,\n          operator: 'Não atribuído'\n        });\n      }\n\n      setNotes('');\n      setShowNotesInput(false);\n      \n      // Mostrar mensagem de sucesso\n      console.log('Operação finalizada com sucesso');\n      \n    } catch (error) {\n      console.error('Erro ao finalizar operação:', error);\n      alert(error.message || 'Erro ao finalizar operação');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Se o usuário não tem permissão para operar, não mostrar controles\n  if (!canOperate) {\n    return null;\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n        Controle de Operação\n      </h3>\n      \n      <div className=\"space-y-4\">\n        {/* Status atual */}\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Status atual:\n          </span>\n          <span className={cn(\n            'px-2 py-1 rounded-full text-xs font-medium',\n            hasActiveOperation \n              ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n              : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'\n          )}>\n            {hasActiveOperation ? 'Em Operação' : 'Parada'}\n          </span>\n        </div>\n\n        {/* Operador atual */}\n        {hasActiveOperation && (\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Operador:\n            </span>\n            <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n              {(() => {\n                const userName = machine.currentOperation.user?.name;\n                if (!userName || userName === 'div' || typeof userName !== 'string') {\n                  return 'Desconhecido';\n                }\n                return userName;\n              })()}\n            </span>\n          </div>\n        )}\n\n        {/* Campo de observações */}\n        {showNotesInput && (\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Observações (opcional)\n            </label>\n            <textarea\n              value={notes}\n              onChange={(e) => setNotes(e.target.value)}\n              placeholder=\"Digite observações sobre a operação...\"\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n        )}\n\n        {/* Botões de controle */}\n        <div className=\"flex space-x-3\">\n          {canStartOperation && (\n            <>\n              {!showNotesInput ? (\n                <button\n                  onClick={() => setShowNotesInput(true)}\n                  disabled={loading}\n                  className=\"flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 disabled:bg-green-400 text-white rounded-md text-sm font-medium transition-colors\"\n                >\n                  <PlayIcon className=\"h-4 w-4 mr-2\" />\n                  Iniciar Operação\n                </button>\n              ) : (\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={handleStartOperation}\n                    disabled={loading}\n                    className=\"flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 disabled:bg-green-400 text-white rounded-md text-sm font-medium transition-colors\"\n                  >\n                    {loading ? (\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\" />\n                    ) : (\n                      <PlayIcon className=\"h-4 w-4 mr-2\" />\n                    )}\n                    Confirmar Início\n                  </button>\n                  <button\n                    onClick={() => {\n                      setShowNotesInput(false);\n                      setNotes('');\n                    }}\n                    disabled={loading}\n                    className=\"px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded-md text-sm font-medium transition-colors\"\n                  >\n                    Cancelar\n                  </button>\n                </div>\n              )}\n            </>\n          )}\n\n          {canStopOperation && (\n            <>\n              {!showNotesInput ? (\n                <button\n                  onClick={() => setShowNotesInput(true)}\n                  disabled={loading}\n                  className=\"flex items-center px-4 py-2 bg-red-600 hover:bg-red-700 disabled:bg-red-400 text-white rounded-md text-sm font-medium transition-colors\"\n                >\n                  <StopIcon className=\"h-4 w-4 mr-2\" />\n                  Finalizar Operação\n                </button>\n              ) : (\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={handleStopOperation}\n                    disabled={loading}\n                    className=\"flex items-center px-4 py-2 bg-red-600 hover:bg-red-700 disabled:bg-red-400 text-white rounded-md text-sm font-medium transition-colors\"\n                  >\n                    {loading ? (\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\" />\n                    ) : (\n                      <StopIcon className=\"h-4 w-4 mr-2\" />\n                    )}\n                    Confirmar Finalização\n                  </button>\n                  <button\n                    onClick={() => {\n                      setShowNotesInput(false);\n                      setNotes('');\n                    }}\n                    disabled={loading}\n                    className=\"px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded-md text-sm font-medium transition-colors\"\n                  >\n                    Cancelar\n                  </button>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n\n        {/* Informações adicionais */}\n        {!canStartOperation && !canStopOperation && (\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 text-center py-2\">\n            {hasActiveOperation && !isCurrentOperator\n              ? 'Máquina em operação por outro usuário'\n              : 'Máquina não disponível para operação'\n            }\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MachineOperationControls;","import React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { motion } from 'framer-motion';\nimport {\n  ArrowLeftIcon,\n  Cog6ToothIcon,\n  ChartBarIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  ClockIcon,\n  WrenchScrewdriverIcon,\n  DocumentTextIcon,\n  PlayIcon,\n  StopIcon,\n  PauseIcon\n} from '@heroicons/react/24/outline';\n\n// Hooks\nimport { useAuth } from '@/hooks/useAuth';\nimport { useMachineStatus } from '@/hooks/useMachineStatus';\nimport { useMachinePermissions } from '@/hooks/useMachinePermissions';\n\n// Componentes\nimport LoadingSpinner from '@/components/ui/LoadingSpinner';\nimport ProductionSpeedControl from '@/components/ProductionSpeedControl';\nimport ProductionMetrics from '@/components/ProductionMetrics';\nimport MachineOperationControls from '@/components/MachineOperationControls';\nimport { cn } from '@/lib/utils';\n\nconst MachineDetail = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { hasPermissionForMachine, loading: permissionsLoading } = useMachinePermissions();\n  const [machine, setMachine] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [hasAccess, setHasAccess] = useState(false);\n\n  // Função para atualizar dados da máquina\n  const handleMachineUpdate = (updatedMachine) => {\n    setMachine(updatedMachine);\n  };\n\n  // Buscar dados reais da API\n  useEffect(() => {\n    const fetchMachineData = async () => {\n      try {\n        setLoading(true);\n        \n        // Aguardar carregamento das permissões antes de verificar\n        if (permissionsLoading) {\n          return;\n        }\n        \n        // Verificar permissões primeiro\n        const canView = hasPermissionForMachine(parseInt(id), 'canView');\n        if (!canView) {\n          setHasAccess(false);\n          setError('Você não tem permissão para visualizar esta máquina');\n          setLoading(false);\n          return;\n        }\n        \n        setHasAccess(true);\n        \n        const response = await fetch(`/api/machines/${id}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        \n        if (!response.ok) {\n          throw new Error('Erro ao carregar dados da máquina');\n        }\n        \n        const data = await response.json();\n        \n        if (data.success) {\n          // Extrair nome do operador de forma mais robusta\n          let operatorName = 'Não atribuído';\n          if (data.data.operations && data.data.operations.length > 0) {\n            const operation = data.data.operations[0];\n            if (operation.user && operation.user.name) {\n              operatorName = String(operation.user.name);\n            }\n          }\n          \n          // Transformar dados da API para o formato esperado pelo componente\n          const machineData = {\n            ...data.data,\n            // Mapear campos específicos se necessário\n            recentTests: data.data.qualityTests || [],\n            maintenanceHistory: data.data.teflonChanges || [],\n            currentOperation: data.data.operations?.[0] || null,\n            operator: operatorName,\n            // Dados padrão para campos que podem não existir na API\n            specifications: {\n              maxCapacity: 2000,\n              powerConsumption: '15 kW',\n              operatingTemp: '180-220°C',\n              pressure: '2.5 bar',\n              dimensions: '2.5m x 1.8m x 2.2m',\n              weight: '1500 kg'\n            },\n            production: {\n              current: 0, // Será calculado baseado nos dados reais\n              target: 2000,\n              shift: 'Turno 1'\n            },\n            efficiency: 0, // Será calculado baseado nos dados reais\n            alerts: [] // Será implementado quando houver sistema de alertas\n          };\n          \n          setMachine(machineData);\n        } else {\n          throw new Error(data.message || 'Erro ao carregar dados da máquina');\n        }\n      } catch (err) {\n        setError('Erro ao carregar dados da máquina');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (id && user && !permissionsLoading) {\n      fetchMachineData();\n    }\n  }, [id, user, hasPermissionForMachine, permissionsLoading]);\n\n  const getStatusConfig = (status) => {\n    const configs = {\n      FUNCIONANDO: {\n        label: 'Em Operação',\n        color: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400',\n        icon: PlayIcon,\n        iconColor: 'text-green-600 dark:text-green-400'\n      },\n      RUNNING: {\n        label: 'Em Operação',\n        color: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400',\n        icon: PlayIcon,\n        iconColor: 'text-green-600 dark:text-green-400'\n      },\n      PARADA: {\n        label: 'Parada',\n        color: 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300',\n        icon: StopIcon,\n        iconColor: 'text-gray-600 dark:text-gray-400'\n      },\n      STOPPED: {\n        label: 'Parada',\n        color: 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300',\n        icon: StopIcon,\n        iconColor: 'text-gray-600 dark:text-gray-400'\n      },\n      MANUTENCAO: {\n        label: 'Manutenção',\n        color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400',\n        icon: WrenchScrewdriverIcon,\n        iconColor: 'text-yellow-600 dark:text-yellow-400'\n      },\n      MAINTENANCE: {\n        label: 'Manutenção',\n        color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400',\n        icon: WrenchScrewdriverIcon,\n        iconColor: 'text-yellow-600 dark:text-yellow-400'\n      },\n      ERROR: {\n        label: 'Erro',\n        color: 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400',\n        icon: ExclamationTriangleIcon,\n        iconColor: 'text-red-600 dark:text-red-400'\n      },\n      FORA_DE_TURNO: {\n        label: 'Fora de Turno',\n        color: 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400',\n        icon: ClockIcon,\n        iconColor: 'text-blue-600 dark:text-blue-400'\n      },\n      OFF_SHIFT: {\n        label: 'Fora de Turno',\n        color: 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400',\n        icon: ClockIcon,\n        iconColor: 'text-blue-600 dark:text-blue-400'\n      }\n    };\n    return configs[status] || {\n      label: 'Desconhecido',\n      color: 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300',\n      icon: ClockIcon,\n      iconColor: 'text-gray-600 dark:text-gray-400'\n    };\n  };\n\n  const formatDateTime = (date) => {\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n\n  const getEfficiencyColor = (efficiency) => {\n    if (efficiency >= 95) return 'text-green-600 dark:text-green-400';\n    if (efficiency >= 85) return 'text-yellow-600 dark:text-yellow-400';\n    return 'text-red-600 dark:text-red-400';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error || !machine) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <ExclamationTriangleIcon className=\"mx-auto h-12 w-12 text-red-500 mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            {error || 'Máquina não encontrada'}\n          </h3>\n          {!hasAccess && error?.includes('permissão') && (\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n              Entre em contato com o gestor para solicitar acesso a esta máquina.\n            </p>\n          )}\n          <Link\n            to=\"/machines\"\n            className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\n            Voltar às Máquinas\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  const statusConfig = getStatusConfig(machine.status);\n  const StatusIcon = statusConfig.icon;\n\n  const tabs = [\n    { id: 'overview', label: 'Visão Geral', icon: ChartBarIcon },\n    { id: 'tests', label: 'Testes de Qualidade', icon: DocumentTextIcon },\n    { id: 'maintenance', label: 'Manutenção', icon: WrenchScrewdriverIcon },\n    { id: 'settings', label: 'Configurações', icon: Cog6ToothIcon }\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{machine.name} - Detalhes da Máquina - Sistema ZARA</title>\n        <meta name=\"description\" content={`Detalhes e monitoramento da ${machine.name}`} />\n      </Helmet>\n\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={() => navigate('/machines')}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n            >\n              <ArrowLeftIcon className=\"h-5 w-5\" />\n            </button>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {machine.name}\n              </h1>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                {machine.id} • {machine.model} • {machine.location}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-3\">\n            <span className={cn(\n              'inline-flex items-center px-3 py-1 rounded-full text-sm font-medium',\n              statusConfig.color\n            )}>\n              <StatusIcon className={cn('h-4 w-4 mr-2', statusConfig.iconColor)} />\n              {statusConfig.label}\n            </span>\n            \n            {machine.alerts && machine.alerts.length > 0 && (\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400\">\n                {machine.alerts.length} alerta{machine.alerts.length > 1 ? 's' : ''}\n              </span>\n            )}\n          </div>\n        </div>\n\n        {/* Métricas principais */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Eficiência</p>\n                <p className={cn('text-2xl font-bold', getEfficiencyColor(machine.efficiency))}>\n                  {machine.efficiency}%\n                </p>\n              </div>\n              <ChartBarIcon className=\"h-8 w-8 text-blue-500\" />\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Produção Atual</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {machine.production ? (machine.production.current || 0).toLocaleString() : '0'}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  Meta: {machine.production.target.toLocaleString()}\n                </p>\n              </div>\n              <PlayIcon className=\"h-8 w-8 text-green-500\" />\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Operador</p>\n                <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  {(() => {\n                    const operator = machine.operator;\n                    if (!operator || operator === 'div' || typeof operator !== 'string') {\n                      return 'Não atribuído';\n                    }\n                    return operator;\n                  })()}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {machine.production.shift}\n                </p>\n              </div>\n              <div className=\"h-8 w-8 bg-blue-100 dark:bg-blue-900/20 rounded-full flex items-center justify-center\">\n                <span className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">\n                  {(() => {\n                    const operator = machine.operator;\n                    if (!operator || operator === 'div' || typeof operator !== 'string') {\n                      return 'NA';\n                    }\n                    return operator.split(' ').map(n => n[0]).join('').toUpperCase();\n                  })()}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Próxima Manutenção</p>\n                <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  {Math.ceil((machine.nextMaintenance - new Date()) / (1000 * 60 * 60 * 24))} dias\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {formatDateTime(machine.nextMaintenance).split(' ')[0]}\n                </p>\n              </div>\n              <ClockIcon className=\"h-8 w-8 text-orange-500\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Alertas */}\n        {machine.alerts && machine.alerts.length > 0 && (\n          <div className=\"bg-red-50 dark:bg-red-900/10 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n            <div className=\"flex items-start space-x-3\">\n              <ExclamationTriangleIcon className=\"h-5 w-5 text-red-500 mt-0.5\" />\n              <div className=\"flex-1\">\n                <h3 className=\"text-sm font-medium text-red-800 dark:text-red-400 mb-2\">\n                  Alertas Ativos ({machine.alerts.length})\n                </h3>\n                <div className=\"space-y-2\">\n                  {machine.alerts.map((alert) => (\n                    <div key={alert.id} className=\"text-sm text-red-700 dark:text-red-300\">\n                      <span className=\"font-medium\">{alert.message}</span>\n                      <span className=\"text-red-500 dark:text-red-400 ml-2\">\n                        • {formatDateTime(alert.timestamp)}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Tabs */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n          <div className=\"border-b border-gray-200 dark:border-gray-700\">\n            <nav className=\"flex space-x-8 px-6\">\n              {tabs.map((tab) => {\n                const TabIcon = tab.icon;\n                return (\n                  <button\n                    key={tab.id}\n                    onClick={() => setActiveTab(tab.id)}\n                    className={cn(\n                      'flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm transition-colors',\n                      activeTab === tab.id\n                        ? 'border-blue-500 text-blue-600 dark:text-blue-400'\n                        : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'\n                    )}\n                  >\n                    <TabIcon className=\"h-4 w-4\" />\n                    <span>{tab.label}</span>\n                  </button>\n                );\n              })}\n            </nav>\n          </div>\n\n          <div className=\"p-6\">\n            {activeTab === 'overview' && (\n              <div className=\"space-y-6\">\n                {/* Especificações */}\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                    Especificações Técnicas\n                  </h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Capacidade Máxima</p>\n                      <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                        {machine.specifications.maxCapacity.toLocaleString()} unidades/dia\n                      </p>\n                    </div>\n                    <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Consumo de Energia</p>\n                      <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                        {machine.specifications.powerConsumption}\n                      </p>\n                    </div>\n                    <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Temperatura Operacional</p>\n                      <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                        {machine.specifications.operatingTemp}\n                      </p>\n                    </div>\n                    <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Pressão</p>\n                      <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                        {machine.specifications.pressure}\n                      </p>\n                    </div>\n                    <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Dimensões</p>\n                      <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                        {machine.specifications.dimensions}\n                      </p>\n                    </div>\n                    <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Peso</p>\n                      <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                        {machine.specifications.weight}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Controles de Operação */}\n                 <MachineOperationControls \n                   machine={machine} \n                   onOperationChange={setMachine}\n                 />\n\n                {/* Controle de Velocidade de Produção */}\n                <ProductionSpeedControl \n                  machine={machine} \n                  onSpeedUpdate={handleMachineUpdate}\n                />\n\n                {/* Métricas de Produção */}\n                <ProductionMetrics \n                  machineId={machine.id}\n                  machine={machine}\n                  refreshTrigger={machine.updatedAt}\n                />\n              </div>\n            )}\n\n            {activeTab === 'tests' && (\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    Testes de Qualidade Recentes\n                  </h3>\n                  <Link\n                    to=\"/quality/new-test\"\n                    className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 transition-colors\"\n                  >\n                    Novo Teste\n                  </Link>\n                </div>\n                \n                <div className=\"space-y-3\">\n                  {machine.recentTests.map((test) => (\n                    <div key={test.id} className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"font-medium text-gray-900 dark:text-white\">\n                            Teste {test.id}\n                          </p>\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {formatDateTime(test.date)} • {test.operator}\n                          </p>\n                        </div>\n                        <div className=\"flex items-center space-x-3\">\n                          <span className={cn(\n                            'inline-flex items-center px-2 py-1 rounded-full text-xs font-medium',\n                            test.result === 'APPROVED'\n                              ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                              : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n                          )}>\n                            {test.result === 'APPROVED' ? (\n                              <CheckCircleIcon className=\"h-3 w-3 mr-1\" />\n                            ) : (\n                              <ExclamationTriangleIcon className=\"h-3 w-3 mr-1\" />\n                            )}\n                            {test.result === 'APPROVED' ? 'Aprovado' : 'Reprovado'}\n                          </span>\n                          <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {test.defects} defeito{test.defects !== 1 ? 's' : ''}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'maintenance' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Histórico de Manutenção\n                </h3>\n                \n                <div className=\"space-y-3\">\n                  {machine.maintenanceHistory.map((maintenance) => (\n                    <div key={maintenance.id} className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n                      <div className=\"flex items-start justify-between\">\n                        <div>\n                          <p className=\"font-medium text-gray-900 dark:text-white\">\n                            {maintenance.type}\n                          </p>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\n                            {maintenance.description}\n                          </p>\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n                            {formatDateTime(maintenance.date)} • {maintenance.technician} • {maintenance.duration}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'settings' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Configurações da Máquina\n                </h3>\n                \n                {(user?.role === 'ADMIN' || user?.role === 'MANAGER') ? (\n                  <div className=\"text-center py-8\">\n                    <Cog6ToothIcon className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                    <p className=\"text-gray-500 dark:text-gray-400\">\n                      Configurações avançadas em desenvolvimento\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-8\">\n                    <ExclamationTriangleIcon className=\"mx-auto h-12 w-12 text-yellow-400 mb-4\" />\n                    <p className=\"text-gray-500 dark:text-gray-400\">\n                      Você não tem permissão para acessar as configurações desta máquina.\n                    </p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MachineDetail;"],"names":["ArrowPathIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","ProductionSpeedControl","machine","onSpeedUpdate","user","useAuth","isEditing","setIsEditing","useState","speed","setSpeed","isUpdating","setIsUpdating","canEditSpeed","handleSave","toast","response","errorData","data","error","handleCancel","jsxs","jsx","CogIcon","motion","e","CheckIcon","XMarkIcon","ProductionMetrics","machineId","refreshTrigger","loading","setLoading","currentShift","setCurrentShift","dailyProduction","setDailyProduction","setError","realTimeProduction","useRealTimeProduction","fetchProductionData","headers","shiftResponse","shiftData","dailyResponse","dailyData","err","useEffect","formatTime","minutes","hours","mins","getEfficiencyColor","efficiency","ExclamationTriangleIcon","ClockIcon","ChartBarIcon","status","index","bgColor","MachineOperationControls","onOperationChange","hasPermissionForMachine","useMachinePermissions","notes","setNotes","showNotesInput","setShowNotesInput","canOperate","hasActiveOperation","isCurrentOperator","canStartOperation","canStopOperation","handleStartOperation","handleStopOperation","cn","userName","_a","Fragment","PlayIcon","StopIcon","MachineDetail","id","useParams","navigate","useNavigate","permissionsLoading","setMachine","activeTab","setActiveTab","hasAccess","setHasAccess","handleMachineUpdate","updatedMachine","operatorName","operation","machineData","getStatusConfig","WrenchScrewdriverIcon","formatDateTime","date","LoadingSpinner","Link","ArrowLeftIcon","statusConfig","StatusIcon","tabs","DocumentTextIcon","Cog6ToothIcon","Helmet","operator","n","alert","tab","TabIcon","test","CheckCircleIcon","maintenance"],"mappings":"8fACA,SAASA,GAAc,CACrB,MAAAC,EACA,QAAAC,EACA,GAAGC,CACL,EAAGC,EAAQ,CACT,OAAoBC,gBAAoB,MAAO,OAAO,OAAO,CAC3D,MAAO,6BACP,KAAM,OACN,QAAS,YACT,YAAa,IACb,OAAQ,eACR,cAAe,OACf,YAAa,OACb,IAAKD,EACL,kBAAmBF,CACvB,EAAKC,CAAK,EAAGF,EAAqBI,EAAAA,cAAoB,QAAS,CAC3D,GAAIH,CACR,EAAKD,CAAK,EAAI,KAAmBI,EAAAA,cAAoB,OAAQ,CACzD,cAAe,QACf,eAAgB,QAChB,EAAG,yKACP,CAAG,CAAC,CACJ,CACA,MAAMC,EAA2BC,EAAAA,WAAiBP,EAAa,EClBzDQ,GAAyB,CAAC,CAAE,QAAAC,EAAS,cAAAC,KAAoB,CAC7D,KAAM,CAAE,KAAAC,CAAA,EAASC,EAAA,EACX,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1C,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,UAASN,GAAA,YAAAA,EAAS,kBAAmB,CAAC,EAC1D,CAACS,EAAYC,CAAa,EAAIJ,EAAAA,SAAS,EAAK,EAI5CK,EAAe,CAAC,SAAU,UAAW,OAAO,EAAE,SAAST,GAAA,YAAAA,EAAM,IAAI,EAEjEU,EAAa,SAAY,CAC7B,GAAI,CAACL,GAASA,GAAS,EAAG,CACxBM,EAAM,MAAM,qBAAqB,EACjC,MACF,CAEAH,EAAc,EAAI,EAClB,GAAI,CACF,MAAMI,EAAW,MAAM,MAAM,iBAAiBd,EAAQ,EAAE,oBAAqB,CAC3E,OAAQ,MACR,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAU,aAAa,QAAQ,OAAO,CAAC,EAAA,EAE1D,KAAM,KAAK,UAAU,CAAE,gBAAiB,SAASO,CAAK,EAAG,CAAA,CAC1D,EAED,GAAI,CAACO,EAAS,GAAI,CAChB,MAAMC,EAAY,MAAMD,EAAS,KAAA,EAAO,MAAM,KAAO,CAAA,EAAG,EAExD,MAAIA,EAAS,SAAW,KACtBD,EAAM,MAAM,eAAe,EACrB,IAAI,MAAM,yBAAyB,IAG3CA,EAAM,MAAM,MAAM,EACZ,IAAI,MAAME,EAAU,SAAW,8BAA8B,EACrE,CAEA,MAAMC,EAAO,MAAMF,EAAS,KAAA,EAC5BD,EAAM,QAAQ,OAAO,EACrBR,EAAa,EAAK,EAEdJ,GACFA,EAAce,EAAK,OAAO,CAE9B,OAASC,EAAO,CACd,QAAQ,MAAM,gCAAiCA,CAAK,EAGhDA,EAAM,SAAWA,EAAM,QAAQ,SAAS,KAAK,EAC/CJ,EAAM,MAAM,eAAe,EAClBI,EAAM,SAAWA,EAAM,QAAQ,SAAS,yBAAyB,EAC1EJ,EAAM,MAAM,eAAe,EAE3BA,EAAM,MAAM,MAAM,CAEtB,QAAA,CACEH,EAAc,EAAK,CACrB,CACF,EAEMQ,EAAe,IAAM,CACzBV,GAASR,GAAA,YAAAA,EAAS,kBAAmB,CAAC,EACtCK,EAAa,EAAK,CACpB,EAEA,OAAKM,EAmBHQ,EAAAA,KAAC,MAAA,CAAI,UAAU,kDACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,CAAQ,UAAU,4BAAA,CAA6B,EAChDD,EAAAA,IAAC,KAAA,CAAG,UAAU,oDAAoD,SAAA,wBAAA,CAElE,CAAA,EACF,EACC,CAAChB,GACAgB,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMf,EAAa,EAAI,EAChC,UAAU,mRACX,SAAA,QAAA,CAAA,CAED,EAEJ,EAEAe,EAAAA,IAAC,MAAA,CAAI,UAAU,OACZ,SAAAhB,EACCe,EAAAA,KAACG,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAA,EAC1B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAA,EAC1B,UAAU,YAEV,SAAA,CAAAH,OAAC,MAAA,CACC,SAAA,CAAAC,MAAC,QAAA,CAAM,QAAQ,QAAQ,UAAU,6DAA6D,SAAA,qBAE9F,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,SACL,GAAG,QACH,IAAI,IACJ,IAAI,OACJ,MAAOb,EACP,SAAWgB,GAAMf,EAASe,EAAE,OAAO,KAAK,EACxC,UAAU,oNACV,YAAY,SAAA,CAAA,EAEdJ,EAAAA,KAAC,IAAA,CAAE,UAAU,gDAAgD,SAAA,CAAA,sBACxCnB,GAAA,YAAAA,EAAS,kBAAmB,EAAE,cAAA,CAAA,CACnD,CAAA,EACF,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAAA,KAAC,SAAA,CACC,QAASP,EACT,SAAUH,GAAc,CAACF,GAASA,GAAS,EAC3C,UAAU,kQAEV,SAAA,CAAAa,EAAAA,IAACI,GAAA,CAAU,UAAU,cAAA,CAAe,EACnCf,EAAa,cAAgB,QAAA,CAAA,CAAA,EAEhCU,EAAAA,KAAC,SAAA,CACC,QAASD,EACT,SAAUT,EACV,UAAU,2RAEV,SAAA,CAAAW,EAAAA,IAACK,EAAA,CAAU,UAAU,cAAA,CAAe,EAAE,UAAA,CAAA,CAAA,CAExC,CAAA,CACF,CAAA,CAAA,CAAA,SAGD,MAAA,CACC,SAAA,CAAAN,EAAAA,KAAC,IAAA,CAAE,UAAU,mDACV,SAAA,EAAAnB,GAAA,YAAAA,EAAS,kBAAmB,EAC7BoB,EAAAA,IAAC,OAAA,CAAK,UAAU,yCAAyC,SAAA,aAAA,CAAW,CAAA,EACtE,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,gDACb,SAAA,CAAAA,OAAC,IAAA,CAAE,SAAA,CAAA,+BAA4BC,EAAAA,IAAC,QAAK,UAAU,cAAiB,6BAAS,kBAAmB,GAAK,IAAI,eAAA,CAAe,CAAE,EAAO,UAAA,EAAQ,SACpI,IAAA,CAAE,SAAA,CAAA,qCAAkCA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAiB,YAAApB,GAAA,YAAAA,EAAS,kBAAmB,GAAK,GAAK,GAAG,eAAA,CAAe,CAAE,EAAO,UAAA,CAAA,CAAQ,CAAA,CAAA,CACjJ,CAAA,CAAA,CACF,CAAA,CAEJ,CAAA,EACF,EA7FEmB,EAAAA,KAAC,MAAA,CAAI,UAAU,kDACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,CAAQ,UAAU,4BAAA,CAA6B,EAChDD,EAAAA,IAAC,KAAA,CAAG,UAAU,oDAAoD,SAAA,wBAAA,CAElE,CAAA,EACF,QACC,MAAA,CAAI,UAAU,OACb,SAAAD,EAAAA,KAAC,IAAA,CAAE,UAAU,mDACV,SAAA,EAAAnB,GAAA,YAAAA,EAAS,kBAAmB,EAAE,IAACoB,EAAAA,IAAC,OAAA,CAAK,UAAU,oCAAoC,SAAA,aAAA,CAAW,CAAA,CAAA,CACjG,CAAA,CACF,CAAA,EACF,CAmFN,EC7JMM,GAAoB,CAAC,CAAE,UAAAC,EAAW,QAAA3B,EAAS,eAAA4B,EAAiB,KAAQ,CACxE,KAAM,CAAE,KAAA1B,CAAA,EAASC,EAAA,EACX,CAAC0B,EAASC,CAAU,EAAIxB,EAAAA,SAAS,EAAI,EACrC,CAACyB,EAAcC,CAAe,EAAI1B,EAAAA,SAAS,IAAI,EAC/C,CAAC2B,EAAiBC,CAAkB,EAAI5B,EAAAA,SAAS,IAAI,EACrD,CAACW,EAAOkB,CAAQ,EAAI7B,EAAAA,SAAS,IAAI,EAGjC8B,EAAqBC,GAAsBrC,EAAS,GAAI,EAExDsC,EAAsB,SAAY,CACtC,GAAKX,EAEL,CAAAG,EAAW,EAAI,EACfK,EAAS,IAAI,EAEb,GAAI,CAEF,MAAMI,EAAU,CACd,cAAiB,UAFL,aAAa,QAAQ,OAAO,CAER,GAChC,eAAgB,kBAAA,EAIZC,EAAgB,MAAM,MAC1B,iBAAiBb,CAAS,4BAC1B,CAAE,QAAAY,CAAA,CAAQ,EAGZ,GAAI,CAACC,EAAc,GACjB,MAAM,IAAI,MAAM,kCAAkC,EAGpD,MAAMC,EAAY,MAAMD,EAAc,KAAA,EACtCR,EAAgBS,EAAU,IAAI,EAG9B,MAAMC,EAAgB,MAAM,MAC1B,iBAAiBf,CAAS,oBAC1B,CAAE,QAAAY,CAAA,CAAQ,EAGZ,GAAI,CAACG,EAAc,GACjB,MAAM,IAAI,MAAM,gCAAgC,EAGlD,MAAMC,EAAY,MAAMD,EAAc,KAAA,EACtCR,EAAmBS,EAAU,IAAI,CAEnC,OAASC,EAAK,CACZ,QAAQ,MAAM,oCAAqCA,CAAG,EACtDT,EAASS,EAAI,OAAO,EACpB/B,EAAM,MAAM,oCAAoC,CAClD,QAAA,CACEiB,EAAW,EAAK,CAClB,EACF,EAEAe,EAAAA,UAAU,IAAM,CACdP,EAAA,CACF,EAAG,CAACX,EAAWC,CAAc,CAAC,EAE9B,MAAMkB,EAAcC,GAAY,CAC9B,MAAMC,EAAQ,KAAK,MAAMD,EAAU,EAAE,EAC/BE,EAAOF,EAAU,GACvB,MAAO,GAAGC,CAAK,KAAKC,CAAI,GAC1B,EAEMC,EAAsBC,GACtBA,GAAc,GAAW,iBACzBA,GAAc,GAAW,kBACtB,eAST,OAAItB,QAEC,MAAA,CAAI,UAAU,2DACb,SAAAV,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAC,EAAAA,IAAC7B,EAAA,CAAc,UAAU,oCAAA,CAAqC,EAC9D6B,EAAAA,IAAC,OAAA,CAAK,UAAU,qBAAqB,SAAA,wBAAA,CAAsB,CAAA,CAAA,CAC7D,CAAA,CACF,EAIAH,QAEC,MAAA,CAAI,UAAU,2DACb,SAAAE,EAAAA,KAAC,MAAA,CAAI,UAAU,qDACb,SAAA,CAAAC,EAAAA,IAACgC,EAAA,CAAwB,UAAU,SAAA,CAAU,EAC7ChC,EAAAA,IAAC,OAAA,CAAK,UAAU,OAAO,SAAA,2BAAA,CAAyB,CAAA,CAAA,CAClD,CAAA,CACF,EAKFD,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEZ,SAAA,CAAAY,GACCZ,EAAAA,KAACG,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAA,EAC1B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAA,EAC1B,UAAU,2DAEV,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,wDACZ,SAAA,CAAAC,EAAAA,IAACiC,EAAA,CAAU,UAAU,4BAAA,CAA6B,EAAE,aAAA,EAEtD,EACAjC,EAAAA,IAAC,SAAA,CACC,QAASkB,EACT,UAAU,0DACV,MAAM,kBAEN,SAAAlB,EAAAA,IAAC7B,EAAA,CAAc,UAAU,SAAA,CAAU,CAAA,CAAA,CACrC,EACF,EAEA4B,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,4BACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,iBAAc,EACnDA,EAAAA,IAAC,IAAA,CAAE,UAAU,mCACV,WAAmB,kBACtB,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,kBAAA,CAAgB,CAAA,EACvD,EACAA,EAAAA,IAACkC,EAAA,CAAa,UAAU,uBAAA,CAAwB,CAAA,CAAA,CAClD,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,6BACb,SAAAnC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,aAAU,EAC/CD,EAAAA,KAAC,KAAE,UAAW,sBACZ+B,EAAmBd,EAAmB,UAAU,CAClD,GACG,SAAA,CAAAA,EAAmB,WAAW,GAAA,EACjC,EACAhB,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,YAAA,CAAU,CAAA,EACjD,EACAA,EAAAA,IAACC,EAAA,CAAQ,UAAU,wBAAA,CAAyB,CAAA,CAAA,CAC9C,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,8BACb,SAAAF,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,oBAAiB,QACrD,IAAA,CAAE,UAAU,qCACV,SAAAgB,EAAmB,sBAAwB,QAC9C,EACAhB,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,aAAA,CAAW,CAAA,EAClD,EACAA,EAAAA,IAACiC,EAAA,CAAU,UAAU,yBAAA,CAA0B,CAAA,CAAA,CACjD,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,8BACb,SAAAlC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,mBAAgB,EACrDD,EAAAA,KAAC,IAAA,CAAE,UAAU,qCACV,SAAA,CAAAiB,EAAmB,aAAa,SAAA,EACnC,EACAhB,EAAAA,IAAC,IAAA,CAAE,UAAW,WACZgB,EAAmB,UAAY,iBAAmB,cACpD,GACG,SAAAA,EAAmB,UAAY,cAAgB,QAAA,CAClD,CAAA,EACF,EACAhB,EAAAA,IAAC7B,EAAA,CAAc,UAAU,yBAAA,CAA0B,CAAA,CAAA,CACrD,CAAA,CACF,CAAA,EACF,EAGCwC,EAAa,iBAAmBA,EAAa,gBAAgB,OAAS,GACrEZ,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,yCAAyC,SAAA,wBAAqB,EAC5EA,EAAAA,IAAC,OAAI,UAAU,kDACZ,WAAa,gBAAgB,IAAI,CAACmC,EAAQC,IAAU,CACnD,IAAIC,EAAU,cACd,OAAIF,EAAO,SAAW,cAAeE,EAAU,eACtCF,EAAO,SAAW,SAAUE,EAAU,aACtCF,EAAO,SAAW,eAAcE,EAAU,iBAGjDrC,EAAAA,IAAC,MAAA,CAEC,UAAW,GAAGqC,CAAO,GACrB,MAAO,CAAE,MAAO,GAAGF,EAAO,UAAU,GAAA,EACpC,MAAO,GAAGA,EAAO,MAAM,KAAKT,EAAWS,EAAO,OAAO,CAAC,KAAKA,EAAO,UAAU,IAAA,EAHvEC,CAAA,CAMX,CAAC,CAAA,CACH,EACApC,EAAAA,IAAC,MAAA,CAAI,UAAU,kDACZ,SAAAW,EAAa,gBAAgB,IAAI,CAACwB,EAAQC,IACzCrC,EAAAA,KAAC,OAAA,CACE,SAAA,CAAAoC,EAAO,OAAO,KAAGA,EAAO,WAAW,GAAA,CAAA,EAD3BC,CAEX,CACD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EAMLpB,GACCjB,EAAAA,KAACG,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAA,EAC1B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAA,EAC1B,WAAY,CAAE,MAAO,EAAA,EACrB,UAAU,2DAEV,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,wDACZ,SAAA,CAAAC,EAAAA,IAACkC,EAAA,CAAa,UAAU,6BAAA,CAA8B,EAAE,iBAAA,EAE1D,EACAnC,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACZ,SAAA,CAAA,IAAI,KAAA,EAAO,mBAAmB,OAAO,EAAE,wBAAA,CAAA,CAC1C,CAAA,EACF,EAEAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,oCACZ,SAAA,KAAK,MAAMgB,EAAmB,iBAAiB,EAAE,eAAA,CAAe,CACnE,EACAhB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,iBAAc,EACrDA,EAAAA,IAAC,MAAA,CAAI,UAAU,8BACZ,SAAAgB,EAAmB,UAAY,IAAIA,EAAmB,YAAY,OAAS,QAAA,CAC9E,CAAA,EACF,EAEAjB,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAA,EAAAA,KAAC,OAAI,UAAW,sBAAsB+B,EAAmBd,EAAmB,UAAU,CAAC,GACpF,SAAA,CAAAA,EAAmB,WAAW,GAAA,EACjC,EACAhB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,mBAAgB,QACtD,MAAA,CAAI,UAAW,gBAAgB8B,EAAmBd,EAAmB,UAAU,CAAC,GAC9E,SAAAA,EAAmB,YAAc,GAAK,YACtCA,EAAmB,YAAc,GAAK,MAAQ,OAAA,CACjD,CAAA,EACF,EAEAjB,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,mCACZ,SAAAgB,EAAmB,sBAAwBU,EAAWV,EAAmB,WAAW,CAAA,CACvF,EACAhB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,cAAW,QACjD,MAAA,CAAI,UAAU,6BACZ,SAAAgB,EAAmB,UAAY,mBAAqB,QAAA,CACvD,CAAA,EACF,EAEAjB,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,qCACZ,SAAA,EAAAnB,GAAA,YAAAA,EAAS,kBAAmB,EAAE,MAAA,EACjC,EACAoB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,mBAAgB,EACvDD,EAAAA,KAAC,MAAA,CAAI,UAAU,+BAA+B,SAAA,CAAA,iBAC9BnB,GAAA,YAAAA,EAAS,kBAAmB,EAAE,YAAA,CAAA,CAC9C,CAAA,CAAA,CACF,CAAA,EACF,EAGAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,oCAAoC,SAAA,2BAAwB,EAC5ED,EAAAA,KAAC,QAAK,UAAW,yBAAyB+B,EAAmBd,EAAmB,UAAU,CAAC,GACxF,SAAA,CAAAA,EAAmB,WAAW,GAAA,CAAA,CACjC,CAAA,EACF,EACAhB,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAW,gDACTgB,EAAmB,YAAc,GAAK,eACtCA,EAAmB,YAAc,GAAK,gBAAkB,YAC1D,GACA,MAAO,CAAE,MAAO,GAAG,KAAK,IAAIA,EAAmB,WAAY,GAAG,CAAC,GAAA,CAAI,CAAA,EAEvE,EACAjB,EAAAA,KAAC,MAAA,CAAI,UAAU,kDACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAA,IAAA,CAAE,EACRA,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,YAAS,EACzCA,EAAAA,IAAC,QAAK,SAAA,MAAA,CAAI,CAAA,CAAA,CACZ,CAAA,EACF,QAGC,MAAA,CAAI,UAAU,iCACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAW,6BACdgB,EAAmB,UAAY,6BAA+B,YAChE,GAAI,EACJjB,EAAAA,KAAC,OAAA,CAAK,UAAU,oCAAoC,SAAA,CAAA,WACzCiB,EAAmB,UAAY,cAAgB,QAAA,CAAA,CAC1D,CAAA,EACF,EACAjB,EAAAA,KAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,CAAA,uBAChBiB,EAAmB,WACtC,IAAI,KAAKA,EAAmB,UAAU,EAAE,mBAAmB,OAAO,EAAI,KAAA,CAAA,CAC1E,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAEJ,CAEJ,EC3UMsB,GAA2B,CAAC,CAAE,QAAA1D,EAAS,kBAAA2D,KAAwB,CACnE,KAAM,CAAE,KAAAzD,CAAA,EAASC,EAAA,EACX,CAAE,wBAAAyD,CAAA,EAA4BC,EAAA,EAC9B,CAAChC,EAASC,CAAU,EAAIxB,EAAAA,SAAS,EAAK,EACtC,CAACwD,EAAOC,CAAQ,EAAIzD,EAAAA,SAAS,EAAE,EAC/B,CAAC0D,EAAgBC,CAAiB,EAAI3D,EAAAA,SAAS,EAAK,EAGpD4D,EAAaN,EAAwB5D,EAAQ,GAAI,YAAY,EAG7DmE,EAAqBnE,EAAQ,mBAChCA,EAAQ,iBAAiB,SAAW,UAAYA,EAAQ,iBAAiB,SAAW,eAGjFoE,EAAoBD,GAAsBnE,EAAQ,iBAAiB,UAAWE,GAAA,YAAAA,EAAM,IAGpFmE,EAAoBH,GAAc,CAACC,GAAsB,CAAC,UAAW,QAAQ,EAAE,SAASnE,EAAQ,MAAM,EAGtGsE,EAAmBH,IAAuBC,GAAqB,CAAC,QAAS,SAAS,EAAE,SAASlE,GAAA,YAAAA,EAAM,IAAI,GAEvGqE,EAAuB,SAAY,CACvC,GAAKF,EAEL,CAAAvC,EAAW,EAAI,EACf,GAAI,CACF,MAAMhB,EAAW,MAAM,MAAM,iBAAiBd,EAAQ,EAAE,mBAAoB,CAC1E,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAU,aAAa,QAAQ,OAAO,CAAC,EAAA,EAE1D,KAAM,KAAK,UAAU,CAAE,MAAO8D,EAAM,KAAA,GAAU,MAAA,CAAW,CAAA,CAC1D,EAEK9C,EAAO,MAAMF,EAAS,KAAA,EAE5B,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAME,EAAK,SAAW,0BAA0B,EAIxD2C,GACFA,EAAkB,CAChB,GAAG3D,EACH,OAAQ,cACR,iBAAkBgB,EAAK,KACvB,SAAUd,EAAK,IAAA,CAChB,EAGH6D,EAAS,EAAE,EACXE,EAAkB,EAAK,EAGvB,QAAQ,IAAI,+BAA+B,CAE7C,OAAShD,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,EAChD,MAAMA,EAAM,SAAW,0BAA0B,CACnD,QAAA,CACEa,EAAW,EAAK,CAClB,EACF,EAEM0C,EAAsB,SAAY,CACtC,GAAKF,EAEL,CAAAxC,EAAW,EAAI,EACf,GAAI,CACF,MAAMhB,EAAW,MAAM,MAAM,iBAAiBd,EAAQ,EAAE,iBAAkB,CACxE,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAU,aAAa,QAAQ,OAAO,CAAC,EAAA,EAE1D,KAAM,KAAK,UAAU,CAAE,MAAO8D,EAAM,KAAA,GAAU,MAAA,CAAW,CAAA,CAC1D,EAEK9C,EAAO,MAAMF,EAAS,KAAA,EAE5B,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAME,EAAK,SAAW,4BAA4B,EAI1D2C,GACFA,EAAkB,CAChB,GAAG3D,EACH,OAAQ,UACR,iBAAkB,KAClB,SAAU,eAAA,CACX,EAGH+D,EAAS,EAAE,EACXE,EAAkB,EAAK,EAGvB,QAAQ,IAAI,iCAAiC,CAE/C,OAAShD,EAAO,CACd,QAAQ,MAAM,8BAA+BA,CAAK,EAClD,MAAMA,EAAM,SAAW,4BAA4B,CACrD,QAAA,CACEa,EAAW,EAAK,CAClB,EACF,EAGA,OAAKoC,EAKH/C,EAAAA,KAAC,MAAA,CAAI,UAAU,iGACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,2DAA2D,SAAA,uBAEzE,EAEAD,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,2CAA2C,SAAA,gBAE3D,EACAA,MAAC,QAAK,UAAWqD,EACf,6CACAN,EACI,uEACA,+DAAA,EAEH,SAAAA,EAAqB,cAAgB,QAAA,CACxC,CAAA,EACF,EAGCA,GACChD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,2CAA2C,SAAA,YAE3D,EACAA,EAAAA,IAAC,OAAA,CAAK,UAAU,oDACZ,UAAA,IAAM,OACN,MAAMsD,GAAWC,EAAA3E,EAAQ,iBAAiB,OAAzB,YAAA2E,EAA+B,KAChD,MAAI,CAACD,GAAYA,IAAa,OAAS,OAAOA,GAAa,SAClD,eAEFA,CACT,IAAG,CACL,CAAA,EACF,EAIDV,UACE,MAAA,CACC,SAAA,CAAA5C,EAAAA,IAAC,QAAA,CAAM,UAAU,kEAAkE,SAAA,yBAEnF,EACAA,EAAAA,IAAC,WAAA,CACC,MAAO0C,EACP,SAAWvC,GAAMwC,EAASxC,EAAE,OAAO,KAAK,EACxC,YAAY,yCACZ,KAAM,EACN,UAAU,kPAAA,CAAA,CACZ,EACF,EAIFJ,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACZ,SAAA,CAAAkD,GACCjD,EAAAA,IAAAwD,EAAAA,SAAA,CACG,SAACZ,EAUA7C,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAAA,KAAC,SAAA,CACC,QAASoD,EACT,SAAU1C,EACV,UAAU,gJAET,SAAA,CAAAA,EACCT,EAAAA,IAAC,OAAI,UAAU,gEAAA,CAAiE,EAEhFA,EAAAA,IAACyD,EAAA,CAAS,UAAU,cAAA,CAAe,EACnC,kBAAA,CAAA,CAAA,EAGJzD,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb6C,EAAkB,EAAK,EACvBF,EAAS,EAAE,CACb,EACA,SAAUlC,EACV,UAAU,sGACX,SAAA,UAAA,CAAA,CAED,CAAA,CACF,EAhCAV,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM8C,EAAkB,EAAI,EACrC,SAAUpC,EACV,UAAU,gJAEV,SAAA,CAAAT,EAAAA,IAACyD,EAAA,CAAS,UAAU,cAAA,CAAe,EAAE,kBAAA,CAAA,CAAA,CA2BvC,CAEJ,EAGDP,GACClD,EAAAA,IAAAwD,EAAAA,SAAA,CACG,SAACZ,EAUA7C,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAAA,KAAC,SAAA,CACC,QAASqD,EACT,SAAU3C,EACV,UAAU,0IAET,SAAA,CAAAA,EACCT,EAAAA,IAAC,OAAI,UAAU,gEAAA,CAAiE,EAEhFA,EAAAA,IAAC0D,EAAA,CAAS,UAAU,cAAA,CAAe,EACnC,uBAAA,CAAA,CAAA,EAGJ1D,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb6C,EAAkB,EAAK,EACvBF,EAAS,EAAE,CACb,EACA,SAAUlC,EACV,UAAU,sGACX,SAAA,UAAA,CAAA,CAED,CAAA,CACF,EAhCAV,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM8C,EAAkB,EAAI,EACrC,SAAUpC,EACV,UAAU,0IAEV,SAAA,CAAAT,EAAAA,IAAC0D,EAAA,CAAS,UAAU,cAAA,CAAe,EAAE,oBAAA,CAAA,CAAA,CA2BvC,CAEJ,CAAA,EAEJ,EAGC,CAACT,GAAqB,CAACC,GACtBlD,EAAAA,IAAC,MAAA,CAAI,UAAU,4DACZ,SAAA+C,GAAsB,CAACC,EACpB,wCACA,sCAAA,CAEN,CAAA,CAAA,CAEJ,CAAA,EACF,EAxJO,IA0JX,ECnPMW,GAAgB,IAAM,CAC1B,KAAM,CAAE,GAAAC,CAAA,EAAOC,EAAA,EACTC,EAAWC,EAAA,EACX,CAAE,KAAAjF,CAAA,EAASC,EAAA,EACX,CAAE,wBAAAyD,EAAyB,QAASwB,CAAA,EAAuBvB,EAAA,EAC3D,CAAC7D,EAASqF,CAAU,EAAI/E,EAAAA,SAAS,IAAI,EACrC,CAACuB,EAASC,CAAU,EAAIxB,EAAAA,SAAS,EAAI,EACrC,CAACW,EAAOkB,CAAQ,EAAI7B,EAAAA,SAAS,IAAI,EACjC,CAACgF,EAAWC,CAAY,EAAIjF,EAAAA,SAAS,UAAU,EAC/C,CAACkF,EAAWC,CAAY,EAAInF,EAAAA,SAAS,EAAK,EAG1CoF,EAAuBC,GAAmB,CAC9CN,EAAWM,CAAc,CAC3B,EAGA9C,EAAAA,UAAU,IAAM,CAgFVmC,GAAM9E,GAAQ,CAACkF,IA/EM,SAAY,OACnC,GAAI,CAIF,GAHAtD,EAAW,EAAI,EAGXsD,EACF,OAKF,GAAI,CADYxB,EAAwB,SAASoB,CAAE,EAAG,SAAS,EACjD,CACZS,EAAa,EAAK,EAClBtD,EAAS,qDAAqD,EAC9DL,EAAW,EAAK,EAChB,MACF,CAEA2D,EAAa,EAAI,EAEjB,MAAM3E,EAAW,MAAM,MAAM,iBAAiBkE,CAAE,GAAI,CAClD,QAAS,CACP,cAAiB,UAAU,aAAa,QAAQ,OAAO,CAAC,EAAA,CAC1D,CACD,EAED,GAAI,CAAClE,EAAS,GACZ,MAAM,IAAI,MAAM,mCAAmC,EAGrD,MAAME,EAAO,MAAMF,EAAS,KAAA,EAE5B,GAAIE,EAAK,QAAS,CAEhB,IAAI4E,EAAe,gBACnB,GAAI5E,EAAK,KAAK,YAAcA,EAAK,KAAK,WAAW,OAAS,EAAG,CAC3D,MAAM6E,EAAY7E,EAAK,KAAK,WAAW,CAAC,EACpC6E,EAAU,MAAQA,EAAU,KAAK,OACnCD,EAAe,OAAOC,EAAU,KAAK,IAAI,EAE7C,CAGA,MAAMC,EAAc,CAClB,GAAG9E,EAAK,KAER,YAAaA,EAAK,KAAK,cAAgB,CAAA,EACvC,mBAAoBA,EAAK,KAAK,eAAiB,CAAA,EAC/C,mBAAkB2D,EAAA3D,EAAK,KAAK,aAAV,YAAA2D,EAAuB,KAAM,KAC/C,SAAUiB,EAEV,eAAgB,CACd,YAAa,IACb,iBAAkB,QAClB,cAAe,YACf,SAAU,UACV,WAAY,qBACZ,OAAQ,SAAA,EAEV,WAAY,CACV,QAAS,EACT,OAAQ,IACR,MAAO,SAAA,EAET,WAAY,EACZ,OAAQ,CAAA,CAAC,EAGXP,EAAWS,CAAW,CACxB,KACE,OAAM,IAAI,MAAM9E,EAAK,SAAW,mCAAmC,CAEvE,MAAc,CACZmB,EAAS,mCAAmC,CAC9C,QAAA,CACEL,EAAW,EAAK,CAClB,CACF,GAGE,CAEJ,EAAG,CAACkD,EAAI9E,EAAM0D,EAAyBwB,CAAkB,CAAC,EAE1D,MAAMW,EAAmBxC,IACP,CACd,YAAa,CACX,MAAO,cACP,MAAO,uEACP,KAAMsB,EACN,UAAW,oCAAA,EAEb,QAAS,CACP,MAAO,cACP,MAAO,uEACP,KAAMA,EACN,UAAW,oCAAA,EAEb,OAAQ,CACN,MAAO,SACP,MAAO,gEACP,KAAMC,EACN,UAAW,kCAAA,EAEb,QAAS,CACP,MAAO,SACP,MAAO,gEACP,KAAMA,EACN,UAAW,kCAAA,EAEb,WAAY,CACV,MAAO,aACP,MAAO,2EACP,KAAMkB,EACN,UAAW,sCAAA,EAEb,YAAa,CACX,MAAO,aACP,MAAO,2EACP,KAAMA,EACN,UAAW,sCAAA,EAEb,MAAO,CACL,MAAO,OACP,MAAO,+DACP,KAAM5C,EACN,UAAW,gCAAA,EAEb,cAAe,CACb,MAAO,gBACP,MAAO,mEACP,KAAMC,EACN,UAAW,kCAAA,EAEb,UAAW,CACT,MAAO,gBACP,MAAO,mEACP,KAAMA,EACN,UAAW,kCAAA,CACb,GAEaE,CAAM,GAAK,CACxB,MAAO,eACP,MAAO,gEACP,KAAMF,EACN,UAAW,kCAAA,EAIT4C,EAAkBC,GACf,IAAI,KAAK,eAAe,QAAS,CACtC,IAAK,UACL,MAAO,UACP,KAAM,UACN,KAAM,UACN,OAAQ,SAAA,CACT,EAAE,OAAOA,CAAI,EAGVhD,EAAsBC,GACtBA,GAAc,GAAW,qCACzBA,GAAc,GAAW,uCACtB,iCAGT,GAAItB,EACF,OACET,MAAC,OAAI,UAAU,gDACb,eAAC+E,EAAA,CAAe,KAAK,KAAK,CAAA,CAC5B,EAIJ,GAAIlF,GAAS,CAACjB,EACZ,aACG,MAAA,CAAI,UAAU,gDACb,SAAAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAACgC,EAAA,CAAwB,UAAU,qCAAA,CAAsC,EACzEhC,EAAAA,IAAC,KAAA,CAAG,UAAU,yDACX,YAAS,yBACZ,EACC,CAACoE,IAAavE,GAAA,YAAAA,EAAO,SAAS,eAC7BG,EAAAA,IAAC,IAAA,CAAE,UAAU,gDAAgD,SAAA,qEAAA,CAE7D,EAEFD,EAAAA,KAACiF,EAAA,CACC,GAAG,YACH,UAAU,2GAEV,SAAA,CAAAhF,EAAAA,IAACiF,EAAA,CAAc,UAAU,cAAA,CAAe,EAAE,oBAAA,CAAA,CAAA,CAE5C,CAAA,CACF,CAAA,CACF,EAIJ,MAAMC,EAAeP,EAAgB/F,EAAQ,MAAM,EAC7CuG,EAAaD,EAAa,KAE1BE,EAAO,CACX,CAAE,GAAI,WAAY,MAAO,cAAe,KAAMlD,CAAA,EAC9C,CAAE,GAAI,QAAS,MAAO,sBAAuB,KAAMmD,CAAA,EACnD,CAAE,GAAI,cAAe,MAAO,aAAc,KAAMT,CAAA,EAChD,CAAE,GAAI,WAAY,MAAO,gBAAiB,KAAMU,CAAA,CAAc,EAGhE,OACEvF,EAAAA,KAAAyD,WAAA,CACE,SAAA,CAAAzD,OAACwF,EAAA,CACC,SAAA,CAAAxF,OAAC,QAAA,CAAO,SAAA,CAAAnB,EAAQ,KAAK,uCAAA,EAAqC,EAC1DoB,MAAC,QAAK,KAAK,cAAc,QAAS,+BAA+BpB,EAAQ,IAAI,EAAA,CAAI,CAAA,EACnF,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM8D,EAAS,WAAW,EACnC,UAAU,mFAEV,SAAA9D,EAAAA,IAACiF,EAAA,CAAc,UAAU,SAAA,CAAU,CAAA,CAAA,SAEpC,MAAA,CACC,SAAA,CAAAjF,EAAAA,IAAC,KAAA,CAAG,UAAU,mDACX,SAAApB,EAAQ,KACX,EACAmB,EAAAA,KAAC,IAAA,CAAE,UAAU,2CACV,SAAA,CAAAnB,EAAQ,GAAG,MAAIA,EAAQ,MAAM,MAAIA,EAAQ,QAAA,CAAA,CAC5C,CAAA,CAAA,CACF,CAAA,EACF,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,OAAC,QAAK,UAAWsD,EACf,sEACA6B,EAAa,KAAA,EAEb,SAAA,CAAAlF,MAACmF,GAAW,UAAW9B,EAAG,eAAgB6B,EAAa,SAAS,EAAG,EAClEA,EAAa,KAAA,EAChB,EAECtG,EAAQ,QAAUA,EAAQ,OAAO,OAAS,GACzCmB,EAAAA,KAAC,OAAA,CAAK,UAAU,mIACb,SAAA,CAAAnB,EAAQ,OAAO,OAAO,UAAQA,EAAQ,OAAO,OAAS,EAAI,IAAM,EAAA,CAAA,CACnE,CAAA,CAAA,CAEJ,CAAA,EACF,EAGAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,iGACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,aAAU,EAClED,EAAAA,KAAC,KAAE,UAAWsD,EAAG,qBAAsBvB,EAAmBlD,EAAQ,UAAU,CAAC,EAC1E,SAAA,CAAAA,EAAQ,WAAW,GAAA,CAAA,CACtB,CAAA,EACF,EACAoB,EAAAA,IAACkC,EAAA,CAAa,UAAU,uBAAA,CAAwB,CAAA,CAAA,CAClD,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,iGACb,SAAAnC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,iBAAc,EACtEA,EAAAA,IAAC,IAAA,CAAE,UAAU,mDACV,SAAApB,EAAQ,YAAcA,EAAQ,WAAW,SAAW,GAAG,eAAA,EAAmB,IAC7E,EACAmB,EAAAA,KAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,CAAA,SAC/CnB,EAAQ,WAAW,OAAO,eAAA,CAAe,CAAA,CAClD,CAAA,EACF,EACAoB,EAAAA,IAACyD,EAAA,CAAS,UAAU,wBAAA,CAAyB,CAAA,CAAA,CAC/C,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,iGACb,SAAA1D,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,WAAQ,EAChEA,EAAAA,IAAC,IAAA,CAAE,UAAU,sDACT,UAAA,IAAM,CACN,MAAMwF,EAAW5G,EAAQ,SACzB,MAAI,CAAC4G,GAAYA,IAAa,OAAS,OAAOA,GAAa,SAClD,gBAEFA,CACT,IAAG,CACL,QACC,IAAA,CAAE,UAAU,2CACV,SAAA5G,EAAQ,WAAW,KAAA,CACtB,CAAA,EACF,EACAoB,EAAAA,IAAC,OAAI,UAAU,wFACb,eAAC,OAAA,CAAK,UAAU,uDACZ,UAAA,IAAM,CACN,MAAMwF,EAAW5G,EAAQ,SACzB,MAAI,CAAC4G,GAAYA,IAAa,OAAS,OAAOA,GAAa,SAClD,KAEFA,EAAS,MAAM,GAAG,EAAE,IAAIC,GAAKA,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,YAAA,CACrD,GAAA,EACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,iGACb,SAAA1F,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,qBAAkB,EAC1ED,EAAAA,KAAC,IAAA,CAAE,UAAU,sDACV,SAAA,CAAA,KAAK,MAAMnB,EAAQ,gBAAkB,IAAI,OAAW,IAAO,GAAK,GAAK,GAAG,EAAE,OAAA,EAC7E,EACAoB,EAAAA,IAAC,IAAA,CAAE,UAAU,2CACV,SAAA6E,EAAejG,EAAQ,eAAe,EAAE,MAAM,GAAG,EAAE,CAAC,CAAA,CACvD,CAAA,EACF,EACAoB,EAAAA,IAACiC,EAAA,CAAU,UAAU,yBAAA,CAA0B,CAAA,CAAA,CACjD,CAAA,CACF,CAAA,EACF,EAGCrD,EAAQ,QAAUA,EAAQ,OAAO,OAAS,GACzCoB,EAAAA,IAAC,MAAA,CAAI,UAAU,wFACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAACgC,EAAA,CAAwB,UAAU,6BAAA,CAA8B,EACjEjC,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,0DAA0D,SAAA,CAAA,mBACrDnB,EAAQ,OAAO,OAAO,GAAA,EACzC,EACAoB,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAApB,EAAQ,OAAO,IAAK8G,GACnB3F,EAAAA,KAAC,MAAA,CAAmB,UAAU,yCAC5B,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAe,SAAA0F,EAAM,QAAQ,EAC7C3F,EAAAA,KAAC,OAAA,CAAK,UAAU,sCAAsC,SAAA,CAAA,KACjD8E,EAAea,EAAM,SAAS,CAAA,CAAA,CACnC,CAAA,GAJQA,EAAM,EAKhB,CACD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAIF3F,EAAAA,KAAC,MAAA,CAAI,UAAU,6FACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,gDACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,sBACZ,SAAAoF,EAAK,IAAKO,GAAQ,CACjB,MAAMC,EAAUD,EAAI,KACpB,OACE5F,EAAAA,KAAC,SAAA,CAEC,QAAS,IAAMoE,EAAawB,EAAI,EAAE,EAClC,UAAWtC,EACT,yFACAa,IAAcyB,EAAI,GACd,mDACA,kGAAA,EAGN,SAAA,CAAA3F,EAAAA,IAAC4F,EAAA,CAAQ,UAAU,SAAA,CAAU,EAC7B5F,EAAAA,IAAC,OAAA,CAAM,SAAA2F,EAAI,KAAA,CAAM,CAAA,CAAA,EAVZA,EAAI,EAAA,CAaf,CAAC,EACH,EACF,EAEA5F,EAAAA,KAAC,MAAA,CAAI,UAAU,MACZ,SAAA,CAAAmE,IAAc,YACbnE,OAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,2DAA2D,SAAA,0BAEzE,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,oBAAiB,EACzED,EAAAA,KAAC,IAAA,CAAE,UAAU,sDACV,SAAA,CAAAnB,EAAQ,eAAe,YAAY,eAAA,EAAiB,eAAA,CAAA,CACvD,CAAA,EACF,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,qBAAkB,QACzE,IAAA,CAAE,UAAU,sDACV,SAAApB,EAAQ,eAAe,gBAAA,CAC1B,CAAA,EACF,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,0BAAuB,QAC9E,IAAA,CAAE,UAAU,sDACV,SAAApB,EAAQ,eAAe,aAAA,CAC1B,CAAA,EACF,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,UAAO,QAC9D,IAAA,CAAE,UAAU,sDACV,SAAApB,EAAQ,eAAe,QAAA,CAC1B,CAAA,EACF,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,YAAS,QAChE,IAAA,CAAE,UAAU,sDACV,SAAApB,EAAQ,eAAe,UAAA,CAC1B,CAAA,EACF,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,2CAA2C,SAAA,OAAI,QAC3D,IAAA,CAAE,UAAU,sDACV,SAAApB,EAAQ,eAAe,MAAA,CAC1B,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGCoB,EAAAA,IAACsC,GAAA,CACC,QAAA1D,EACA,kBAAmBqF,CAAA,CAAA,EAItBjE,EAAAA,IAACrB,GAAA,CACC,QAAAC,EACA,cAAe0F,CAAA,CAAA,EAIjBtE,EAAAA,IAACM,GAAA,CACC,UAAW1B,EAAQ,GACnB,QAAAA,EACA,eAAgBA,EAAQ,SAAA,CAAA,CAC1B,EACF,EAGDsF,IAAc,SACbnE,OAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,sDAAsD,SAAA,+BAEpE,EACAA,EAAAA,IAACgF,EAAA,CACC,GAAG,oBACH,UAAU,yJACX,SAAA,YAAA,CAAA,CAED,EACF,QAEC,MAAA,CAAI,UAAU,YACZ,SAAApG,EAAQ,YAAY,IAAKiH,GACxB7F,EAAAA,IAAC,OAAkB,UAAU,6CAC3B,SAAAD,OAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,IAAA,CAAE,UAAU,4CAA4C,SAAA,CAAA,SAChD8F,EAAK,EAAA,EACd,EACA9F,EAAAA,KAAC,IAAA,CAAE,UAAU,2CACV,SAAA,CAAA8E,EAAegB,EAAK,IAAI,EAAE,MAAIA,EAAK,QAAA,CAAA,CACtC,CAAA,EACF,EACA9F,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,OAAC,QAAK,UAAWsD,EACf,sEACAwC,EAAK,SAAW,WACZ,uEACA,8DAAA,EAEH,SAAA,CAAAA,EAAK,SAAW,WACf7F,EAAAA,IAAC8F,GAAA,CAAgB,UAAU,eAAe,EAE1C9F,EAAAA,IAACgC,EAAA,CAAwB,UAAU,cAAA,CAAe,EAEnD6D,EAAK,SAAW,WAAa,WAAa,WAAA,EAC7C,EACA9F,EAAAA,KAAC,OAAA,CAAK,UAAU,2CACb,SAAA,CAAA8F,EAAK,QAAQ,WAASA,EAAK,UAAY,EAAI,IAAM,EAAA,CAAA,CACpD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EA5BQA,EAAK,EA6Bf,CACD,CAAA,CACH,CAAA,EACF,EAGD3B,IAAc,eACbnE,OAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,sDAAsD,SAAA,0BAEpE,QAEC,MAAA,CAAI,UAAU,YACZ,SAAApB,EAAQ,mBAAmB,IAAKmH,GAC/B/F,EAAAA,IAAC,MAAA,CAAyB,UAAU,6CAClC,SAAAA,EAAAA,IAAC,OAAI,UAAU,mCACb,gBAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,IAAA,CAAE,UAAU,4CACV,SAAA+F,EAAY,KACf,EACA/F,EAAAA,IAAC,IAAA,CAAE,UAAU,gDACV,WAAY,YACf,EACAD,EAAAA,KAAC,IAAA,CAAE,UAAU,gDACV,SAAA,CAAA8E,EAAekB,EAAY,IAAI,EAAE,MAAIA,EAAY,WAAW,MAAIA,EAAY,QAAA,CAAA,CAC/E,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EAbQA,EAAY,EActB,CACD,CAAA,CACH,CAAA,EACF,EAGD7B,IAAc,YACbnE,OAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,sDAAsD,SAAA,2BAEpE,GAEElB,GAAA,YAAAA,EAAM,QAAS,UAAWA,GAAA,YAAAA,EAAM,QAAS,UACzCiB,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAACsF,EAAA,CAAc,UAAU,sCAAA,CAAuC,EAChEtF,EAAAA,IAAC,IAAA,CAAE,UAAU,mCAAmC,SAAA,4CAAA,CAEhD,CAAA,CAAA,CACF,EAEAD,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAACgC,EAAA,CAAwB,UAAU,wCAAA,CAAyC,EAC5EhC,EAAAA,IAAC,IAAA,CAAE,UAAU,mCAAmC,SAAA,qEAAA,CAEhD,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ","x_google_ignoreList":[0]}
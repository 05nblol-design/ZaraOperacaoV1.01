{"version":3,"file":"QualityTestDetail-BDo6SoaM.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/ClipboardDocumentListIcon.js","../../src/pages/QualityTestDetail.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction ClipboardDocumentListIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 0 0 2.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 0 0-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75 2.25 2.25 0 0 0-.1-.664m-5.8 0A2.251 2.251 0 0 1 13.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25ZM6.75 12h.008v.008H6.75V12Zm0 3h.008v.008H6.75V15Zm0 3h.008v.008H6.75V18Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClipboardDocumentListIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  ArrowLeftIcon,\n  CheckCircleIcon,\n  XCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  UserIcon,\n  CogIcon,\n  BeakerIcon,\n  DocumentTextIcon,\n  PhotoIcon,\n  EyeIcon,\n  ArrowDownTrayIcon,\n  PrinterIcon,\n  ShareIcon,\n  PencilIcon,\n  TrashIcon,\n  ChartBarIcon,\n  CalendarDaysIcon,\n  ClipboardDocumentListIcon,\n  ExclamationCircleIcon,\n  InformationCircleIcon\n} from '@heroicons/react/24/outline';\n\n// Hooks\nimport { useAuth } from '@/hooks/useAuth';\nimport { useSocket } from '@/hooks/useSocket';\n\n// Utilitários\nimport { cn, formatDateTime, formatNumber } from '@/lib/utils';\nimport { ROUTES } from '@/config/routes';\n\nconst QualityTestDetail = () => {\n  const { id: testId } = useParams();\n  const navigate = useNavigate();\n  const [test, setTest] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showImageModal, setShowImageModal] = useState(false);\n  \n  const { user } = useAuth();\n  const { isConnected } = useSocket();\n  \n  useEffect(() => {\n    // Carregar dados reais do teste da API\n    const loadTestData = async () => {\n      try {\n        setLoading(true);\n        \n        const response = await fetch(`/api/quality-tests/${testId}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        \n        if (!response.ok) {\n          throw new Error('Erro ao carregar dados do teste');\n        }\n        \n        const data = await response.json();\n        \n        if (data.success) {\n           setTest(data.data);\n         } else {\n            throw new Error(data.message || 'Erro ao carregar dados do teste');\n          }\n      } catch (err) {\n        setError('Erro ao carregar dados do teste');\n        console.error('Erro ao carregar teste:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    if (testId) {\n      loadTestData();\n    }\n  }, [testId]);\n  \n  const getResultConfig = (result) => {\n    switch (result) {\n      case 'PASS':\n        return {\n          label: 'Aprovado',\n          color: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400',\n          icon: CheckCircleIcon,\n          iconColor: 'text-green-600 dark:text-green-400'\n        };\n      case 'FAIL':\n        return {\n          label: 'Reprovado',\n          color: 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400',\n          icon: XCircleIcon,\n          iconColor: 'text-red-600 dark:text-red-400'\n        };\n      default:\n        return {\n          label: 'Pendente',\n          color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400',\n          icon: ClockIcon,\n          iconColor: 'text-yellow-600 dark:text-yellow-400'\n        };\n    }\n  };\n  \n  const getTestTypeLabel = (type) => {\n    switch (type) {\n      case 'ROUTINE':\n        return 'Rotina';\n      case 'SPECIAL':\n        return 'Especial';\n      case 'COMPLAINT':\n        return 'Reclamação';\n      default:\n        return type;\n    }\n  };\n  \n  const getShiftLabel = (shift) => {\n    switch (shift) {\n      case 'TURNO_1':\n        return 'Turno 1 (06:00-14:00)';\n      case 'TURNO_2':\n        return 'Turno 2 (14:00-22:00)';\n      case 'TURNO_3':\n        return 'Turno 3 (22:00-06:00)';\n      default:\n        return shift;\n    }\n  };\n  \n  const getDefectSeverityConfig = (severity) => {\n    switch (severity) {\n      case 'HIGH':\n        return {\n          label: 'Alta',\n          color: 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n        };\n      case 'MEDIUM':\n        return {\n          label: 'Média',\n          color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400'\n        };\n      case 'LOW':\n        return {\n          label: 'Baixa',\n          color: 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400'\n        };\n      default:\n        return {\n          label: severity,\n          color: 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400'\n        };\n    }\n  };\n  \n  const handleImageClick = (image) => {\n    setSelectedImage(image);\n    setShowImageModal(true);\n  };\n  \n  const handlePrint = () => {\n    window.print();\n  };\n  \n  const handleExport = () => {\n    // Implementar exportação para PDF\n    console.log('Exportar relatório');\n  };\n  \n  const handleEdit = () => {\n    navigate(`/quality/${testId}/edit`);\n  };\n  \n  const handleDelete = () => {\n    if (window.confirm('Tem certeza que deseja excluir este teste?')) {\n      // Implementar exclusão\n      console.log('Excluir teste');\n      navigate('/quality-tests');\n    }\n  };\n  \n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-96\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n  \n  if (error || !test) {\n    return (\n      <div className=\"text-center py-12\">\n        <ExclamationCircleIcon className=\"mx-auto h-12 w-12 text-red-400\" />\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">\n          {error || 'Teste não encontrado'}\n        </h3>\n        <div className=\"mt-6\">\n          <Link\n            to=\"/quality\"\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 transition-colors\"\n          >\n            <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\n            Voltar aos Testes\n          </Link>\n        </div>\n      </div>\n    );\n  }\n  \n  const resultConfig = getResultConfig(test.overallResult);\n  const ResultIcon = resultConfig.icon;\n  \n  // Criar testResults baseado nos dados reais do teste\n  const testResults = {\n    visualInspection: test.visualInspection !== null ? (test.visualInspection ? 'PASS' : 'FAIL') : null,\n    dimensionalCheck: test.dimensionalCheck !== null ? (test.dimensionalCheck ? 'PASS' : 'FAIL') : null,\n    colorConsistency: test.colorConsistency !== null ? (test.colorConsistency ? 'PASS' : 'FAIL') : null,\n    surfaceQuality: test.surfaceQuality !== null ? (test.surfaceQuality ? 'PASS' : 'FAIL') : null,\n    adhesionTest: test.adhesionTest !== null ? (test.adhesionTest ? 'PASS' : 'FAIL') : null\n  };\n  \n  const passedTests = Object.values(testResults).filter(result => result === 'PASS').length;\n  const totalTests = Object.values(testResults).filter(result => result !== null).length;\n  \n  return (\n    <>\n      <Helmet>\n        <title>{test?.id ? `Teste ${test.id} - Sistema ZARA` : 'Teste de Qualidade - Sistema ZARA'}</title>\n        <meta name=\"description\" content={`Detalhes do teste de qualidade ${test?.id || ''}`} />\n      </Helmet>\n      \n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={() => navigate('/quality')}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n            >\n              <ArrowLeftIcon className=\"h-5 w-5\" />\n            </button>\n            \n            <div>\n              <div className=\"flex items-center space-x-3\">\n                <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  Teste {test.id}\n                </h1>\n                <span className={cn(\n                  'inline-flex items-center px-3 py-1 rounded-full text-sm font-medium',\n                  resultConfig.color\n                )}>\n                  <ResultIcon className={cn('h-4 w-4 mr-1', resultConfig.iconColor)} />\n                  {resultConfig.label}\n                </span>\n              </div>\n              <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n                {test.machine?.name || 'N/A'} • {getTestTypeLabel(test.testType) || 'Teste de Qualidade'} • {formatDateTime(test.testDate || test.createdAt)}\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"mt-4 sm:mt-0 flex items-center space-x-2\">\n            <button\n              onClick={handlePrint}\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n            >\n              <PrinterIcon className=\"h-4 w-4 mr-2\" />\n              Imprimir\n            </button>\n            \n            <button\n              onClick={handleExport}\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n            >\n              <ArrowDownTrayIcon className=\"h-4 w-4 mr-2\" />\n              Exportar\n            </button>\n            \n            {(user?.role === 'ADMIN' || user?.role === 'MANAGER' || \n              (user?.role === 'LEADER' && test.createdBy.id === user.id)) && (\n              <>\n                <button\n                  onClick={handleEdit}\n                  className=\"inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  <PencilIcon className=\"h-4 w-4 mr-2\" />\n                  Editar\n                </button>\n                \n                <button\n                  onClick={handleDelete}\n                  className=\"inline-flex items-center px-3 py-2 border border-red-300 dark:border-red-600 text-sm font-medium rounded-md text-red-700 dark:text-red-300 bg-white dark:bg-gray-700 hover:bg-red-50 dark:hover:bg-red-900/20 transition-colors\"\n                >\n                  <TrashIcon className=\"h-4 w-4 mr-2\" />\n                  Excluir\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Coluna Principal */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Informações Básicas */}\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Informações Básicas\n              </h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                <div className=\"bg-gray-50 dark:bg-gray-700/50 p-4 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <CogIcon className=\"h-5 w-5 text-blue-600 dark:text-blue-400\" />\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">Máquina</p>\n                  </div>\n                  <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    {test.machine?.name || 'N/A'}\n                  </p>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                     {test.machine?.location || 'Local não informado'}\n                   </p>\n                </div>\n                \n                <div className=\"bg-gray-50 dark:bg-gray-700/50 p-4 rounded-lg\">\n                   <div className=\"flex items-center space-x-2 mb-2\">\n                     <UserIcon className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\n                     <p className=\"text-sm font-medium text-gray-900 dark:text-white\">Operador</p>\n                   </div>\n                   <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                     {test.user?.name || 'N/A'}\n                   </p>\n                 </div>\n                \n                <div className=\"bg-gray-50 dark:bg-gray-700/50 p-4 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <BeakerIcon className=\"h-5 w-5 text-purple-600 dark:text-purple-400\" />\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">Produto</p>\n                  </div>\n                  <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    {test.product || 'N/A'}\n                  </p>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Lote: {test.lot || 'N/A'}\n                  </p>\n                </div>\n                \n                <div className=\"bg-gray-50 dark:bg-gray-700/50 p-4 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <ClockIcon className=\"h-5 w-5 text-orange-600 dark:text-orange-400\" />\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">Data do Teste</p>\n                  </div>\n                  <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    {formatDateTime(test.testDate || test.createdAt)}\n                  </p>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {getShiftLabel(test.shift) || 'Turno não informado'}\n                  </p>\n                </div>\n                \n                <div className=\"bg-gray-50 dark:bg-gray-700/50 p-4 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <DocumentTextIcon className=\"h-5 w-5 text-indigo-600 dark:text-indigo-400\" />\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">Detalhes</p>\n                  </div>\n                  <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    Caixa #{test.boxNumber || 'N/A'}\n                  </p>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Tamanho: {test.packageSize || 'N/A'}\n                  </p>\n                </div>\n                \n                <div className=\"bg-gray-50 dark:bg-gray-700/50 p-4 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <CheckCircleIcon className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">Status</p>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={cn(\n                      'inline-flex items-center px-2.5 py-0.5 rounded-full text-sm font-medium',\n                      test.approved ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400' : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n                    )}>\n                      {test.approved ? 'Aprovado' : 'Reprovado'}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                    {getTestTypeLabel(test.testType) || 'Teste de Qualidade'}\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            {/* Resultados dos Testes */}\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Resultados dos Testes\n              </h2>\n              \n              <div className=\"space-y-4\">\n                {Object.entries(testResults).map(([testName, result]) => {\n                  if (result === null) return null;\n                  \n                  const testConfig = getResultConfig(result);\n                  const TestIcon = testConfig.icon;\n                  \n                  const testLabels = {\n                    visualInspection: 'Inspeção Visual',\n                    dimensionalCheck: 'Verificação Dimensional',\n                    colorConsistency: 'Consistência de Cor',\n                    surfaceQuality: 'Qualidade da Superfície',\n                    adhesionTest: 'Teste de Aderência'\n                  };\n                  \n                  return (\n                    <div key={testName} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n                      <div className=\"flex items-center space-x-3\">\n                        <TestIcon className={cn('h-5 w-5', testConfig.iconColor)} />\n                        <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                          {testLabels[testName] || testName}\n                        </span>\n                      </div>\n                      <span className={cn(\n                        'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',\n                        testConfig.color\n                      )}>\n                        {testConfig.label}\n                      </span>\n                    </div>\n                  );\n                })}\n              </div>\n              \n              {/* Progresso Geral */}\n              <div className=\"mt-6\">\n                <div className=\"flex justify-between text-sm text-gray-500 dark:text-gray-400 mb-2\">\n                  <span>Progresso Geral</span>\n                  <span>{passedTests}/{totalTests} testes aprovados</span>\n                </div>\n                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3\">\n                  <div \n                    className={cn(\n                      'h-3 rounded-full transition-all duration-300',\n                      passedTests === totalTests ? 'bg-green-500' :\n                      passedTests >= totalTests * 0.8 ? 'bg-yellow-500' :\n                      'bg-red-500'\n                    )}\n                    style={{ width: `${totalTests > 0 ? (passedTests / totalTests) * 100 : 0}%` }}\n                  />\n                </div>\n              </div>\n            </div>\n            \n            {/* Medições */}\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center space-x-2 mb-6\">\n                <ChartBarIcon className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n                <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Medições e Especificações\n                </h2>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {(() => {\n                  const measurements = {};\n                  \n                  if (test.packageWidth) {\n                    measurements.packageWidth = {\n                      value: test.packageWidth,\n                      unit: 'mm',\n                      spec: 'Conforme especificação',\n                      status: test.approved ? 'PASS' : 'FAIL'\n                    };\n                  }\n                  \n                  if (test.bottomSize) {\n                    measurements.bottomSize = {\n                      value: test.bottomSize,\n                      unit: 'mm',\n                      spec: 'Conforme especificação',\n                      status: test.approved ? 'PASS' : 'FAIL'\n                    };\n                  }\n                  \n                  if (test.sideSize) {\n                    measurements.sideSize = {\n                      value: test.sideSize,\n                      unit: 'mm',\n                      spec: 'Conforme especificação',\n                      status: test.approved ? 'PASS' : 'FAIL'\n                    };\n                  }\n                  \n                  if (test.zipperDistance) {\n                    measurements.zipperDistance = {\n                      value: test.zipperDistance,\n                      unit: 'mm',\n                      spec: 'Conforme especificação',\n                      status: test.approved ? 'PASS' : 'FAIL'\n                    };\n                  }\n                  \n                  if (test.facilitatorDistance) {\n                    measurements.facilitatorDistance = {\n                      value: test.facilitatorDistance,\n                      unit: 'mm',\n                      spec: 'Conforme especificação',\n                      status: test.approved ? 'PASS' : 'FAIL'\n                    };\n                  }\n                  \n                  const measurementLabels = {\n                    packageWidth: 'Largura da Embalagem',\n                    bottomSize: 'Tamanho do Fundo',\n                    sideSize: 'Tamanho da Lateral',\n                    zipperDistance: 'Distância do Zíper',\n                    facilitatorDistance: 'Distância do Facilitador'\n                  };\n                  \n                  return Object.entries(measurements).map(([measurement, data]) => {\n                    const statusConfig = getResultConfig(data.status);\n                    const StatusIcon = statusConfig.icon;\n                    \n                    return (\n                      <div key={measurement} className=\"bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-700/50 p-4 rounded-lg border border-gray-200 dark:border-gray-600 hover:shadow-md transition-shadow\">\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <h3 className=\"text-sm font-semibold text-gray-900 dark:text-white\">\n                            {measurementLabels[measurement] || measurement}\n                          </h3>\n                          <StatusIcon className={cn('h-5 w-5', statusConfig.iconColor)} />\n                        </div>\n                        \n                        <div className=\"space-y-2\">\n                          <div className=\"flex items-baseline space-x-1\">\n                            <span className={cn(\n                              'text-2xl font-bold',\n                              data.status === 'PASS' ? 'text-green-600 dark:text-green-400' :\n                              'text-red-600 dark:text-red-400'\n                            )}>\n                              {data.value}\n                            </span>\n                            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                              {data.unit}\n                            </span>\n                          </div>\n                          \n                          <div className=\"flex items-center justify-between\">\n                            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                              {data.spec}\n                            </p>\n                            <span className={cn(\n                              'inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium',\n                              statusConfig.color\n                            )}>\n                              {statusConfig.label}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  });\n                })()}\n                \n                {!test.packageWidth && !test.bottomSize && !test.sideSize && !test.zipperDistance && !test.facilitatorDistance && (\n                  <div className=\"text-center py-8\">\n                    <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center\">\n                      <DocumentTextIcon className=\"w-8 h-8 text-gray-400\" />\n                    </div>\n                    <p className=\"text-gray-500 dark:text-gray-400\">Nenhuma medição registrada</p>\n                  </div>\n                )}\n              </div>\n            </div>\n            \n            {/* Defeitos */}\n            {test.defects && test.defects.length > 0 && (\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-2 mb-6\">\n                  <ExclamationTriangleIcon className=\"h-6 w-6 text-red-600 dark:text-red-400\" />\n                  <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    Defeitos Identificados\n                  </h2>\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400\">\n                    {test.defects.length} {test.defects.length === 1 ? 'defeito' : 'defeitos'}\n                  </span>\n                </div>\n                \n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                  {test.defects.map((defect) => {\n                    const severityConfig = getDefectSeverityConfig(defect.severity);\n                    \n                    return (\n                      <div key={defect.id} className=\"bg-gradient-to-br from-red-50 to-red-100/50 dark:from-red-900/10 dark:to-red-800/5 border border-red-200 dark:border-red-800 rounded-lg p-4 hover:shadow-md transition-shadow\">\n                        <div className=\"flex items-start justify-between mb-3\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"p-1.5 bg-red-100 dark:bg-red-900/20 rounded-full\">\n                              <ExclamationTriangleIcon className=\"h-4 w-4 text-red-600 dark:text-red-400\" />\n                            </div>\n                            <span className={cn(\n                              'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',\n                              severityConfig.color\n                            )}>\n                              {severityConfig.label}\n                            </span>\n                          </div>\n                        </div>\n                        \n                        <div className=\"space-y-3\">\n                          <h3 className=\"text-sm font-semibold text-red-900 dark:text-red-100\">\n                            {defect.description}\n                          </h3>\n                          \n                          <div className=\"grid grid-cols-1 gap-2\">\n                            <div className=\"flex items-center space-x-2\">\n                              <div className=\"w-2 h-2 bg-red-400 rounded-full\"></div>\n                              <span className=\"text-xs text-red-700 dark:text-red-300\">\n                                <strong>Local:</strong> {defect.location}\n                              </span>\n                            </div>\n                            <div className=\"flex items-center space-x-2\">\n                              <div className=\"w-2 h-2 bg-red-400 rounded-full\"></div>\n                              <span className=\"text-xs text-red-700 dark:text-red-300\">\n                                <strong>Medição:</strong> {defect.measurement}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            \n            {/* Observações */}\n            {test.observations && (\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-2 mb-4\">\n                  <ClipboardDocumentListIcon className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n                  <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    Observações do Teste\n                  </h2>\n                </div>\n                <div className=\"bg-blue-50 dark:bg-blue-900/10 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\n                  <div className=\"flex items-start space-x-3\">\n                    <InformationCircleIcon className=\"h-5 w-5 text-blue-600 dark:text-blue-400 mt-0.5 flex-shrink-0\" />\n                    <p className=\"text-sm text-blue-900 dark:text-blue-100 leading-relaxed\">\n                      {test.observations}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            {/* Imagens Anexadas */}\n            {test.images && (() => {\n              try {\n                const images = JSON.parse(test.images);\n                if (images && images.length > 0) {\n                  return (\n                    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n                      <div className=\"flex items-center justify-between mb-6\">\n                        <div className=\"flex items-center space-x-2\">\n                          <PhotoIcon className=\"h-6 w-6 text-purple-600 dark:text-purple-400\" />\n                          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                            Imagens Anexadas\n                          </h2>\n                          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-400\">\n                            {images.length} {images.length === 1 ? 'imagem' : 'imagens'}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                        {images.map((imageName, index) => (\n                          <div \n                            key={index} \n                            className=\"group relative bg-gradient-to-br from-purple-50 to-purple-100/50 dark:from-purple-900/10 dark:to-purple-800/5 border border-purple-200 dark:border-purple-800 rounded-lg overflow-hidden aspect-square cursor-pointer hover:shadow-lg hover:scale-105 transition-all duration-200\"\n                            onClick={() => handleImageClick({ name: imageName, timestamp: test.testDate || test.createdAt })}\n                          >\n                            <div className=\"absolute inset-0 flex items-center justify-center\">\n                              <div className=\"p-3 bg-purple-100 dark:bg-purple-900/20 rounded-full\">\n                                <PhotoIcon className=\"h-8 w-8 text-purple-600 dark:text-purple-400\" />\n                              </div>\n                            </div>\n                            \n                            <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent text-white p-3\">\n                              <p className=\"text-xs font-medium truncate\" title={imageName}>\n                                {imageName}\n                              </p>\n                              <p className=\"text-xs text-gray-300 mt-1\">\n                                Imagem #{index + 1}\n                              </p>\n                            </div>\n                            \n                            <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                              <div className=\"bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-full p-2 shadow-lg\">\n                                <EyeIcon className=\"h-4 w-4 text-purple-600 dark:text-purple-400\" />\n                              </div>\n                            </div>\n                            \n                            <div className=\"absolute inset-0 bg-purple-600/10 opacity-0 group-hover:opacity-100 transition-opacity\" />\n                          </div>\n                        ))}\n                      </div>\n                      <div className=\"mt-4 text-center\">\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                          {images.length} imagem{images.length !== 1 ? 's' : ''} anexada{images.length !== 1 ? 's' : ''}\n                        </p>\n                      </div>\n                    </div>\n                  );\n                }\n              } catch (e) {\n                console.error('Erro ao parsear imagens:', e);\n              }\n              return null;\n            })()}\n            \n            {/* Ações Corretivas */}\n            {test.corrective_actions && (\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n                <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Ações Corretivas\n                </h2>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 leading-relaxed\">\n                  {test.corrective_actions}\n                </p>\n              </div>\n            )}\n            \n            {/* Próximas Ações */}\n            {test.nextActions && test.nextActions.length > 0 && (\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n                <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Próximas Ações\n                </h2>\n                <ul className=\"space-y-2\">\n                  {test.nextActions.map((action, index) => (\n                    <li key={index} className=\"flex items-start space-x-2\">\n                      <div className=\"h-1.5 w-1.5 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        {action}\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n          \n          {/* Sidebar */}\n          <div className=\"space-y-6\">\n            {/* Status e Aprovações */}\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Status e Aprovações\n              </h3>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <UserIcon className=\"h-5 w-5 text-gray-400\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      Criado por\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {test.createdBy?.name || 'N/A'}\n                    </p>\n                  </div>\n                </div>\n                \n                {test.reviewedBy && (\n                  <div className=\"flex items-center space-x-3\">\n                    <CheckCircleIcon className=\"h-5 w-5 text-green-500\" />\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Revisado por\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {test.reviewedBy?.name || 'N/A'} • {formatDateTime(test.reviewedBy?.timestamp)}\n                      </p>\n                    </div>\n                  </div>\n                )}\n                \n                {test.approvedBy ? (\n                  <div className=\"flex items-center space-x-3\">\n                    <CheckCircleIcon className=\"h-5 w-5 text-green-500\" />\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Aprovado por\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {test.approvedBy?.name || 'N/A'} • {formatDateTime(test.approvedBy?.timestamp)}\n                      </p>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"flex items-center space-x-3\">\n                    <ClockIcon className=\"h-5 w-5 text-yellow-500\" />\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Aguardando aprovação\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Pendente\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n            \n            {/* Mídia */}\n            {test.media && test.media.length > 0 && (\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Fotos e Documentos\n                </h3>\n                \n                <div className=\"grid grid-cols-2 gap-3\">\n                  {test.media.map((item) => (\n                    <div key={item.id} className=\"relative group\">\n                      <div \n                        className=\"aspect-square bg-gray-100 dark:bg-gray-700 rounded-lg overflow-hidden cursor-pointer hover:opacity-75 transition-opacity\"\n                        onClick={() => handleImageClick(item)}\n                      >\n                        <div className=\"flex items-center justify-center h-full\">\n                          <PhotoIcon className=\"h-8 w-8 text-gray-400\" />\n                        </div>\n                      </div>\n                      <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity\">\n                        <EyeIcon className=\"h-6 w-6 text-white\" />\n                      </div>\n                      <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400 truncate\">\n                        {item?.name || 'Sem nome'}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {/* Ações Rápidas */}\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Ações Rápidas\n              </h3>\n              \n              <div className=\"space-y-2\">\n                <Link\n                  to={`/machines/${test.machineId}`}\n                  className=\"w-full inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  <CogIcon className=\"h-4 w-4 mr-2\" />\n                  Ver Máquina\n                </Link>\n                \n                <Link\n                  to={`/quality-tests?machine=${test.machineId}`}\n                  className=\"w-full inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  <BeakerIcon className=\"h-4 w-4 mr-2\" />\n                  Outros Testes\n                </Link>\n                \n                <Link\n                  to={`/reports/quality?batch=${test.productBatch}`}\n                  className=\"w-full inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  <ChartBarIcon className=\"h-4 w-4 mr-2\" />\n                  Relatório do Lote\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Modal de Imagem */}\n      <AnimatePresence>\n        {showImageModal && selectedImage && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4\"\n            onClick={() => setShowImageModal(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9 }}\n              animate={{ scale: 1 }}\n              exit={{ scale: 0.9 }}\n              className=\"bg-white dark:bg-gray-800 rounded-lg p-4 max-w-4xl max-h-full overflow-auto\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  {selectedImage?.name || 'Imagem'}\n                </h3>\n                <button\n                  onClick={() => setShowImageModal(false)}\n                  className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                >\n                  ×\n                </button>\n              </div>\n              \n              <div className=\"mb-4\">\n                <div className=\"aspect-video bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center\">\n                  <PhotoIcon className=\"h-16 w-16 text-gray-400\" />\n                  <p className=\"ml-4 text-gray-500 dark:text-gray-400\">\n                    Imagem: {selectedImage?.name || 'Sem nome'}\n                  </p>\n                </div>\n              </div>\n              \n              {selectedImage.description && (\n                <div className=\"mb-4\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {selectedImage.description}\n                  </p>\n                </div>\n              )}\n              \n              <div className=\"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\n                <span>{formatDateTime(selectedImage.timestamp)}</span>\n                <button className=\"text-blue-600 dark:text-blue-400 hover:underline\">\n                  Download\n                </button>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default QualityTestDetail;"],"names":["ClipboardDocumentListIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","QualityTestDetail","testId","useParams","navigate","useNavigate","test","setTest","useState","loading","setLoading","error","setError","selectedImage","setSelectedImage","showImageModal","setShowImageModal","user","useAuth","isConnected","useSocket","useEffect","response","data","err","getResultConfig","result","CheckCircleIcon","XCircleIcon","ClockIcon","getTestTypeLabel","type","getShiftLabel","shift","getDefectSeverityConfig","severity","handleImageClick","image","handlePrint","handleExport","handleEdit","handleDelete","jsx","jsxs","ExclamationCircleIcon","Link","ArrowLeftIcon","resultConfig","ResultIcon","testResults","passedTests","totalTests","Fragment","Helmet","cn","_a","formatDateTime","PrinterIcon","ArrowDownTrayIcon","PencilIcon","TrashIcon","CogIcon","_b","_c","UserIcon","_d","BeakerIcon","DocumentTextIcon","testName","testConfig","TestIcon","testLabels","ChartBarIcon","measurements","measurementLabels","measurement","statusConfig","StatusIcon","ExclamationTriangleIcon","defect","severityConfig","InformationCircleIcon","images","PhotoIcon","imageName","index","EyeIcon","e","action","_e","_f","_g","_h","_i","item","AnimatePresence","motion"],"mappings":"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","x_google_ignoreList":[0]}
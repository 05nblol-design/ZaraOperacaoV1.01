{"version":3,"file":"Dashboard-nTOTCUVY.js","sources":["../../src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  ChartBarIcon,\n  CogIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  ClockIcon,\n  UserGroupIcon,\n  WrenchScrewdriverIcon,\n  BeakerIcon,\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n  EyeIcon,\n  PlusIcon\n} from '@heroicons/react/24/outline';\n\n// Hooks\nimport { useAuth } from '@/hooks/useAuth';\nimport { useMachinePermissions } from '@/hooks/useMachinePermissions';\nimport { useSocket } from '@/hooks/useSocket';\nimport { useMachineStatus } from '@/hooks/useMachineStatus';\nimport { useNotifications } from '@/contexts/NotificationContext';\nimport { useRealTimeProduction } from '@/hooks/useRealTimeProduction';\n\n// Utilitários\nimport { cn, formatNumber, formatDateTime } from '@/lib/utils';\nimport { ROUTES } from '@/config/routes';\nimport api from '@/services/api';\n\nconst Dashboard = () => {\n  const [timeRange, setTimeRange] = useState('today'); // today, week, month\n  const [selectedMetric, setSelectedMetric] = useState('production');\n  \n  const { user } = useAuth();\n  const { isConnected } = useSocket();\n  const { machines, stats } = useMachineStatus();\n  const { notifications } = useNotifications();\n  const { filterMachinesByPermissions } = useMachinePermissions();\n\n  // Usar dados agregados da API ao invés de cálculos locais\n  const [aggregatedData, setAggregatedData] = useState({\n    totalProduction: 0,\n    totalRunningTime: 0,\n    averageEfficiency: 0,\n    totalDowntime: 0\n  });\n\n  // Buscar dados agregados de produção da API\n  const fetchAggregatedProduction = async () => {\n    try {\n      const response = await api.get('/machines/production/aggregate');\n      if (response.data.success) {\n        setAggregatedData(response.data.data);\n      }\n    } catch (error) {\n      console.error('Erro ao buscar dados agregados:', error);\n      // Fallback: usar dados básicos das máquinas\n      if (machines && machines.length > 0) {\n        const filteredMachines = filterMachinesByPermissions(machines, 'canView');\n        const runningMachines = filteredMachines.filter(m => \n          m.status === 'FUNCIONANDO' || m.status === 'RUNNING'\n        );\n        \n        setAggregatedData({\n          totalProduction: runningMachines.length * 100, // Estimativa básica\n          totalRunningTime: runningMachines.length * 60,\n          averageEfficiency: runningMachines.length > 0 ? 85 : 0,\n          totalDowntime: (filteredMachines.length - runningMachines.length) * 30\n        });\n      }\n    }\n  };\n\n  // Atualizar dados agregados periodicamente\n  useEffect(() => {\n    fetchAggregatedProduction();\n    const interval = setInterval(fetchAggregatedProduction, 30000); // A cada 30 segundos\n    return () => clearInterval(interval);\n  }, [machines]);\n\n  const realTimeData = aggregatedData;\n\n  // Estados para dados do dashboard\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [recentActivities, setRecentActivities] = useState([]);\n\n  // Estatísticas das máquinas\n  const machineStats = {\n    total: stats?.total || 12,\n    running: stats?.running || 8,\n    stopped: stats?.stopped || 2,\n    maintenance: stats?.maintenance || 1,\n    error: stats?.error || 1\n  };\n\n  // Notificações recentes\n  const recentNotifications = (notifications || []).slice(0, 5);\n\n  // Função para buscar dados do dashboard\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await api.get(`/reports/dashboard?timeRange=${timeRange}`);\n      \n      if (response.data.success) {\n        setDashboardData(response.data.data);\n        setRecentActivities(response.data.data.recentActivities || []);\n      } else {\n        throw new Error(response.data.message || 'Erro ao carregar dados');\n      }\n    } catch (err) {\n      console.error('Erro ao buscar dados do dashboard:', err);\n      setError(err.response?.data?.message || err.message || 'Erro ao carregar dados do dashboard');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Buscar dados quando o componente montar ou timeRange mudar\n  useEffect(() => {\n    fetchDashboardData();\n  }, [timeRange]);\n\n  const getActivityIcon = (type) => {\n    switch (type) {\n      case 'quality_test':\n        return BeakerIcon;\n      case 'machine_stop':\n      case 'teflon_change':\n        return WrenchScrewdriverIcon;\n      case 'quality_alert':\n        return ExclamationTriangleIcon;\n      default:\n        return ClockIcon;\n    }\n  };\n\n  const getActivityColor = (status) => {\n    switch (status) {\n      case 'success':\n        return 'text-green-600 bg-green-100 dark:bg-green-900/20 dark:text-green-400';\n      case 'warning':\n        return 'text-yellow-600 bg-yellow-100 dark:bg-yellow-900/20 dark:text-yellow-400';\n      case 'error':\n        return 'text-red-600 bg-red-100 dark:bg-red-900/20 dark:text-red-400';\n      default:\n        return 'text-blue-600 bg-blue-100 dark:bg-blue-900/20 dark:text-blue-400';\n    }\n  };\n\n  const MetricCard = ({ title, value, target, change, trend, icon: Icon, unit = '', format = 'number' }) => {\n    const isPositiveTrend = trend === 'up';\n    const TrendIcon = isPositiveTrend ? ArrowTrendingUpIcon : ArrowTrendingDownIcon;\n    \n    const formatValue = (val) => {\n      switch (format) {\n        case 'percentage':\n          return `${val}%`;\n        case 'time':\n          return `${val}min`;\n        default:\n          return formatNumber(val) + unit;\n      }\n    };\n\n    return (\n      <motion.div\n        whileHover={{ scale: 1.02 }}\n        className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-blue-100 dark:bg-blue-900/20 rounded-lg\">\n              <Icon className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                {title}\n              </p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {formatValue(value)}\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"text-right\">\n            <div className={cn(\n              'flex items-center space-x-1 text-sm font-medium',\n              change > 0 \n                ? 'text-green-600 dark:text-green-400'\n                : 'text-red-600 dark:text-red-400'\n            )}>\n              <TrendIcon className=\"h-4 w-4\" />\n              <span>{Math.abs(change)}%</span>\n            </div>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n              Meta: {formatValue(target)}\n            </p>\n          </div>\n        </div>\n        \n        {/* Barra de progresso */}\n        <div className=\"mt-4\">\n          <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1\">\n            <span>Progresso</span>\n            <span>{Math.round((value / target) * 100)}%</span>\n          </div>\n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n            <div \n              className={cn(\n                'h-2 rounded-full transition-all duration-300',\n                value >= target \n                  ? 'bg-green-500'\n                  : value >= target * 0.8\n                  ? 'bg-yellow-500'\n                  : 'bg-red-500'\n              )}\n              style={{ width: `${Math.min((value / target) * 100, 100)}%` }}\n            />\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard - Sistema ZARA</title>\n        <meta name=\"description\" content=\"Dashboard principal do Sistema ZARA\" />\n      </Helmet>\n      \n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              Dashboard\n            </h1>\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n              Bem-vindo de volta, {user?.name}! Aqui está um resumo das operações.\n            </p>\n          </div>\n          \n          <div className=\"mt-4 sm:mt-0 flex items-center space-x-3\">\n            {/* Seletor de período */}\n            <select\n              value={timeRange}\n              onChange={(e) => setTimeRange(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"today\">Hoje</option>\n              <option value=\"week\">Esta Semana</option>\n              <option value=\"month\">Este Mês</option>\n            </select>\n            \n            {/* Status de conexão */}\n            <div className={cn(\n              'flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium',\n              isConnected \n                ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n            )}>\n              <div className={cn(\n                'h-2 w-2 rounded-full',\n                isConnected ? 'bg-green-500' : 'bg-red-500'\n              )} />\n              <span>{isConnected ? 'Online' : 'Offline'}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Loading State */}\n        {loading && (\n          <div className=\"flex justify-center items-center py-12\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            <span className=\"ml-2 text-gray-600 dark:text-gray-400\">Carregando dados...</span>\n          </div>\n        )}\n\n        {/* Error State */}\n        {error && (\n          <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <ExclamationTriangleIcon className=\"h-5 w-5 text-red-400 mr-2\" />\n              <p className=\"text-red-800 dark:text-red-400\">Erro ao carregar dados: {error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Métricas principais - Dados Reais */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <MetricCard\n            title=\"Produção Total\"\n            value={realTimeData.totalProduction}\n            target={dashboardData?.production?.target || 10000}\n            change={dashboardData?.production?.change || 5}\n            trend={realTimeData.totalProduction > (dashboardData?.production?.target || 10000) * 0.8 ? 'up' : 'down'}\n            icon={ChartBarIcon}\n            unit=\" pcs\"\n          />\n          \n          <MetricCard\n            title=\"Taxa de Qualidade\"\n            value={dashboardData?.quality?.passRate || 95}\n            target={dashboardData?.quality?.target || 98}\n            change={dashboardData?.quality?.change || 2}\n            trend={dashboardData?.quality?.trend || 'up'}\n            icon={BeakerIcon}\n            format=\"percentage\"\n          />\n          \n          <MetricCard\n            title=\"Eficiência Geral\"\n            value={Math.round(realTimeData.averageEfficiency)}\n            target={dashboardData?.efficiency?.target || 90}\n            change={dashboardData?.efficiency?.change || 3}\n            trend={realTimeData.averageEfficiency >= 80 ? 'up' : 'down'}\n            icon={CogIcon}\n            format=\"percentage\"\n          />\n          \n          <MetricCard\n            title=\"Tempo de Parada\"\n            value={Math.round(realTimeData.totalDowntime)}\n            target={dashboardData?.downtime?.target || 120}\n            change={dashboardData?.downtime?.change || -10}\n            trend={realTimeData.totalDowntime < 120 ? 'up' : 'down'}\n            icon={ClockIcon}\n            format=\"time\"\n          />\n        </div>\n\n        {/* Seções adicionais */}\n        {!loading && !error && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Status das Máquinas */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Status das Máquinas\n                </h3>\n                <Link\n                  to={ROUTES.MACHINES}\n                  className=\"text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 flex items-center space-x-1\"\n                >\n                  <span>Ver todas</span>\n                  <EyeIcon className=\"h-4 w-4\" />\n                </Link>\n              </div>\n              \n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-green-700 dark:text-green-300\">\n                    {machineStats.running}\n                  </div>\n                  <div className=\"text-sm text-green-600 dark:text-green-400\">\n                    Funcionando\n                  </div>\n                </div>\n                \n                <div className=\"text-center p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-gray-700 dark:text-gray-300\">\n                    {machineStats.stopped}\n                  </div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    Paradas\n                  </div>\n                </div>\n                \n                <div className=\"text-center p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-yellow-700 dark:text-yellow-300\">\n                    {machineStats.maintenance}\n                  </div>\n                  <div className=\"text-sm text-yellow-600 dark:text-yellow-400\">\n                    Manutenção\n                  </div>\n                </div>\n                \n                <div className=\"text-center p-4 bg-red-50 dark:bg-red-900/20 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-red-700 dark:text-red-300\">\n                    {machineStats.error}\n                  </div>\n                  <div className=\"text-sm text-red-600 dark:text-red-400\">\n                    Erro\n                  </div>\n                </div>\n              </div>\n              \n              {/* Gráfico de barras simples */}\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between text-sm\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Eficiência por Turno</span>\n                </div>\n                <div className=\"space-y-2\">\n                  {[\n                    { name: 'Turno 1', value: 92, color: 'bg-green-500' },\n                    { name: 'Turno 2', value: 87, color: 'bg-yellow-500' },\n                    { name: 'Turno 3', value: 83, color: 'bg-red-500' }\n                  ].map((shift) => (\n                    <div key={shift.name} className=\"flex items-center space-x-3\">\n                      <div className=\"w-16 text-sm text-gray-600 dark:text-gray-400\">\n                        {shift.name}\n                      </div>\n                      <div className=\"flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                        <div \n                          className={cn('h-2 rounded-full', shift.color)}\n                          style={{ width: `${shift.value}%` }}\n                        />\n                      </div>\n                      <div className=\"w-12 text-sm font-medium text-gray-900 dark:text-white\">\n                        {shift.value}%\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Atividades Recentes */}\n          <div>\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Atividades Recentes\n                </h3>\n                <Link\n                  to=\"/activities\"\n                  className=\"text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n                >\n                  Ver todas\n                </Link>\n              </div>\n              \n              <div className=\"space-y-4\">\n                {recentActivities.map((activity) => {\n                  const Icon = getActivityIcon(activity.type);\n                  return (\n                    <div key={activity.id} className=\"flex items-start space-x-3\">\n                      <div className={cn(\n                        'flex-shrink-0 p-2 rounded-lg',\n                        getActivityColor(activity.status)\n                      )}>\n                        <Icon className=\"h-4 w-4\" />\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm text-gray-900 dark:text-white\">\n                          {activity.message}\n                        </p>\n                        <div className=\"flex items-center space-x-2 mt-1\">\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                            {activity.user}\n                          </p>\n                          <span className=\"text-xs text-gray-400\">•</span>\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                            {formatDateTime(activity.timestamp)}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              \n              {/* Ações rápidas */}\n              <div className=\"mt-6 pt-6 border-t border-gray-200 dark:border-gray-700\">\n                <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-3\">\n                  Ações Rápidas\n                </h4>\n                <div className=\"space-y-2\">\n                  <Link\n                    to={ROUTES.QUALITY_NEW}\n                    className=\"flex items-center space-x-2 p-2 text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-md transition-colors\"\n                  >\n                    <PlusIcon className=\"h-4 w-4\" />\n                    <span>Novo Teste de Qualidade</span>\n                  </Link>\n                  \n                  {(user?.role === 'ADMIN' || user?.role === 'MANAGER') && (\n                    <Link\n                      to={ROUTES.REPORTS}\n                      className=\"flex items-center space-x-2 p-2 text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-md transition-colors\"\n                    >\n                      <ChartBarIcon className=\"h-4 w-4\" />\n                      <span>Ver Relatórios</span>\n                    </Link>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;"],"names":["Dashboard","timeRange","setTimeRange","useState","selectedMetric","setSelectedMetric","user","useAuth","isConnected","useSocket","machines","stats","useMachineStatus","notifications","useNotifications","filterMachinesByPermissions","useMachinePermissions","aggregatedData","setAggregatedData","fetchAggregatedProduction","response","api","error","filteredMachines","runningMachines","m","useEffect","interval","realTimeData","dashboardData","setDashboardData","loading","setLoading","setError","recentActivities","setRecentActivities","machineStats","fetchDashboardData","err","_b","_a","getActivityIcon","type","BeakerIcon","WrenchScrewdriverIcon","ExclamationTriangleIcon","ClockIcon","getActivityColor","status","MetricCard","title","value","target","change","trend","Icon","unit","format","TrendIcon","ArrowTrendingUpIcon","ArrowTrendingDownIcon","formatValue","val","formatNumber","jsxs","motion","jsx","cn","Fragment","Helmet","e","_c","ChartBarIcon","_d","_e","_f","_g","_h","_i","CogIcon","_j","_k","Link","ROUTES","EyeIcon","shift","activity","formatDateTime","PlusIcon"],"mappings":"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"}
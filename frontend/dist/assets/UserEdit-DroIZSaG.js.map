{"version":3,"file":"UserEdit-DroIZSaG.js","sources":["../../src/pages/UserEdit.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { motion } from 'framer-motion';\nimport { toast } from 'react-hot-toast';\nimport {\n  ArrowLeftIcon,\n  UserIcon,\n  EnvelopeIcon,\n  PhoneIcon,\n  ShieldCheckIcon,\n  CheckCircleIcon,\n  XCircleIcon,\n  ExclamationTriangleIcon,\n  EyeIcon,\n  EyeSlashIcon\n} from '@heroicons/react/24/outline';\n\n// Hooks\nimport { useAuth } from '@/hooks/useAuth';\n\n// Componentes\nimport LoadingSpinner from '@/components/ui/LoadingSpinner';\nimport { cn } from '@/lib/utils';\n\nconst UserEdit = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  \n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'OPERATOR',\n    badgeNumber: '',\n    isActive: true,\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [errors, setErrors] = useState({});\n\n  // Buscar dados do usuário\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        setLoading(true);\n        \n        const response = await fetch(`/api/users/${id}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        \n        if (!response.ok) {\n          throw new Error('Erro ao carregar dados do usuário');\n        }\n        \n        const data = await response.json();\n        \n        if (data.success) {\n          const userData = data.data;\n          setFormData({\n            name: userData.name || '',\n            email: userData.email || '',\n            phone: userData.phone || '',\n            role: userData.role || 'OPERATOR',\n            badgeNumber: userData.badgeNumber || '',\n            isActive: userData.isActive !== undefined ? userData.isActive : true,\n            password: '',\n            confirmPassword: ''\n          });\n        } else {\n          throw new Error(data.message || 'Erro ao carregar dados do usuário');\n        }\n      } catch (err) {\n        setError('Erro ao carregar dados do usuário');\n        toast.error('Erro ao carregar dados do usuário');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, [id]);\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Nome obrigatório\n    if (!formData.name.trim()) {\n      newErrors.name = 'Nome é obrigatório';\n    }\n\n    // Email obrigatório e válido\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email é obrigatório';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Email inválido';\n    }\n\n    // Validação de senha (apenas se preenchida)\n    if (formData.password) {\n      if (formData.password.length < 6) {\n        newErrors.password = 'Senha deve ter pelo menos 6 caracteres';\n      }\n      if (formData.password !== formData.confirmPassword) {\n        newErrors.confirmPassword = 'Senhas não coincidem';\n      }\n    }\n\n    // Número do crachá único (se preenchido)\n    if (formData.badgeNumber && formData.badgeNumber.length < 3) {\n      newErrors.badgeNumber = 'Número do crachá deve ter pelo menos 3 caracteres';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      toast.error('Por favor, corrija os erros no formulário');\n      return;\n    }\n\n    try {\n      setSaving(true);\n      \n      // Preparar dados para envio (remover campos vazios)\n      const updateData = {\n        name: formData.name.trim(),\n        email: formData.email.trim(),\n        phone: formData.phone.trim() || null,\n        role: formData.role,\n        badgeNumber: formData.badgeNumber.trim() || null,\n        isActive: formData.isActive\n      };\n\n      // Adicionar senha apenas se foi preenchida\n      if (formData.password) {\n        updateData.password = formData.password;\n      }\n\n      const response = await fetch(`/api/users/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updateData)\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        toast.success('Usuário atualizado com sucesso!');\n        navigate(`/users/${id}`);\n      } else {\n        throw new Error(data.message || 'Erro ao atualizar usuário');\n      }\n    } catch (err) {\n      console.error('Erro ao atualizar usuário:', err);\n      toast.error(err.message || 'Erro ao atualizar usuário');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    \n    // Limpar erro do campo quando o usuário começar a digitar\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <ExclamationTriangleIcon className=\"mx-auto h-12 w-12 text-red-500 mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            {error}\n          </h3>\n          <button\n            onClick={() => navigate('/users')}\n            className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\n            Voltar aos Usuários\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Editar Usuário - Sistema ZARA</title>\n        <meta name=\"description\" content=\"Editar informações do usuário\" />\n      </Helmet>\n\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={() => navigate(`/users/${id}`)}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n            >\n              <ArrowLeftIcon className=\"h-5 w-5\" />\n            </button>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                Editar Usuário\n              </h1>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                Atualize as informações do usuário\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Formulário */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-white dark:bg-gray-800 shadow rounded-lg\"\n        >\n          <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {/* Nome */}\n              <div>\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Nome Completo *\n                </label>\n                <div className=\"relative\">\n                  <UserIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    className={cn(\n                      \"w-full pl-10 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\",\n                      errors.name ? \"border-red-300 dark:border-red-600\" : \"border-gray-300 dark:border-gray-600\"\n                    )}\n                    placeholder=\"Digite o nome completo\"\n                  />\n                </div>\n                {errors.name && (\n                  <p className=\"mt-1 text-sm text-red-600 dark:text-red-400\">{errors.name}</p>\n                )}\n              </div>\n\n              {/* Email */}\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Email *\n                </label>\n                <div className=\"relative\">\n                  <EnvelopeIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    className={cn(\n                      \"w-full pl-10 pr-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\",\n                      errors.email ? \"border-red-300 dark:border-red-600\" : \"border-gray-300 dark:border-gray-600\"\n                    )}\n                    placeholder=\"Digite o email\"\n                  />\n                </div>\n                {errors.email && (\n                  <p className=\"mt-1 text-sm text-red-600 dark:text-red-400\">{errors.email}</p>\n                )}\n              </div>\n\n              {/* Telefone */}\n              <div>\n                <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Telefone\n                </label>\n                <div className=\"relative\">\n                  <PhoneIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleInputChange}\n                    className=\"w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                    placeholder=\"Digite o telefone\"\n                  />\n                </div>\n              </div>\n\n              {/* Função */}\n              <div>\n                <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Função *\n                </label>\n                <div className=\"relative\">\n                  <ShieldCheckIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <select\n                    id=\"role\"\n                    name=\"role\"\n                    value={formData.role}\n                    onChange={handleInputChange}\n                    className=\"w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                  >\n                    <option value=\"OPERATOR\">Operador</option>\n                    <option value=\"LEADER\">Líder</option>\n                    <option value=\"MANAGER\">Gerente</option>\n                    <option value=\"ADMIN\">Administrador</option>\n                  </select>\n                </div>\n              </div>\n\n              {/* Número do Crachá */}\n              <div>\n                <label htmlFor=\"badgeNumber\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Número do Crachá\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"badgeNumber\"\n                  name=\"badgeNumber\"\n                  value={formData.badgeNumber}\n                  onChange={handleInputChange}\n                  className={cn(\n                    \"w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\",\n                    errors.badgeNumber ? \"border-red-300 dark:border-red-600\" : \"border-gray-300 dark:border-gray-600\"\n                  )}\n                  placeholder=\"Digite o número do crachá\"\n                />\n                {errors.badgeNumber && (\n                  <p className=\"mt-1 text-sm text-red-600 dark:text-red-400\">{errors.badgeNumber}</p>\n                )}\n              </div>\n\n              {/* Status */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Status da Conta\n                </label>\n                <div className=\"flex items-center space-x-3\">\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"isActive\"\n                      checked={formData.isActive}\n                      onChange={handleInputChange}\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                    />\n                    <span className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\">\n                      Conta ativa\n                    </span>\n                  </label>\n                  {formData.isActive ? (\n                    <CheckCircleIcon className=\"h-5 w-5 text-green-500\" />\n                  ) : (\n                    <XCircleIcon className=\"h-5 w-5 text-red-500\" />\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Seção de Senha */}\n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                Alterar Senha (opcional)\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Nova Senha */}\n                <div>\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Nova Senha\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      type={showPassword ? \"text\" : \"password\"}\n                      id=\"password\"\n                      name=\"password\"\n                      value={formData.password}\n                      onChange={handleInputChange}\n                      className={cn(\n                        \"w-full pr-10 pl-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\",\n                        errors.password ? \"border-red-300 dark:border-red-600\" : \"border-gray-300 dark:border-gray-600\"\n                      )}\n                      placeholder=\"Digite a nova senha\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showPassword ? (\n                        <EyeSlashIcon className=\"h-5 w-5\" />\n                      ) : (\n                        <EyeIcon className=\"h-5 w-5\" />\n                      )}\n                    </button>\n                  </div>\n                  {errors.password && (\n                    <p className=\"mt-1 text-sm text-red-600 dark:text-red-400\">{errors.password}</p>\n                  )}\n                </div>\n\n                {/* Confirmar Senha */}\n                <div>\n                  <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Confirmar Nova Senha\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      type={showConfirmPassword ? \"text\" : \"password\"}\n                      id=\"confirmPassword\"\n                      name=\"confirmPassword\"\n                      value={formData.confirmPassword}\n                      onChange={handleInputChange}\n                      className={cn(\n                        \"w-full pr-10 pl-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\",\n                        errors.confirmPassword ? \"border-red-300 dark:border-red-600\" : \"border-gray-300 dark:border-gray-600\"\n                      )}\n                      placeholder=\"Confirme a nova senha\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showConfirmPassword ? (\n                        <EyeSlashIcon className=\"h-5 w-5\" />\n                      ) : (\n                        <EyeIcon className=\"h-5 w-5\" />\n                      )}\n                    </button>\n                  </div>\n                  {errors.confirmPassword && (\n                    <p className=\"mt-1 text-sm text-red-600 dark:text-red-400\">{errors.confirmPassword}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Botões */}\n            <div className=\"flex items-center justify-end space-x-4 pt-6 border-t border-gray-200 dark:border-gray-700\">\n              <button\n                type=\"button\"\n                onClick={() => navigate(`/users/${id}`)}\n                className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n              >\n                Cancelar\n              </button>\n              <button\n                type=\"submit\"\n                disabled={saving}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {saving ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Salvando...\n                  </div>\n                ) : (\n                  'Salvar Alterações'\n                )}\n              </button>\n            </div>\n          </form>\n        </motion.div>\n      </div>\n    </>\n  );\n};\n\nexport default UserEdit;"],"names":["UserEdit","id","useParams","navigate","useNavigate","user","useAuth","loading","setLoading","useState","saving","setSaving","error","setError","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","formData","setFormData","errors","setErrors","useEffect","response","data","userData","toast","validateForm","newErrors","handleSubmit","e","updateData","err","handleInputChange","name","value","type","checked","prev","jsx","LoadingSpinner","jsxs","ExclamationTriangleIcon","ArrowLeftIcon","Fragment","Helmet","motion","UserIcon","cn","EnvelopeIcon","PhoneIcon","ShieldCheckIcon","CheckCircleIcon","XCircleIcon","EyeSlashIcon","EyeIcon"],"mappings":"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"}
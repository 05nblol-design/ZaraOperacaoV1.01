#!/usr/bin/env node

/**
 * CORRE√á√ÉO URGENTE - DATABASE_URL Railway
 * Detecta e corrige hostname gen√©rico 'host' no DATABASE_URL
 */

const fs = require('fs');
const path = require('path');

function checkDatabaseURL() {
    console.log('üîç DIAGN√ìSTICO URGENTE - DATABASE_URL Railway\n');
    
    // Verificar vari√°vel de ambiente
    const databaseUrl = process.env.DATABASE_URL;
    
    if (!databaseUrl) {
        console.log('‚ùå DATABASE_URL n√£o encontrada no ambiente');
        console.log('\nüìã VARI√ÅVEIS DISPON√çVEIS:');
        Object.keys(process.env)
            .filter(key => key.includes('DATABASE') || key.includes('POSTGRES'))
            .forEach(key => {
                console.log(`   ${key}: ${process.env[key] ? '[DEFINIDA]' : '[VAZIA]'}`);
            });
        
        showRailwayInstructions();
        return;
    }
    
    console.log('‚úÖ DATABASE_URL encontrada');
    console.log(`üìç URL atual: ${databaseUrl.substring(0, 50)}...`);
    
    // Verificar problemas
    const problems = [];
    
    // Problema 1: Hostname gen√©rico 'host'
    if (databaseUrl.includes('@host:')) {
        problems.push({
            type: 'HOSTNAME_GEN√âRICO',
            description: "Hostname 'host' √© gen√©rico, n√£o √© um servidor real",
            severity: 'CR√çTICO'
        });
    }
    
    // Problema 2: localhost
    if (databaseUrl.includes('@localhost:') || databaseUrl.includes('@127.0.0.1:')) {
        problems.push({
            type: 'LOCALHOST',
            description: 'Usando localhost ao inv√©s do hostname do Railway',
            severity: 'CR√çTICO'
        });
    }
    
    // Problema 3: Porta inv√°lida
    const portMatch = databaseUrl.match(/:([0-9]+)\//); 
    if (portMatch && portMatch[1] !== '5432') {
        problems.push({
            type: 'PORTA_INV√ÅLIDA',
            description: `Porta ${portMatch[1]} pode estar incorreta (padr√£o: 5432)`,
            severity: 'M√âDIO'
        });
    }
    
    // Mostrar resultados
    if (problems.length === 0) {
        console.log('‚úÖ DATABASE_URL parece estar correta');
        console.log('\nüîß Se ainda h√° erro de conex√£o, verifique:');
        console.log('   - Servi√ßo PostgreSQL est√° ativo no Railway');
        console.log('   - Credenciais est√£o corretas');
        console.log('   - N√£o h√° firewall bloqueando a conex√£o');
    } else {
        console.log('\nüö® PROBLEMAS DETECTADOS:');
        problems.forEach((problem, index) => {
            console.log(`\n${index + 1}. ${problem.type} [${problem.severity}]`);
            console.log(`   ${problem.description}`);
        });
        
        showRailwayInstructions();
    }
}

function showRailwayInstructions() {
    console.log('\n' + '='.repeat(60));
    console.log('üöÄ INSTRU√á√ïES PARA CORRIGIR NO RAILWAY');
    console.log('='.repeat(60));
    
    console.log('\n1Ô∏è‚É£ ACESSE O RAILWAY:');
    console.log('   https://railway.app/dashboard');
    
    console.log('\n2Ô∏è‚É£ VAYA PARA SEU PROJETO:');
    console.log('   - Clique no projeto da aplica√ß√£o Zara');
    console.log('   - Voc√™ ver√° os servi√ßos: Backend, PostgreSQL, etc.');
    
    console.log('\n3Ô∏è‚É£ OBTENHA A URL CORRETA:');
    console.log('   - Clique no servi√ßo PostgreSQL');
    console.log('   - V√° na aba "Variables"');
    console.log('   - Procure por DATABASE_URL');
    console.log('   - Copie o valor completo');
    
    console.log('\n4Ô∏è‚É£ CONFIGURE NO BACKEND:');
    console.log('   - Volte e clique no servi√ßo Backend');
    console.log('   - V√° na aba "Variables"');
    console.log('   - Adicione/Edite: DATABASE_URL');
    console.log('   - Cole a URL copiada do PostgreSQL');
    console.log('   - Clique em "Save"');
    
    console.log('\n5Ô∏è‚É£ AGUARDE O REDEPLOY:');
    console.log('   - O Railway far√° redeploy autom√°tico');
    console.log('   - Aguarde 3-5 minutos');
    
    console.log('\n6Ô∏è‚É£ TESTE A APLICA√á√ÉO:');
    console.log('   - Acesse: https://seu-backend.railway.app/health');
    console.log('   - Deve retornar status OK');
    
    console.log('\nüìã FORMATO CORRETO DA URL:');
    console.log('postgresql://postgres:senha@railway-host.railway.app:5432/railway');
    
    console.log('\n‚ùå FORMATOS INCORRETOS:');
    console.log('postgresql://postgres:senha@host:5432/railway');
    console.log('postgresql://postgres:senha@localhost:5432/railway');
    
    console.log('\n‚è±Ô∏è TEMPO ESTIMADO: 5-10 minutos total');
}

function generateCorrectURL() {
    console.log('\nüí° EXEMPLO DE URL CORRETA PARA RAILWAY:');
    console.log('postgresql://postgres:SUA_SENHA@railway-host.railway.app:5432/railway');
    
    console.log('\nüîß SUBSTITUA:');
    console.log('   - SUA_SENHA: pela senha real do PostgreSQL');
    console.log('   - railway-host.railway.app: pelo hostname real do Railway');
    console.log('   - railway: pelo nome real do banco de dados');
}

// Executar diagn√≥stico
if (require.main === module) {
    checkDatabaseURL();
    generateCorrectURL();
    
    console.log('\nüéØ PR√ìXIMA A√á√ÉO: Acesse o Railway Dashboard e corrija o DATABASE_URL');
    console.log('üìû Em caso de d√∫vidas, consulte: RAILWAY-URGENT-DATABASE-FIX.md');
}

module.exports = { checkDatabaseURL, showRailwayInstructions };
#!/usr/bin/env node

/**
 * üöÄ FOR√áA REDEPLOY NO VERCEL
 * 
 * For√ßa um novo deploy no Vercel ap√≥s corre√ß√µes cr√≠ticas
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ FOR√áANDO REDEPLOY NO VERCEL');
console.log('=' .repeat(40));

try {
  // 1. Verificar se vercel CLI est√° instalado
  console.log('1Ô∏è‚É£ Verificando Vercel CLI...');
  
  try {
    execSync('vercel --version', { stdio: 'pipe' });
    console.log('‚úÖ Vercel CLI encontrado');
  } catch (e) {
    console.log('‚ö†Ô∏è Vercel CLI n√£o encontrado, instalando...');
    execSync('npm install -g vercel', { stdio: 'inherit' });
  }

  // 2. Navegar para o diret√≥rio frontend
  const frontendDir = path.join(__dirname, 'frontend');
  process.chdir(frontendDir);
  console.log('üìÅ Navegando para:', frontendDir);

  // 3. Verificar se h√° mudan√ßas para commit
  console.log('2Ô∏è‚É£ Verificando status do Git...');
  
  try {
    const gitStatus = execSync('git status --porcelain', { encoding: 'utf8' });
    if (gitStatus.trim()) {
      console.log('üìù Mudan√ßas detectadas, fazendo commit...');
      execSync('git add .', { stdio: 'inherit' });
      execSync('git commit -m "fix: Force redeploy after acc error fix"', { stdio: 'inherit' });
      execSync('git push', { stdio: 'inherit' });
    } else {
      console.log('‚úÖ Reposit√≥rio limpo');
    }
  } catch (e) {
    console.log('‚ö†Ô∏è Erro no Git (pode ser normal):', e.message.split('\n')[0]);
  }

  // 4. Criar arquivo de trigger para for√ßar redeploy
  const triggerFile = '.vercel-redeploy-trigger';
  const timestamp = new Date().toISOString();
  
  console.log('3Ô∏è‚É£ Criando trigger de redeploy...');
  fs.writeFileSync(triggerFile, `Redeploy triggered at: ${timestamp}\nReason: Fix acc is not defined error\n`);
  
  // 5. Fazer deploy
  console.log('4Ô∏è‚É£ Iniciando deploy no Vercel...');
  
  try {
    // Tentar deploy com produ√ß√£o
    execSync('vercel --prod --yes', { stdio: 'inherit' });
    console.log('‚úÖ Deploy de produ√ß√£o conclu√≠do!');
  } catch (e) {
    console.log('‚ö†Ô∏è Erro no deploy de produ√ß√£o, tentando deploy normal...');
    try {
      execSync('vercel --yes', { stdio: 'inherit' });
      console.log('‚úÖ Deploy normal conclu√≠do!');
    } catch (e2) {
      console.log('‚ùå Erro no deploy:', e2.message);
      console.log('\nüí° ALTERNATIVA: Deploy manual');
      console.log('1. Acesse: https://vercel.com/dashboard');
      console.log('2. Encontre o projeto sistema-zara-frontend');
      console.log('3. Clique em "Redeploy" na √∫ltima deployment');
      console.log('4. Aguarde o deploy completar');
    }
  }

  // 6. Limpar arquivo de trigger
  if (fs.existsSync(triggerFile)) {
    fs.unlinkSync(triggerFile);
  }

  console.log('\nüéØ PR√ìXIMOS PASSOS:');
  console.log('1. Aguarde 2-3 minutos para o deploy completar');
  console.log('2. Acesse: https://sistema-zara-frontend.vercel.app/leader-dashboard');
  console.log('3. Teste se o erro "acc is not defined" foi corrigido');
  console.log('4. Se necess√°rio, execute o script de diagn√≥stico no console');

} catch (error) {
  console.error('‚ùå Erro durante o processo:', error.message);
  console.log('\nüîß SOLU√á√ïES ALTERNATIVAS:');
  console.log('1. Deploy manual via dashboard do Vercel');
  console.log('2. Verificar se as mudan√ßas foram commitadas no Git');
  console.log('3. Aguardar deploy autom√°tico (pode levar alguns minutos)');
}

console.log('\n‚úÖ Processo conclu√≠do!');
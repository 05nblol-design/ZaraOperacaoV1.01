{
  "connectivity": {
    "Health Check": {
      "status": "TIMEOUT",
      "success": false,
      "error": "timeout of 15000ms exceeded"
    },
    "Root API": {
      "status": "TIMEOUT",
      "success": false,
      "error": "timeout of 15000ms exceeded"
    },
    "Auth Endpoint": {
      "status": "TIMEOUT",
      "success": false,
      "error": "timeout of 15000ms exceeded"
    }
  },
  "authentication": {
    "Admin": {
      "success": false,
      "status": "TIMEOUT",
      "error": "timeout of 15000ms exceeded"
    },
    "Operador": {
      "success": false,
      "status": "TIMEOUT",
      "error": "timeout of 15000ms exceeded"
    },
    "Lucas": {
      "success": false,
      "status": "TIMEOUT",
      "error": "timeout of 15000ms exceeded"
    }
  },
  "endpoints": {},
  "validation": {},
  "consoleLogs": [
    {
      "file": "api\\index.js",
      "line": 127,
      "content": "console.log('üìß Servi√ßos de notifica√ß√£o habilitados');",
      "type": "log"
    },
    {
      "file": "api\\index.js",
      "line": 132,
      "content": "console.log('‚è∞ Agendador de tarefas habilitado');",
      "type": "log"
    },
    {
      "file": "api\\index.js",
      "line": 138,
      "content": "console.log('üè≠ Servi√ßo de produ√ß√£o em tempo real iniciado');",
      "type": "log"
    },
    {
      "file": "api\\index.js",
      "line": 190,
      "content": "console.log(`üöÄ Servidor ZARA (HTTP) rodando na porta ${PORT}`);",
      "type": "log"
    },
    {
      "file": "api\\index.js",
      "line": 191,
      "content": "console.log(`üåç Ambiente: ${process.env.NODE_ENV}`);",
      "type": "log"
    },
    {
      "file": "api\\index.js",
      "line": 192,
      "content": "console.log(`üìä Health check: http://localhost:${PORT}/api/health`);",
      "type": "log"
    },
    {
      "file": "api\\index.js",
      "line": 198,
      "content": "console.log(`üîí Servidor ZARA (HTTPS) rodando na porta ${HTTPS_PORT}`);",
      "type": "log"
    },
    {
      "file": "api\\index.js",
      "line": 199,
      "content": "console.log(`üîê SSL/TLS habilitado`);",
      "type": "log"
    },
    {
      "file": "api\\index.js",
      "line": 200,
      "content": "console.log(`üìä Health check: https://localhost:${HTTPS_PORT}/api/health`);",
      "type": "log"
    },
    {
      "file": "api\\index.js",
      "line": 214,
      "content": "console.log('üõë Recebido SIGTERM, encerrando servidor...');",
      "type": "log"
    },
    {
      "file": "api\\index.js",
      "line": 216,
      "content": "console.log('‚úÖ Servidor encerrado com sucesso');",
      "type": "log"
    },
    {
      "file": "cancel-remaining-operation.js",
      "line": 6,
      "content": "console.log('=== Cancelando opera√ß√£o restante ===');",
      "type": "log"
    },
    {
      "file": "cancel-remaining-operation.js",
      "line": 19,
      "content": "console.log(`Encontrada opera√ß√£o ativa: ${activeOp.user.name} na ${activeOp.machine.name} (${duration} min)`);",
      "type": "log"
    },
    {
      "file": "cancel-remaining-operation.js",
      "line": 37,
      "content": "console.log('Opera√ß√£o cancelada com sucesso!');",
      "type": "log"
    },
    {
      "file": "cancel-remaining-operation.js",
      "line": 39,
      "content": "console.log('Nenhuma opera√ß√£o ativa encontrada.');",
      "type": "log"
    },
    {
      "file": "cancel-remaining-operation.js",
      "line": 47,
      "content": "console.log(`\\nOpera√ß√µes ativas restantes: ${finalCheck}`);",
      "type": "log"
    },
    {
      "file": "cancel-remaining-operation.js",
      "line": 50,
      "content": "console.log('‚úÖ Todas as opera√ß√µes foram finalizadas! Operadores podem agora iniciar novas opera√ß√µes.');",
      "type": "log"
    },
    {
      "file": "cancel-remaining-operation.js",
      "line": 54,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-active-operation.js",
      "line": 17,
      "content": "console.log('\\n=== OPERA√á√ÉO ATIVA ENCONTRADA ===');",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 18,
      "content": "console.log('ID:', activeOp.id);",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 19,
      "content": "console.log('Usu√°rio:', activeOp.user.name, '(' + activeOp.user.email + ')');",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 20,
      "content": "console.log('M√°quina:', activeOp.machine.name);",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 21,
      "content": "console.log('In√≠cio:', activeOp.startTime);",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 22,
      "content": "console.log('Dura√ß√£o:', duration, 'minutos');",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 23,
      "content": "console.log('Notas:', activeOp.notes || 'Nenhuma');",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 26,
      "content": "console.log('\\n‚úÖ Esta √© uma opera√ß√£o recente (menos de 5 min)');",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 27,
      "content": "console.log('‚úÖ PROBLEMA RESOLVIDO! O sistema est√° funcionando normalmente.');",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 28,
      "content": "console.log('‚úÖ Operadores conseguem iniciar opera√ß√µes sem o erro anterior.');",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 30,
      "content": "console.log('\\n‚ö†Ô∏è  Esta opera√ß√£o pode estar travada.');",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 33,
      "content": "console.log('\\n‚úÖ Nenhuma opera√ß√£o ativa encontrada.');",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 34,
      "content": "console.log('‚úÖ Sistema limpo e pronto para novas opera√ß√µes.');",
      "type": "log"
    },
    {
      "file": "check-active-operation.js",
      "line": 38,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-active-operations.js",
      "line": 6,
      "content": "console.log('üîß Verificando opera√ß√µes ativas...');",
      "type": "log"
    },
    {
      "file": "check-active-operations.js",
      "line": 18,
      "content": "console.log(`\\nüìä Opera√ß√µes ativas encontradas: ${activeOperations.length}`);",
      "type": "log"
    },
    {
      "file": "check-active-operations.js",
      "line": 21,
      "content": "console.log('‚ùå Nenhuma opera√ß√£o ativa encontrada');",
      "type": "log"
    },
    {
      "file": "check-active-operations.js",
      "line": 22,
      "content": "console.log('üí° O servi√ßo de produ√ß√£o s√≥ atualiza dados quando h√° opera√ß√µes ativas');",
      "type": "log"
    },
    {
      "file": "check-active-operations.js",
      "line": 26,
      "content": "console.log(`- ${operation.machine.name}: ${operation.user.name}`);",
      "type": "log"
    },
    {
      "file": "check-active-operations.js",
      "line": 27,
      "content": "console.log(`  In√≠cio: ${operation.startTime}`);",
      "type": "log"
    },
    {
      "file": "check-active-operations.js",
      "line": 28,
      "content": "console.log(`  Dura√ß√£o: ${duration} minutos`);",
      "type": "log"
    },
    {
      "file": "check-active-operations.js",
      "line": 29,
      "content": "console.log(`  Status: ${operation.status}`);",
      "type": "log"
    },
    {
      "file": "check-active-operations.js",
      "line": 34,
      "content": "console.error('‚ùå Erro ao verificar opera√ß√µes:', error.message);",
      "type": "error"
    },
    {
      "file": "check-current-production.js",
      "line": 6,
      "content": "console.log('üìä Verificando dados de produ√ß√£o atuais...');",
      "type": "log"
    },
    {
      "file": "check-current-production.js",
      "line": 23,
      "content": "console.log(`\\nüìà Dados de produ√ß√£o de hoje (${today.toLocaleDateString()}):`);",
      "type": "log"
    },
    {
      "file": "check-current-production.js",
      "line": 26,
      "content": "console.log('‚ùå Nenhum dado de produ√ß√£o encontrado para hoje');",
      "type": "log"
    },
    {
      "file": "check-current-production.js",
      "line": 29,
      "content": "console.log(`- ${shift.machine.name}: ${shift.totalProduction} pe√ßas (Operador: ${shift.operator.name})`);",
      "type": "log"
    },
    {
      "file": "check-current-production.js",
      "line": 30,
      "content": "console.log(`  Turno: ${shift.shiftType} | Atualizado: ${shift.updatedAt.toLocaleString()}`);",
      "type": "log"
    },
    {
      "file": "check-current-production.js",
      "line": 41,
      "content": "console.log(`\\nüè≠ M√°quinas funcionando: ${runningMachines.length}`);",
      "type": "log"
    },
    {
      "file": "check-current-production.js",
      "line": 43,
      "content": "console.log(`- ${machine.name} (Velocidade: ${machine.productionSpeed} pe√ßas/min)`);",
      "type": "log"
    },
    {
      "file": "check-current-production.js",
      "line": 47,
      "content": "console.error('‚ùå Erro ao verificar produ√ß√£o:', error.message);",
      "type": "error"
    },
    {
      "file": "check-database.js",
      "line": 6,
      "content": "console.log('üîç Verificando dados no banco de dados...');",
      "type": "log"
    },
    {
      "file": "check-database.js",
      "line": 10,
      "content": "console.log(`üì± M√°quinas cadastradas: ${machineCount}`);",
      "type": "log"
    },
    {
      "file": "check-database.js",
      "line": 16,
      "content": "console.log('M√°quinas:', machines);",
      "type": "log"
    },
    {
      "file": "check-database.js",
      "line": 21,
      "content": "console.log(`üß™ Testes de qualidade: ${testCount}`);",
      "type": "log"
    },
    {
      "file": "check-database.js",
      "line": 34,
      "content": "console.log('Testes recentes:', recentTests);",
      "type": "log"
    },
    {
      "file": "check-database.js",
      "line": 39,
      "content": "console.log(`‚öôÔ∏è Opera√ß√µes de m√°quina: ${operationCount}`);",
      "type": "log"
    },
    {
      "file": "check-database.js",
      "line": 43,
      "content": "console.log(`üë• Usu√°rios cadastrados: ${userCount}`);",
      "type": "log"
    },
    {
      "file": "check-database.js",
      "line": 47,
      "content": "console.log(`üîî Notifica√ß√µes: ${notificationCount}`);",
      "type": "log"
    },
    {
      "file": "check-database.js",
      "line": 50,
      "content": "console.error('‚ùå Erro ao verificar banco de dados:', error);",
      "type": "error"
    },
    {
      "file": "check-final-status.js",
      "line": 14,
      "content": "console.log(`\\n=== STATUS FINAL ===`);",
      "type": "log"
    },
    {
      "file": "check-final-status.js",
      "line": 15,
      "content": "console.log(`Opera√ß√µes ativas: ${activeOps.length}`);",
      "type": "log"
    },
    {
      "file": "check-final-status.js",
      "line": 18,
      "content": "console.log('‚úÖ SUCESSO! N√£o h√° opera√ß√µes ativas.');",
      "type": "log"
    },
    {
      "file": "check-final-status.js",
      "line": 19,
      "content": "console.log('‚úÖ Operadores podem agora iniciar novas opera√ß√µes sem erro.');",
      "type": "log"
    },
    {
      "file": "check-final-status.js",
      "line": 20,
      "content": "console.log('\\nüîß PROBLEMA RESOLVIDO:');",
      "type": "log"
    },
    {
      "file": "check-final-status.js",
      "line": 21,
      "content": "console.log('   - Canceladas 22 opera√ß√µes travadas');",
      "type": "log"
    },
    {
      "file": "check-final-status.js",
      "line": 22,
      "content": "console.log('   - Sistema liberado para novas opera√ß√µes');",
      "type": "log"
    },
    {
      "file": "check-final-status.js",
      "line": 23,
      "content": "console.log('   - Erro \"Operador j√° possui opera√ß√£o ativa\" corrigido');",
      "type": "log"
    },
    {
      "file": "check-final-status.js",
      "line": 25,
      "content": "console.log('‚ùå Ainda h√° opera√ß√µes ativas:');",
      "type": "log"
    },
    {
      "file": "check-final-status.js",
      "line": 28,
      "content": "console.log(`   - ${op.user.name} na ${op.machine.name} (${duration} min)`);",
      "type": "log"
    },
    {
      "file": "check-final-status.js",
      "line": 33,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 5,
      "content": "console.log('üîç Verificando permiss√µes do operador Lucas (ID: 2)...');",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 15,
      "content": "console.log('‚ùå Usu√°rio com ID 2 n√£o encontrado');",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 19,
      "content": "console.log('üë§ Usu√°rio encontrado:', user);",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 34,
      "content": "console.log(`\\nüìã Permiss√µes encontradas: ${permissions.length}`);",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 37,
      "content": "console.log('‚ùå PROBLEMA: Operador Lucas n√£o tem permiss√µes de m√°quina!');",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 38,
      "content": "console.log('üí° Solu√ß√£o: Criar permiss√µes para o operador');",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 41,
      "content": "console.log(`\\n${index + 1}. M√°quina: ${p.machine.name} (ID: ${p.machine.id})`);",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 42,
      "content": "console.log(`   - canOperate: ${p.canOperate}`);",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 43,
      "content": "console.log(`   - canMaintain: ${p.canMaintain}`);",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 44,
      "content": "console.log(`   - Status da m√°quina: ${p.machine.status}`);",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 47,
      "content": "console.log('   ‚ö†Ô∏è  PROBLEMA: canOperate √© false!');",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 57,
      "content": "console.log(`\\nüè≠ Total de m√°quinas no sistema: ${allMachines.length}`);",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 59,
      "content": "console.log(`   - ${m.name} (ID: ${m.id}) - Status: ${m.status}`);",
      "type": "log"
    },
    {
      "file": "check-lucas-operator-permissions.js",
      "line": 63,
      "content": "console.error('‚ùå Erro ao verificar permiss√µes:', error);",
      "type": "error"
    },
    {
      "file": "check-lucas-permissions.js",
      "line": 9,
      "content": "console.log('Usu√°rio Lucas:', user);",
      "type": "log"
    },
    {
      "file": "check-lucas-permissions.js",
      "line": 16,
      "content": "console.log('Permiss√µes do Lucas:', permissions);",
      "type": "log"
    },
    {
      "file": "check-lucas-permissions.js",
      "line": 17,
      "content": "console.log('Total de permiss√µes:', permissions.length);",
      "type": "log"
    },
    {
      "file": "check-lucas-permissions.js",
      "line": 20,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 6,
      "content": "console.log('üîç Verificando hist√≥rico da M√°quina 02...');",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 23,
      "content": "console.log(`\\nüìä √öltimas ${recentOperations.length} opera√ß√µes na M√°quina 02:`);",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 26,
      "content": "console.log('   ‚ùå Nenhuma opera√ß√£o encontrada');",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 33,
      "content": "console.log(`\\n   ${index + 1}. Opera√ß√£o ID: ${op.id}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 34,
      "content": "console.log(`      Usu√°rio: ${op.user.name} (${op.user.email})`);",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 35,
      "content": "console.log(`      Status: ${op.status}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 36,
      "content": "console.log(`      In√≠cio: ${op.startTime}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 37,
      "content": "console.log(`      Fim: ${op.endTime || 'Em andamento'}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 38,
      "content": "console.log(`      Dura√ß√£o: ${duration} minutos`);",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 39,
      "content": "console.log(`      Notas: ${op.notes || 'Nenhuma'}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 54,
      "content": "console.log(`\\nüîß Opera√ß√µes ativas em todas as m√°quinas: ${allActiveOps.length}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 59,
      "content": "console.log(`   - ${op.machine.name}: ${op.user.name} (${duration} min)`);",
      "type": "log"
    },
    {
      "file": "check-machine-2-history.js",
      "line": 64,
      "content": "console.error('‚ùå Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-machine-2.js",
      "line": 6,
      "content": "console.log('üîç Verificando M√°quina 02...');",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 20,
      "content": "console.log('\\nüìä Opera√ß√£o ativa na M√°quina 02:');",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 23,
      "content": "console.log(`   ID: ${activeOp.id}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 24,
      "content": "console.log(`   Usu√°rio: ${activeOp.user.name} (${activeOp.user.email})`);",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 25,
      "content": "console.log(`   In√≠cio: ${activeOp.startTime}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 26,
      "content": "console.log(`   Dura√ß√£o: ${duration} minutos`);",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 27,
      "content": "console.log(`   Status: ${activeOp.status}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 29,
      "content": "console.log('   ‚ùå Nenhuma opera√ß√£o ativa encontrada');",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 37,
      "content": "console.log('\\nüè≠ Status da M√°quina 02:');",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 39,
      "content": "console.log(`   ID: ${machine.id}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 40,
      "content": "console.log(`   Nome: ${machine.name}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 41,
      "content": "console.log(`   Status: ${machine.status}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 42,
      "content": "console.log(`   Velocidade: ${machine.productionSpeed} pcs/min`);",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 43,
      "content": "console.log(`   Ativa: ${machine.isActive}`);",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 45,
      "content": "console.log('   ‚ùå M√°quina n√£o encontrada');",
      "type": "log"
    },
    {
      "file": "check-machine-2.js",
      "line": 49,
      "content": "console.error('‚ùå Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-machine-permissions.js",
      "line": 22,
      "content": "console.log('Permiss√µes do usu√°rio Lucas (ID: 2):', permissions.length);",
      "type": "log"
    },
    {
      "file": "check-machine-permissions.js",
      "line": 24,
      "content": "console.log(`- M√°quina: ${p.machine.name} (${p.machine.code}) - canView: ${p.canView}, canOperate: ${p.canOperate}`);",
      "type": "log"
    },
    {
      "file": "check-machine-permissions.js",
      "line": 37,
      "content": "console.log('\\nTodas as m√°quinas:', allMachines.length);",
      "type": "log"
    },
    {
      "file": "check-machine-permissions.js",
      "line": 39,
      "content": "console.log(`- ${m.name} (${m.code}) - Ativa: ${m.isActive}`);",
      "type": "log"
    },
    {
      "file": "check-machine-permissions.js",
      "line": 43,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-machines.js",
      "line": 15,
      "content": "console.log('M√°quinas no sistema:');",
      "type": "log"
    },
    {
      "file": "check-machines.js",
      "line": 17,
      "content": "console.log(`- ${m.name} (ID: ${m.id}): ${m.status} - ${m.productionSpeed}pcs/min`);",
      "type": "log"
    },
    {
      "file": "check-machines.js",
      "line": 31,
      "content": "console.log('\\nOpera√ß√µes ativas:');",
      "type": "log"
    },
    {
      "file": "check-machines.js",
      "line": 34,
      "content": "console.log(`- ${op.machine.name}: ${op.user.name} (${duration} min)`);",
      "type": "log"
    },
    {
      "file": "check-machines.js",
      "line": 38,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-notification-config.js",
      "line": 11,
      "content": "console.log('üîç Verificando Configura√ß√µes de Notifica√ß√£o\\n');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 14,
      "content": "console.log('üìã Vari√°veis de Ambiente:');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 15,
      "content": "console.log('NODE_ENV:', process.env.NODE_ENV);",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 16,
      "content": "console.log('PORT:', process.env.PORT);",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 17,
      "content": "console.log('\\nüìß Configura√ß√µes de Email:');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 18,
      "content": "console.log('SMTP_HOST:', process.env.SMTP_HOST || 'N√£o configurado');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 19,
      "content": "console.log('SMTP_PORT:', process.env.SMTP_PORT || 'N√£o configurado');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 20,
      "content": "console.log('SMTP_USER:', process.env.SMTP_USER ? '‚úÖ Configurado' : '‚ùå N√£o configurado');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 21,
      "content": "console.log('SMTP_PASS:', process.env.SMTP_PASS ? '‚úÖ Configurado' : '‚ùå N√£o configurado');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 22,
      "content": "console.log('EMAIL_USER:', process.env.EMAIL_USER ? '‚úÖ Configurado' : '‚ùå N√£o configurado');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 23,
      "content": "console.log('EMAIL_PASSWORD:', process.env.EMAIL_PASSWORD ? '‚úÖ Configurado' : '‚ùå N√£o configurado');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 25,
      "content": "console.log('\\nüì± Configura√ß√µes Firebase/Push:');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 26,
      "content": "console.log('FIREBASE_PROJECT_ID:', process.env.FIREBASE_PROJECT_ID ? '‚úÖ Configurado' : '‚ùå N√£o configurado');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 27,
      "content": "console.log('FIREBASE_PRIVATE_KEY:', process.env.FIREBASE_PRIVATE_KEY ? '‚úÖ Configurado' : '‚ùå N√£o configurado');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 28,
      "content": "console.log('FIREBASE_CLIENT_EMAIL:', process.env.FIREBASE_CLIENT_EMAIL ? '‚úÖ Configurado' : '‚ùå N√£o configurado');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 30,
      "content": "console.log('\\nüîî Configura√ß√µes de Notifica√ß√£o:');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 31,
      "content": "console.log('NOTIFICATIONS_ENABLED:', process.env.NOTIFICATIONS_ENABLED || 'N√£o definido');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 32,
      "content": "console.log('EMAIL_NOTIFICATIONS:', process.env.EMAIL_NOTIFICATIONS || 'N√£o definido');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 33,
      "content": "console.log('PUSH_NOTIFICATIONS:', process.env.PUSH_NOTIFICATIONS || 'N√£o definido');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 35,
      "content": "console.log('\\nüèóÔ∏è Status dos Servi√ßos:');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 39,
      "content": "console.log('NotificationService - Email habilitado:', notificationService.emailEnabled);",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 40,
      "content": "console.log('NotificationService - Push habilitado:', notificationService.pushEnabled);",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 42,
      "content": "console.error('‚ùå Erro ao verificar NotificationService:', error.message);",
      "type": "error"
    },
    {
      "file": "check-notification-config.js",
      "line": 47,
      "content": "console.log('EmailService - Inicializado:', !!emailService);",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 49,
      "content": "console.error('‚ùå Erro ao verificar EmailService:', error.message);",
      "type": "error"
    },
    {
      "file": "check-notification-config.js",
      "line": 54,
      "content": "console.log('PushService - Inicializado:', !!pushService);",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 55,
      "content": "console.log('PushService - Firebase inicializado:', pushService.initialized);",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 57,
      "content": "console.error('‚ùå Erro ao verificar PushService:', error.message);",
      "type": "error"
    },
    {
      "file": "check-notification-config.js",
      "line": 60,
      "content": "console.log('\\nüìä Resumo da Configura√ß√£o:');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 66,
      "content": "console.log('‚úÖ Email: Configurado e dispon√≠vel');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 68,
      "content": "console.log('‚ùå Email: N√£o configurado - Configure SMTP_USER/SMTP_PASS ou EMAIL_USER/EMAIL_PASSWORD');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 72,
      "content": "console.log('‚úÖ Push: Configurado e dispon√≠vel');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 74,
      "content": "console.log('‚ùå Push: N√£o configurado - Configure as credenciais do Firebase');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 78,
      "content": "console.log('\\n‚ö†Ô∏è  ATEN√á√ÉO: Nenhum m√©todo de notifica√ß√£o est√° configurado!');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 79,
      "content": "console.log('\\nüìù Para configurar as notifica√ß√µes:');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 80,
      "content": "console.log('\\n1. Email (Nodemailer):');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 81,
      "content": "console.log('   - SMTP_HOST=smtp.gmail.com');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 82,
      "content": "console.log('   - SMTP_PORT=587');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 83,
      "content": "console.log('   - SMTP_USER=seu_email@gmail.com');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 84,
      "content": "console.log('   - SMTP_PASS=sua_senha_de_app');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 85,
      "content": "console.log('\\n2. Push (Firebase):');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 86,
      "content": "console.log('   - FIREBASE_PROJECT_ID=seu_projeto');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 87,
      "content": "console.log('   - FIREBASE_PRIVATE_KEY=\"-----BEGIN PRIVATE KEY-----\\\\n...\\\\n-----END PRIVATE KEY-----\\\\n\"');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 88,
      "content": "console.log('   - FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxx@projeto.iam.gserviceaccount.com');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 90,
      "content": "console.log('\\n‚úÖ Sistema de notifica√ß√µes parcialmente ou totalmente configurado!');",
      "type": "log"
    },
    {
      "file": "check-notification-config.js",
      "line": 93,
      "content": "console.log('\\nüîö Verifica√ß√£o conclu√≠da.');",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 6,
      "content": "console.log('üîî Verificando notifica√ß√µes no banco de dados...');",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 23,
      "content": "console.log(`\\nüìä Total de notifica√ß√µes encontradas: ${notifications.length}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 26,
      "content": "console.log('‚ùå Nenhuma notifica√ß√£o encontrada no banco');",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 30,
      "content": "console.log('\\nüìã Detalhes das notifica√ß√µes:');",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 32,
      "content": "console.log(`\\n${index + 1}. ID: ${notification.id}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 33,
      "content": "console.log(`   Usu√°rio: ${notification.user?.name || 'N/A'} (${notification.user?.role || 'N/A'})`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 34,
      "content": "console.log(`   Email: ${notification.user?.email || 'N/A'}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 35,
      "content": "console.log(`   Tipo: ${notification.type}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 36,
      "content": "console.log(`   T√≠tulo: ${notification.title}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 37,
      "content": "console.log(`   Mensagem: ${notification.message}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 38,
      "content": "console.log(`   Lida: ${notification.read ? 'Sim' : 'N√£o'}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 39,
      "content": "console.log(`   Prioridade: ${notification.priority}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 40,
      "content": "console.log(`   Criada em: ${notification.createdAt}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 45,
      "content": "console.log(`   Metadata: ${JSON.stringify(metadata, null, 4)}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 47,
      "content": "console.log(`   Metadata (raw): ${notification.metadata}`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 53,
      "content": "console.log('\\nüìä Resumo por usu√°rio:');",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 63,
      "content": "console.log(`   ${user}: ${count} notifica√ß√µes`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 67,
      "content": "console.log('\\nüìä Resumo por tipo:');",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 74,
      "content": "console.log(`   ${type}: ${count} notifica√ß√µes`);",
      "type": "log"
    },
    {
      "file": "check-notifications.js",
      "line": 78,
      "content": "console.error('‚ùå Erro ao verificar notifica√ß√µes:', error);",
      "type": "error"
    },
    {
      "file": "check-operations.js",
      "line": 6,
      "content": "console.log('=== Verificando opera√ß√µes ativas ===');",
      "type": "log"
    },
    {
      "file": "check-operations.js",
      "line": 17,
      "content": "console.log('Opera√ß√£o do usu√°rio 2 na m√°quina 1:', userOperation);",
      "type": "log"
    },
    {
      "file": "check-operations.js",
      "line": 31,
      "content": "console.log('Todas opera√ß√µes ativas na m√°quina 1:', allOperations);",
      "type": "log"
    },
    {
      "file": "check-operations.js",
      "line": 41,
      "content": "console.log('Existe opera√ß√£o ativa na m√°quina 1?', !!anyActiveOperation);",
      "type": "log"
    },
    {
      "file": "check-operations.js",
      "line": 44,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 14,
      "content": "console.log(`\\nüîç Testando: ${url}`);",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 24,
      "content": "console.log(`‚úÖ Status: ${res.statusCode}`);",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 25,
      "content": "console.log(`üìÑ Headers:`, res.headers);",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 28,
      "content": "console.log(`üìù Response: ${data}`);",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 30,
      "content": "console.log(`üìù Response: ${data.substring(0, 200)}...`);",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 44,
      "content": "console.log(`‚ùå Erro: ${error.message}`);",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 54,
      "content": "console.log(`‚è∞ Timeout`);",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 67,
      "content": "console.log('üöÄ Verificando deployment do Railway...');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 68,
      "content": "console.log('üìÖ Data/Hora:', new Date().toLocaleString());",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 80,
      "content": "console.log('\\nüìä RESUMO DOS TESTES:');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 81,
      "content": "console.log('=' .repeat(50));",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 87,
      "content": "console.log(`${status} ${result.url}`);",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 88,
      "content": "console.log(`   Status: ${result.status}`);",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 95,
      "content": "console.log(`   Erro: ${result.error}`);",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 98,
      "content": "console.log('');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 101,
      "content": "console.log('\\nüéØ DIAGN√ìSTICO:');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 104,
      "content": "console.log('‚ùå PROBLEMA: Nenhuma URL est√° respondendo');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 105,
      "content": "console.log('\\nüîß POSS√çVEIS CAUSAS:');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 106,
      "content": "console.log('1. Aplica√ß√£o n√£o foi deployada no Railway');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 107,
      "content": "console.log('2. DATABASE_URL n√£o foi configurada');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 108,
      "content": "console.log('3. Aplica√ß√£o falhou ao iniciar');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 109,
      "content": "console.log('4. URL do Railway mudou');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 111,
      "content": "console.log('\\nüìù A√á√ïES NECESS√ÅRIAS:');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 112,
      "content": "console.log('1. Acessar Railway Dashboard');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 113,
      "content": "console.log('2. Verificar logs da aplica√ß√£o');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 114,
      "content": "console.log('3. Verificar vari√°veis de ambiente');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 115,
      "content": "console.log('4. Fazer redeploy se necess√°rio');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 118,
      "content": "console.log('‚ö†Ô∏è  PARCIAL: Algumas URLs est√£o funcionando');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 119,
      "content": "console.log('\\nüîß POSS√çVEL CAUSA:');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 120,
      "content": "console.log('- Aplica√ß√£o iniciou mas algumas rotas n√£o est√£o configuradas');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 123,
      "content": "console.log('‚úÖ SUCESSO: Todas as URLs est√£o respondendo!');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 124,
      "content": "console.log('\\nüéâ A aplica√ß√£o est√° funcionando no Railway!');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 127,
      "content": "console.log('\\nüîó PR√ìXIMOS PASSOS:');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 128,
      "content": "console.log('1. Se a aplica√ß√£o n√£o estiver funcionando:');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 129,
      "content": "console.log('   - Acessar https://railway.app/dashboard');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 130,
      "content": "console.log('   - Verificar logs da aplica√ß√£o');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 131,
      "content": "console.log('   - Configurar DATABASE_URL se necess√°rio');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 132,
      "content": "console.log('2. Se a aplica√ß√£o estiver funcionando:');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 133,
      "content": "console.log('   - Testar login no frontend');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 134,
      "content": "console.log('   - Criar usu√°rios se necess√°rio');",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 147,
      "content": "console.log('\\nüìä RESULTADO FINAL:', {",
      "type": "log"
    },
    {
      "file": "check-railway-deployment.js",
      "line": 156,
      "content": "console.error('\\nüí• ERRO CR√çTICO:', error);",
      "type": "error"
    },
    {
      "file": "check-railway-env.js",
      "line": 57,
      "content": "console.log('=== VARI√ÅVEIS DE AMBIENTE NECESS√ÅRIAS NO RAILWAY ===\\n');",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 59,
      "content": "console.log('üî¥ ESSENCIAIS (obrigat√≥rias):');",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 63,
      "content": "console.log(`${status} ${key}: ${current || `(faltando - exemplo: ${example})`}`);",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 66,
      "content": "console.log('\\nüü° OPCIONAIS (recomendadas):');",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 70,
      "content": "console.log(`${status} ${key}: ${current || `(n√£o configurada - exemplo: ${example})`}`);",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 73,
      "content": "console.log('\\n=== INSTRU√á√ïES PARA RAILWAY ===');",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 74,
      "content": "console.log('1. Acesse o painel do Railway');",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 75,
      "content": "console.log('2. V√° em Variables na aba do zara-backend');",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 76,
      "content": "console.log('3. Configure as vari√°veis marcadas com ‚ùå');",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 77,
      "content": "console.log('4. Redeploy o servi√ßo ap√≥s configurar');",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 81,
      "content": "console.log(`\\n‚ùå FALTAM ${missingRequired.length} VARI√ÅVEIS ESSENCIAIS:`);",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 82,
      "content": "missingRequired.forEach(key => console.log(`   - ${key}`));",
      "type": "log"
    },
    {
      "file": "check-railway-env.js",
      "line": 85,
      "content": "console.log('\\n‚úÖ Todas as vari√°veis essenciais est√£o configuradas!');",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 6,
      "content": "console.log('üîç Verificando notifica√ß√µes recentes...');",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 24,
      "content": "console.log(`üìä Total de notifica√ß√µes encontradas: ${notifications.length}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 27,
      "content": "console.log('\\nüìã Notifica√ß√µes recentes:');",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 30,
      "content": "console.log(`\\n${index + 1}. ID: ${notif.id}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 31,
      "content": "console.log(`   Tipo: ${notif.type}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 32,
      "content": "console.log(`   T√≠tulo: ${notif.title}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 33,
      "content": "console.log(`   Mensagem: ${notif.message}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 34,
      "content": "console.log(`   Usu√°rio: ${notif.user?.name} (${notif.user?.role})`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 35,
      "content": "console.log(`   Lida: ${notif.read ? 'Sim' : 'N√£o'}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 36,
      "content": "console.log(`   Criada: ${createdAt}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 41,
      "content": "console.log(`   Metadata:`, metadata);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 43,
      "content": "console.log(`   Metadata (raw): ${notif.metadata}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 48,
      "content": "console.log('‚ùå Nenhuma notifica√ß√£o encontrada!');",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 52,
      "content": "console.log('\\nüë• Verificando notifica√ß√µes por usu√°rio:');",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 78,
      "content": "console.log(`\\n${user.name} (${user.role}) - ID: ${user.id}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 79,
      "content": "console.log(`   Total de notifica√ß√µes: ${userNotifications.length}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 84,
      "content": "console.log(`   ${index + 1}. [${notif.type}] ${notif.title} - ${createdAt}`);",
      "type": "log"
    },
    {
      "file": "check-recent-notifications.js",
      "line": 90,
      "content": "console.error('‚ùå Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-user-lucas.js",
      "line": 17,
      "content": "console.log('User found:', JSON.stringify(user, null, 2));",
      "type": "log"
    },
    {
      "file": "check-user-lucas.js",
      "line": 20,
      "content": "console.log('\\nUser role:', user.role);",
      "type": "log"
    },
    {
      "file": "check-user-lucas.js",
      "line": 21,
      "content": "console.log('Machine permissions count:', user.machinePermissions.length);",
      "type": "log"
    },
    {
      "file": "check-user-lucas.js",
      "line": 23,
      "content": "console.log('User not found!');",
      "type": "log"
    },
    {
      "file": "check-user-lucas.js",
      "line": 26,
      "content": "console.error('Error:', error);",
      "type": "error"
    },
    {
      "file": "check-users-simple.js",
      "line": 15,
      "content": "console.log('Usu√°rios cadastrados:', users.length);",
      "type": "log"
    },
    {
      "file": "check-users-simple.js",
      "line": 17,
      "content": "console.log(`- ${u.name} (ID: ${u.id}, Role: ${u.role}, Email: ${u.email})`);",
      "type": "log"
    },
    {
      "file": "check-users-simple.js",
      "line": 21,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "check-users.js",
      "line": 6,
      "content": "console.log('üë• Verificando usu√°rios no banco de dados...');",
      "type": "log"
    },
    {
      "file": "check-users.js",
      "line": 21,
      "content": "console.log('\\nüìã Usu√°rios encontrados:');",
      "type": "log"
    },
    {
      "file": "check-users.js",
      "line": 24,
      "content": "console.log(`ID: ${user.id} | ${user.email} | ${user.name} | ${user.role} | ${status}`);",
      "type": "log"
    },
    {
      "file": "check-users.js",
      "line": 27,
      "content": "console.log('\\nüìä Resumo por role:');",
      "type": "log"
    },
    {
      "file": "check-users.js",
      "line": 34,
      "content": "console.log(`${role}: ${count} usu√°rio(s)`);",
      "type": "log"
    },
    {
      "file": "check-users.js",
      "line": 39,
      "content": "console.log('\\nüîç Verificando roles necess√°rios para notifica√ß√µes:');",
      "type": "log"
    },
    {
      "file": "check-users.js",
      "line": 44,
      "content": "console.log(`‚úÖ ${role}: ${usersWithRole.length} usu√°rio(s) ativo(s)`);",
      "type": "log"
    },
    {
      "file": "check-users.js",
      "line": 46,
      "content": "console.log(`   - ${user.name} (${user.email})`);",
      "type": "log"
    },
    {
      "file": "check-users.js",
      "line": 49,
      "content": "console.log(`‚ùå ${role}: Nenhum usu√°rio ativo encontrado`);",
      "type": "log"
    },
    {
      "file": "check-users.js",
      "line": 54,
      "content": "console.error('‚ùå Erro ao verificar usu√°rios:', error);",
      "type": "error"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 5,
      "content": "console.log('üîç VERIFICANDO URLs DO VERCEL PARA CORS');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 6,
      "content": "console.log('=' .repeat(50));",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 51,
      "content": "console.log('\\nüìã TESTANDO URLs DO VERCEL:');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 52,
      "content": "console.log('-'.repeat(40));",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 57,
      "content": "console.log(`Testando: ${url}`);",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 62,
      "content": "console.log(`‚úÖ ATIVA - Status: ${result.status}`);",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 64,
      "content": "console.log(`‚ùå INATIVA - Status: ${result.status}`);",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 68,
      "content": "console.log('\\nüéØ RESUMO - URLs ATIVAS DO VERCEL:');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 69,
      "content": "console.log('=' .repeat(50));",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 74,
      "content": "console.log('\\n‚úÖ URLs FUNCIONAIS ENCONTRADAS:');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 76,
      "content": "console.log(`${index + 1}. ${result.url}`);",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 79,
      "content": "console.log('\\nüîß CONFIGURA√á√ÉO CORS PARA RAILWAY:');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 80,
      "content": "console.log('-'.repeat(40));",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 91,
      "content": "console.log('\\nüìù VARI√ÅVEL CORS_ORIGIN COMPLETA:');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 92,
      "content": "console.log(`CORS_ORIGIN=${corsOrigin}`);",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 94,
      "content": "console.log('\\nüöÄ PR√ìXIMOS PASSOS:');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 95,
      "content": "console.log('1. Acesse o Railway Dashboard');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 96,
      "content": "console.log('2. V√° em Variables');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 97,
      "content": "console.log('3. Atualize CORS_ORIGIN com o valor acima');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 98,
      "content": "console.log('4. Salve as altera√ß√µes');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 99,
      "content": "console.log('5. Fa√ßa redeploy da aplica√ß√£o');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 102,
      "content": "console.log('\\n‚ùå NENHUMA URL ATIVA ENCONTRADA');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 103,
      "content": "console.log('\\nüîç POSS√çVEIS CAUSAS:');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 104,
      "content": "console.log('- Frontend n√£o foi deployado no Vercel');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 105,
      "content": "console.log('- URLs mudaram ap√≥s redeploy');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 106,
      "content": "console.log('- Problemas de conectividade');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 108,
      "content": "console.log('\\nüìã CONFIGURA√á√ÉO CORS PADR√ÉO:');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 109,
      "content": "console.log('CORS_ORIGIN=http://localhost:3000,http://localhost:5173');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 112,
      "content": "console.log('\\n' + '=' .repeat(50));",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 113,
      "content": "console.log('‚úÖ VERIFICA√á√ÉO CONCLU√çDA');",
      "type": "log"
    },
    {
      "file": "check-vercel-urls.js",
      "line": 117,
      "content": "checkVercelUrls().catch(console.error);",
      "type": "error"
    },
    {
      "file": "check_users.js",
      "line": 7,
      "content": "console.log('Usu√°rios no banco:');",
      "type": "log"
    },
    {
      "file": "check_users.js",
      "line": 9,
      "content": "console.log(`ID: ${u.id}, Email: ${u.email}, Role: ${u.role}`);",
      "type": "log"
    },
    {
      "file": "check_users.js",
      "line": 12,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "config\\database.js",
      "line": 10,
      "content": "console.log('üìä PostgreSQL conectado via Prisma');",
      "type": "log"
    },
    {
      "file": "config\\database.js",
      "line": 14,
      "content": "console.log('‚úÖ Conex√£o com PostgreSQL testada com sucesso');",
      "type": "log"
    },
    {
      "file": "config\\database.js",
      "line": 17,
      "content": "console.error('‚ùå Erro ao conectar PostgreSQL:', error.message);",
      "type": "error"
    },
    {
      "file": "config\\database.js",
      "line": 25,
      "content": "console.log('üîå PostgreSQL desconectado');",
      "type": "log"
    },
    {
      "file": "config\\redis.js",
      "line": 12,
      "content": "console.error('‚ùå Erro Redis:', err);",
      "type": "error"
    },
    {
      "file": "config\\redis.js",
      "line": 16,
      "content": "console.log('üîó Conectando ao Redis...');",
      "type": "log"
    },
    {
      "file": "config\\redis.js",
      "line": 20,
      "content": "console.log('‚úÖ Redis conectado e pronto');",
      "type": "log"
    },
    {
      "file": "config\\redis.js",
      "line": 24,
      "content": "console.log('‚ö†Ô∏è Conex√£o Redis encerrada');",
      "type": "log"
    },
    {
      "file": "config\\redis.js",
      "line": 30,
      "content": "console.error('‚ùå Erro ao conectar Redis:', error.message);",
      "type": "error"
    },
    {
      "file": "config\\redis.js",
      "line": 46,
      "content": "console.error('Erro ao definir cache:', error);",
      "type": "error"
    },
    {
      "file": "config\\redis.js",
      "line": 58,
      "content": "console.error('Erro ao obter cache:', error);",
      "type": "error"
    },
    {
      "file": "config\\redis.js",
      "line": 69,
      "content": "console.error('Erro ao deletar cache:', error);",
      "type": "error"
    },
    {
      "file": "config\\redis.js",
      "line": 80,
      "content": "console.error('Erro ao publicar evento:', error);",
      "type": "error"
    },
    {
      "file": "config\\security.js",
      "line": 31,
      "content": "console.warn('‚ö†Ô∏è Requisi√ß√£o sem origin em produ√ß√£o - pode ser health check do Railway');",
      "type": "warn"
    },
    {
      "file": "config\\security.js",
      "line": 39,
      "content": "console.warn(`üö´ CORS blocked origin: ${origin}`);",
      "type": "warn"
    },
    {
      "file": "config\\security.js",
      "line": 40,
      "content": "console.warn(`üìã Allowed origins: ${allowedOrigins.join(', ')}`);",
      "type": "warn"
    },
    {
      "file": "config\\sentry.js",
      "line": 30,
      "content": "console.log('üìä Sentry inicializado para monitoramento');",
      "type": "log"
    },
    {
      "file": "config\\sentry.js",
      "line": 32,
      "content": "console.log('‚ö†Ô∏è Sentry DSN n√£o configurado, monitoramento desabilitado');",
      "type": "log"
    },
    {
      "file": "config\\sentry.js",
      "line": 45,
      "content": "console.error('‚ùå Erro capturado:', error);",
      "type": "error"
    },
    {
      "file": "config\\sentry.js",
      "line": 57,
      "content": "console.log(`üìù Mensagem capturada [${level}]:`, message);",
      "type": "log"
    },
    {
      "file": "config\\sentry.js",
      "line": 65,
      "content": "console.error('‚ùå Erro n√£o tratado:', err);",
      "type": "error"
    },
    {
      "file": "config\\ssl.js",
      "line": 71,
      "content": "console.log('‚úÖ Certificados SSL carregados:', certPath.cert);",
      "type": "log"
    },
    {
      "file": "config\\ssl.js",
      "line": 75,
      "content": "console.warn('‚ö†Ô∏è Erro ao carregar certificado:', certPath.cert, error.message);",
      "type": "warn"
    },
    {
      "file": "config\\ssl.js",
      "line": 82,
      "content": "console.warn('‚ö†Ô∏è Certificados SSL n√£o encontrados. HTTPS desabilitado.');",
      "type": "warn"
    },
    {
      "file": "config\\ssl.js",
      "line": 87,
      "content": "console.error('‚ùå Erro ao configurar SSL:', error.message);",
      "type": "error"
    },
    {
      "file": "config\\ssl.js",
      "line": 114,
      "content": "console.error('‚ùå Erro ao criar servidor HTTPS:', error.message);",
      "type": "error"
    },
    {
      "file": "config\\ssl.js",
      "line": 222,
      "content": "console.log('‚úÖ Certificados de desenvolvimento j√° existem');",
      "type": "log"
    },
    {
      "file": "config\\ssl.js",
      "line": 231,
      "content": "console.log('‚úÖ Certificado auto-assinado gerado para desenvolvimento');",
      "type": "log"
    },
    {
      "file": "config\\ssl.js",
      "line": 232,
      "content": "console.log('üìÅ Certificado:', certPath);",
      "type": "log"
    },
    {
      "file": "config\\ssl.js",
      "line": 233,
      "content": "console.log('üîë Chave privada:', keyPath);",
      "type": "log"
    },
    {
      "file": "config\\ssl.js",
      "line": 237,
      "content": "console.error('‚ùå Erro ao gerar certificado auto-assinado:', error.message);",
      "type": "error"
    },
    {
      "file": "config\\ssl.js",
      "line": 238,
      "content": "console.log('üí° Instale o OpenSSL para gerar certificados de desenvolvimento');",
      "type": "log"
    },
    {
      "file": "create-admin-temp.js",
      "line": 14,
      "content": "console.log('‚úÖ Admin tempor√°rio j√° existe');",
      "type": "log"
    },
    {
      "file": "create-admin-temp.js",
      "line": 15,
      "content": "console.log('Email: temp.admin@zara.com');",
      "type": "log"
    },
    {
      "file": "create-admin-temp.js",
      "line": 16,
      "content": "console.log('Senha: 123456');",
      "type": "log"
    },
    {
      "file": "create-admin-temp.js",
      "line": 34,
      "content": "console.log('‚úÖ Admin tempor√°rio criado com sucesso!');",
      "type": "log"
    },
    {
      "file": "create-admin-temp.js",
      "line": 35,
      "content": "console.log('ID:', admin.id);",
      "type": "log"
    },
    {
      "file": "create-admin-temp.js",
      "line": 36,
      "content": "console.log('Email: temp.admin@zara.com');",
      "type": "log"
    },
    {
      "file": "create-admin-temp.js",
      "line": 37,
      "content": "console.log('Senha: 123456');",
      "type": "log"
    },
    {
      "file": "create-admin-temp.js",
      "line": 38,
      "content": "console.log('Role:', admin.role);",
      "type": "log"
    },
    {
      "file": "create-admin-temp.js",
      "line": 41,
      "content": "console.error('‚ùå Erro ao criar admin tempor√°rio:', error.message);",
      "type": "error"
    },
    {
      "file": "create-admin-user.js",
      "line": 17,
      "content": "console.log('üîó Conectando ao banco PostgreSQL...');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 21,
      "content": "console.log('‚úÖ Conex√£o estabelecida com sucesso!');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 29,
      "content": "console.log('‚ö†Ô∏è  Usu√°rio admin j√° existe!');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 30,
      "content": "console.log('üìß Email:', existingAdmin.email);",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 31,
      "content": "console.log('üë§ Nome:', existingAdmin.name);",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 32,
      "content": "console.log('üîë Role:', existingAdmin.role);",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 41,
      "content": "console.log('üîê Criando usu√°rio administrador...');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 56,
      "content": "console.log('‚úÖ Usu√°rio administrador criado com sucesso!');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 57,
      "content": "console.log('üìß Email: admin@zara.com');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 58,
      "content": "console.log('üîë Senha: admin123');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 59,
      "content": "console.log('üë§ Nome:', adminUser.name);",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 60,
      "content": "console.log('üÜî ID:', adminUser.id);",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 61,
      "content": "console.log('üîë Role:', adminUser.role);",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 65,
      "content": "console.log(`\\nüìä Total de usu√°rios no banco: ${totalUsers}`);",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 82,
      "content": "console.log('\\nüë• Todos os usu√°rios cadastrados:');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 85,
      "content": "console.log(`${index + 1}. ${roleIcon} ${user.name} (${user.email}) - ${user.role} - ${user.isActive ? 'Ativo' : 'Inativo'}`);",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 88,
      "content": "console.log('\\nüéØ CREDENCIAIS DISPON√çVEIS PARA TESTE:');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 89,
      "content": "console.log('\\nüëë ADMINISTRADOR:');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 90,
      "content": "console.log('üìß Email: admin@zara.com');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 91,
      "content": "console.log('üîë Senha: admin123');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 92,
      "content": "console.log('\\nüë§ OPERADOR:');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 93,
      "content": "console.log('üìß Email: demo@zara.com');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 94,
      "content": "console.log('üîë Senha: demo123');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 95,
      "content": "console.log('\\n‚úÖ Usu√°rios prontos para testes no frontend!');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 98,
      "content": "console.error('‚ùå Erro ao criar usu√°rio admin:', error.message);",
      "type": "error"
    },
    {
      "file": "create-admin-user.js",
      "line": 101,
      "content": "console.log('‚ö†Ô∏è  Usu√°rio com este email j√° existe!');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 103,
      "content": "console.log('‚ö†Ô∏è  Tabela users n√£o encontrada. Execute as migra√ß√µes primeiro.');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 105,
      "content": "console.error('Detalhes do erro:', error);",
      "type": "error"
    },
    {
      "file": "create-admin-user.js",
      "line": 109,
      "content": "console.log('üîå Conex√£o fechada.');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 116,
      "content": "console.log('\\nüèÅ Script finalizado!');",
      "type": "log"
    },
    {
      "file": "create-admin-user.js",
      "line": 120,
      "content": "console.error('üí• Erro fatal:', error);",
      "type": "error"
    },
    {
      "file": "create-admin.js",
      "line": 14,
      "content": "console.log('‚úÖ Admin j√° existe!');",
      "type": "log"
    },
    {
      "file": "create-admin.js",
      "line": 15,
      "content": "console.log('üìã Credenciais: admin@zara.com / admin123');",
      "type": "log"
    },
    {
      "file": "create-admin.js",
      "line": 35,
      "content": "console.log('‚úÖ Admin criado com sucesso!');",
      "type": "log"
    },
    {
      "file": "create-admin.js",
      "line": 36,
      "content": "console.log('üìã Credenciais: admin@zara.com / admin123');",
      "type": "log"
    },
    {
      "file": "create-admin.js",
      "line": 37,
      "content": "console.log('ID:', admin.id);",
      "type": "log"
    },
    {
      "file": "create-admin.js",
      "line": 40,
      "content": "console.error('‚ùå Erro ao criar admin:', error.message);",
      "type": "error"
    },
    {
      "file": "create-demo-user.js",
      "line": 17,
      "content": "console.log('üîó Conectando ao banco PostgreSQL...');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 21,
      "content": "console.log('‚úÖ Conex√£o estabelecida com sucesso!');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 29,
      "content": "console.log('‚ö†Ô∏è  Usu√°rio demo j√° existe!');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 30,
      "content": "console.log('üìß Email:', existingUser.email);",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 31,
      "content": "console.log('üë§ Nome:', existingUser.name);",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 32,
      "content": "console.log('üîë Role:', existingUser.role);",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 41,
      "content": "console.log('üîê Criando usu√°rio de demonstra√ß√£o...');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 56,
      "content": "console.log('‚úÖ Usu√°rio demo criado com sucesso!');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 57,
      "content": "console.log('üìß Email: demo@zara.com');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 58,
      "content": "console.log('üîë Senha: demo123');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 59,
      "content": "console.log('üë§ Nome:', demoUser.name);",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 60,
      "content": "console.log('üÜî ID:', demoUser.id);",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 61,
      "content": "console.log('üîë Role:', demoUser.role);",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 65,
      "content": "console.log(`\\nüìä Total de usu√°rios no banco: ${totalUsers}`);",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 79,
      "content": "console.log('\\nüë• Usu√°rios cadastrados:');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 81,
      "content": "console.log(`${index + 1}. ${user.name} (${user.email}) - ${user.role} - ${user.isActive ? 'Ativo' : 'Inativo'}`);",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 84,
      "content": "console.log('\\nüéØ CREDENCIAIS DE DEMONSTRA√á√ÉO:');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 85,
      "content": "console.log('üìß Email: demo@zara.com');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 86,
      "content": "console.log('üîë Senha: demo123');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 87,
      "content": "console.log('\\n‚úÖ Usu√°rio pronto para testes no frontend!');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 90,
      "content": "console.error('‚ùå Erro ao criar usu√°rio demo:', error.message);",
      "type": "error"
    },
    {
      "file": "create-demo-user.js",
      "line": 93,
      "content": "console.log('‚ö†Ô∏è  Usu√°rio com este email j√° existe!');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 95,
      "content": "console.log('‚ö†Ô∏è  Tabela users n√£o encontrada. Execute as migra√ß√µes primeiro.');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 97,
      "content": "console.error('Detalhes do erro:', error);",
      "type": "error"
    },
    {
      "file": "create-demo-user.js",
      "line": 101,
      "content": "console.log('üîå Conex√£o fechada.');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 108,
      "content": "console.log('\\nüèÅ Script finalizado!');",
      "type": "log"
    },
    {
      "file": "create-demo-user.js",
      "line": 112,
      "content": "console.error('üí• Erro fatal:', error);",
      "type": "error"
    },
    {
      "file": "create-machine-config.js",
      "line": 9,
      "content": "console.log('‚úÖ Conectado ao MongoDB');",
      "type": "log"
    },
    {
      "file": "create-machine-config.js",
      "line": 23,
      "content": "console.log(`‚ö†Ô∏è  Configura√ß√£o j√° existe para m√°quina ${machine.name}`);",
      "type": "log"
    },
    {
      "file": "create-machine-config.js",
      "line": 72,
      "content": "console.log(`‚úÖ Configura√ß√£o criada para m√°quina ${machine.name} - ID: ${result.insertedId}`);",
      "type": "log"
    },
    {
      "file": "create-machine-config.js",
      "line": 75,
      "content": "console.log('\\nüìã Configura√ß√µes criadas com sucesso!');",
      "type": "log"
    },
    {
      "file": "create-machine-config.js",
      "line": 78,
      "content": "console.error('‚ùå Erro ao criar configura√ß√µes:', error);",
      "type": "error"
    },
    {
      "file": "create-machine-direct.js",
      "line": 9,
      "content": "console.log('‚úÖ Conectado ao MongoDB');",
      "type": "log"
    },
    {
      "file": "create-machine-direct.js",
      "line": 18,
      "content": "console.log('‚ö†Ô∏è  M√°quina MAQ001 j√° existe:', existingMachine);",
      "type": "log"
    },
    {
      "file": "create-machine-direct.js",
      "line": 60,
      "content": "console.log(`‚úÖ ${result.insertedCount} m√°quinas criadas com sucesso!`);",
      "type": "log"
    },
    {
      "file": "create-machine-direct.js",
      "line": 64,
      "content": "console.log('\\nüìã M√°quinas no banco de dados:');",
      "type": "log"
    },
    {
      "file": "create-machine-direct.js",
      "line": 66,
      "content": "console.log(`- ID: ${machine._id}, C√≥digo: ${machine.code}, Nome: ${machine.name}`);",
      "type": "log"
    },
    {
      "file": "create-machine-direct.js",
      "line": 70,
      "content": "console.error('‚ùå Erro:', error);",
      "type": "error"
    },
    {
      "file": "create-machine-permissions.js",
      "line": 30,
      "content": "console.log(`Permiss√£o criada para m√°quina ${machine.name} (${machine.code})`);",
      "type": "log"
    },
    {
      "file": "create-machine-permissions.js",
      "line": 32,
      "content": "console.log(`Permiss√£o j√° existe para m√°quina ${machine.name} (${machine.code})`);",
      "type": "log"
    },
    {
      "file": "create-machine-permissions.js",
      "line": 36,
      "content": "console.log('\\nPermiss√µes criadas com sucesso!');",
      "type": "log"
    },
    {
      "file": "create-machine-permissions.js",
      "line": 39,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "create-machine.js",
      "line": 7,
      "content": "console.log('Criando m√°quina MAQ001...');",
      "type": "log"
    },
    {
      "file": "create-machine.js",
      "line": 21,
      "content": "console.log('‚úÖ M√°quina criada:', machine);",
      "type": "log"
    },
    {
      "file": "create-machine.js",
      "line": 24,
      "content": "console.error('‚ùå Erro ao criar m√°quina:', error);",
      "type": "error"
    },
    {
      "file": "create-operator.js",
      "line": 13,
      "content": "console.log('Usu√°rio operador j√° existe');",
      "type": "log"
    },
    {
      "file": "create-operator.js",
      "line": 31,
      "content": "console.log('Usu√°rio operador criado:', operator.email);",
      "type": "log"
    },
    {
      "file": "create-operator.js",
      "line": 33,
      "content": "console.error('Erro ao criar operador:', error);",
      "type": "error"
    },
    {
      "file": "create-users.js",
      "line": 8,
      "content": "console.log('üîÑ Criando usu√°rios de demonstra√ß√£o...');",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 28,
      "content": "console.log('‚úÖ L√≠der criado:', leader.email);",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 30,
      "content": "console.log('‚ÑπÔ∏è L√≠der j√° existe:', existingLeader.email);",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 51,
      "content": "console.log('‚úÖ Gestor criado:', manager.email);",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 53,
      "content": "console.log('‚ÑπÔ∏è Gestor j√° existe:', existingManager.email);",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 74,
      "content": "console.log('‚úÖ Admin criado:', admin.email);",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 76,
      "content": "console.log('‚ÑπÔ∏è Admin j√° existe:', existingAdmin.email);",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 79,
      "content": "console.log('\\nüìã Credenciais dispon√≠veis:');",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 80,
      "content": "console.log('Admin: admin@zara.com / admin123');",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 81,
      "content": "console.log('Gestor: manager@zara.com / manager123');",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 82,
      "content": "console.log('L√≠der: leader@zara.com / leader123');",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 83,
      "content": "console.log('Operador (teste): operador@zara.com / 123456');",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 86,
      "content": "console.error('‚ùå Erro ao criar usu√°rios:', error.message);",
      "type": "error"
    },
    {
      "file": "create-users.js",
      "line": 90,
      "content": "console.log('\\n‚ö†Ô∏è MongoDB n√£o est√° configurado como replica set.');",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 91,
      "content": "console.log('üìã Use as credenciais de teste hardcoded:');",
      "type": "log"
    },
    {
      "file": "create-users.js",
      "line": 92,
      "content": "console.log('Operador: operador@zara.com / 123456');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 13,
      "content": "console.log('üîß SCRIPT PARA TESTAR NO NAVEGADOR:');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 14,
      "content": "console.log('\\n1. Abra o navegador e v√° para: http://localhost:5173/teflon-change');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 15,
      "content": "console.log('\\n2. Abra o Console do Desenvolvedor (F12)');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 16,
      "content": "console.log('\\n3. Execute os seguintes comandos:');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 17,
      "content": "console.log('\\n// Configurar autentica√ß√£o');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 18,
      "content": "console.log(`localStorage.setItem('token', '${token}');`);",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 19,
      "content": "console.log(`localStorage.setItem('user', JSON.stringify({`);",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 20,
      "content": "console.log(`  id: 2,`);",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 21,
      "content": "console.log(`  name: 'Lucas Operator',`);",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 22,
      "content": "console.log(`  email: 'lucas@zara.com',`);",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 23,
      "content": "console.log(`  role: 'OPERATOR'`);",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 24,
      "content": "console.log(`}));`);",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 25,
      "content": "console.log('\\n// Recarregar a p√°gina');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 26,
      "content": "console.log('location.reload();');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 27,
      "content": "console.log('\\n4. Ap√≥s recarregar, execute para monitorar:');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 28,
      "content": "console.log('\\n// Monitorar logs do hook');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 29,
      "content": "console.log('console.clear();');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 30,
      "content": "console.log('console.log(\"üîç Monitorando hook useMachinePermissions...\");');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 31,
      "content": "console.log('\\n// Verificar se as m√°quinas est√£o sendo carregadas');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 32,
      "content": "console.log('setTimeout(() => {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 33,
      "content": "console.log('  const selectElement = document.querySelector(\"select[name=\\'machineId\\']\");');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 34,
      "content": "console.log('  if (selectElement) {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 35,
      "content": "console.log('    const options = Array.from(selectElement.options);');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 36,
      "content": "console.log('    console.log(\"üìã Op√ß√µes no select de m√°quinas:\", options.length);');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 37,
      "content": "console.log('    options.forEach((option, index) => {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 38,
      "content": "console.log('      if (index > 0) { // Pular a primeira op√ß√£o \"Selecione uma m√°quina\"');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 39,
      "content": "console.log('        console.log(`   ‚úÖ ${option.text} (value: ${option.value})`);');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 40,
      "content": "console.log('      }');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 41,
      "content": "console.log('    });');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 42,
      "content": "console.log('    ');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 43,
      "content": "console.log('    if (options.length <= 1) {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 44,
      "content": "console.log('      console.log(\"‚ùå PROBLEMA: Nenhuma m√°quina aparece no select!\");');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 45,
      "content": "console.log('      console.log(\"   Verifique os logs do hook useMachinePermissions acima.\");');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 46,
      "content": "console.log('    }');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 47,
      "content": "console.log('  } else {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 48,
      "content": "console.log('    console.log(\"‚ùå Select de m√°quinas n√£o encontrado!\");');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 49,
      "content": "console.log('  }');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 50,
      "content": "console.log('}, 3000);');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 51,
      "content": "console.log('\\n5. Aguarde 3 segundos e verifique os logs no console.');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 52,
      "content": "console.log('\\n6. Se ainda n√£o aparecer m√°quinas, execute tamb√©m:');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 53,
      "content": "console.log('\\n// For√ßar reload das m√°quinas');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 54,
      "content": "console.log('fetch(\"/api/machines\", {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 55,
      "content": "console.log('  headers: {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 56,
      "content": "console.log(`    \"Authorization\": \"Bearer ${token}\"`);",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 57,
      "content": "console.log('  }');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 58,
      "content": "console.log('}).then(r => r.json()).then(data => {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 59,
      "content": "console.log('  console.log(\"üì° M√°quinas da API:\", data.data?.length || 0);');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 60,
      "content": "console.log('  data.data?.forEach(machine => {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 61,
      "content": "console.log('    console.log(`   - ${machine.name} (ID: ${machine.id})`);');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 62,
      "content": "console.log('  });');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 63,
      "content": "console.log('});');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 64,
      "content": "console.log('\\n// Verificar permiss√µes');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 65,
      "content": "console.log('fetch(\"/api/permissions?userId=2\", {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 66,
      "content": "console.log('  headers: {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 67,
      "content": "console.log(`    \"Authorization\": \"Bearer ${token}\"`);",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 68,
      "content": "console.log('  }');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 69,
      "content": "console.log('}).then(r => r.json()).then(data => {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 70,
      "content": "console.log('  console.log(\"üîë Permiss√µes da API:\", data.data?.length || 0);');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 71,
      "content": "console.log('  data.data?.forEach(perm => {');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 72,
      "content": "console.log('    console.log(`   - M√°quina ${perm.machineId}: canOperate=${perm.canOperate}`);');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 73,
      "content": "console.log('  });');",
      "type": "log"
    },
    {
      "file": "debug-browser-hook.js",
      "line": 74,
      "content": "console.log('});');",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 5,
      "content": "console.log('üîç Iniciando debug do frontend - m√°quinas n√£o aparecem');",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 19,
      "content": "console.log('‚úÖ Token gerado para operador Lucas');",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 41,
      "content": "console.log(`üñ•Ô∏è  [${type.toUpperCase()}] ${text}`);",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 49,
      "content": "console.log(`üåê API Response: ${response.status()} - ${url}`);",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 54,
      "content": "console.log('üåê Navegando para p√°gina de mudan√ßa de teflon...');",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 68,
      "content": "console.log('üîë Token e dados do usu√°rio configurados no localStorage');",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 82,
      "content": "console.log('üìã Op√ß√µes encontradas no select:', options);",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 84,
      "content": "console.log('‚ùå Select de m√°quinas n√£o encontrado');",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 98,
      "content": "console.log('üîç Estado atual:', hookStates);",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 101,
      "content": "console.log('‚è≥ Aguardando mais logs...');",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 105,
      "content": "console.error('‚ùå Erro durante debug:', error);",
      "type": "error"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 107,
      "content": "console.log('üèÅ Debug finalizado - verifique os logs acima');",
      "type": "log"
    },
    {
      "file": "debug-frontend-machines.js",
      "line": 112,
      "content": "debugFrontendMachines().catch(console.error);",
      "type": "error"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 6,
      "content": "console.log('üîç Debugando problema \"M√°quina undefined: undefined\"\\n');",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 14,
      "content": "console.log('1. Testando API /api/machines...');",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 21,
      "content": "console.log('‚úÖ Status:', machinesResponse.status);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 22,
      "content": "console.log('üìä Total de m√°quinas:', machinesResponse.data.data?.length || 0);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 25,
      "content": "console.log('\\nüìã Estrutura das m√°quinas:');",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 27,
      "content": "console.log(`\\n${index + 1}. M√°quina ID: ${machine.id}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 28,
      "content": "console.log(`   - name: ${machine.name || 'UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 29,
      "content": "console.log(`   - code: ${machine.code || 'UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 30,
      "content": "console.log(`   - status: ${machine.status || 'UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 31,
      "content": "console.log(`   - location: ${machine.location || 'UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 32,
      "content": "console.log(`   - isActive: ${machine.isActive}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 33,
      "content": "console.log(`   - operator: ${machine.operator || 'UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 37,
      "content": "console.log('   ‚ö†Ô∏è  PROBLEMA ENCONTRADO: name ou code est√° undefined!');",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 42,
      "content": "console.log('\\n2. Testando API /api/machines/1 (m√°quina espec√≠fica)...');",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 49,
      "content": "console.log('‚úÖ Status:', machine1Response.status);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 53,
      "content": "console.log('\\nüìã Dados da m√°quina ID 1:');",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 54,
      "content": "console.log(`   - name: ${machine1.name || 'UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 55,
      "content": "console.log(`   - code: ${machine1.code || 'UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 56,
      "content": "console.log(`   - status: ${machine1.status || 'UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 57,
      "content": "console.log(`   - location: ${machine1.location || 'UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 58,
      "content": "console.log(`   - isActive: ${machine1.isActive}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 61,
      "content": "console.log('   ‚ö†Ô∏è  PROBLEMA ENCONTRADO: name ou code est√° undefined!');",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 65,
      "content": "console.log('\\n3. Verificando banco de dados diretamente...');",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 81,
      "content": "console.log('\\nüìä Dados diretos do banco:');",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 83,
      "content": "console.log(`\\n${index + 1}. M√°quina ID: ${machine.id}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 84,
      "content": "console.log(`   - name: ${machine.name || 'NULL/UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 85,
      "content": "console.log(`   - code: ${machine.code || 'NULL/UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 86,
      "content": "console.log(`   - status: ${machine.status || 'NULL/UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 87,
      "content": "console.log(`   - location: ${machine.location || 'NULL/UNDEFINED'}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 88,
      "content": "console.log(`   - isActive: ${machine.isActive}`);",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 91,
      "content": "console.log('   üö® PROBLEMA NO BANCO: name ou code est√° null/undefined!');",
      "type": "log"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 98,
      "content": "console.error('‚ùå Erro durante o debug:', error.message);",
      "type": "error"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 100,
      "content": "console.error('üìÑ Response data:', error.response.data);",
      "type": "error"
    },
    {
      "file": "debug-machine-undefined.js",
      "line": 101,
      "content": "console.error('üìä Response status:', error.response.status);",
      "type": "error"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 6,
      "content": "console.log('üîç DEBUGGING: Fluxo completo do TeflonChange frontend\\n');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 16,
      "content": "console.log('üîë Token gerado para operador Lucas');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 19,
      "content": "console.log('\\nüì° Passo 1: Carregando m√°quinas da API...');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 25,
      "content": "console.log(`‚úÖ M√°quinas recebidas da API: ${allMachines.length}`);",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 27,
      "content": "console.log(`   - ${machine.name} (ID: ${machine.id}) - Status: ${machine.status}`);",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 31,
      "content": "console.log('\\nüì° Passo 2: Carregando permiss√µes do operador...');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 37,
      "content": "console.log(`‚úÖ Permiss√µes carregadas: ${permissions.length}`);",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 39,
      "content": "console.log(`   - M√°quina ${permission.machineId} (${permission.machine?.name}): canView=${permission.canView}, canOperate=${permission.canOperate}`);",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 43,
      "content": "console.log('\\nüîç Passo 3: Aplicando filtro filterMachinesByPermissions(machines, \"canOperate\")...');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 48,
      "content": "console.log(`   üîç M√°quina ${machine.id} (${machine.name}) - canOperate: ${canOperate}`);",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 52,
      "content": "console.log(`\\n‚úÖ M√°quinas ap√≥s filtro canOperate: ${filteredMachines.length}`);",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 55,
      "content": "console.log('\\nüìã M√°quinas que DEVERIAM aparecer no select do TeflonChange:');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 57,
      "content": "console.log(`   ‚úÖ ${machine.name} - ${machine.location}`);",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 60,
      "content": "console.log('\\nüéØ DIAGN√ìSTICO: O filtro est√° funcionando corretamente!');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 61,
      "content": "console.log('   Se as m√°quinas ainda n√£o aparecem no frontend, verifique:');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 62,
      "content": "console.log('   1. Se o hook useMachinePermissions est√° sendo chamado corretamente');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 63,
      "content": "console.log('   2. Se h√° erros no console do navegador');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 64,
      "content": "console.log('   3. Se o estado das m√°quinas est√° sendo atualizado no componente');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 65,
      "content": "console.log('   4. Se o token est√° sendo enviado corretamente nas requisi√ß√µes');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 67,
      "content": "console.log('\\n‚ùå PROBLEMA: Nenhuma m√°quina passou no filtro canOperate!');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 68,
      "content": "console.log('   Isso significa que o operador n√£o tem permiss√£o de OPERA√á√ÉO em nenhuma m√°quina.');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 69,
      "content": "console.log('   Para troca de teflon, √© necess√°rio ter canOperate = true.');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 78,
      "content": "console.log('\\nüìä Compara√ß√£o de permiss√µes:');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 79,
      "content": "console.log(`   - M√°quinas com canView: ${canViewMachines.length}`);",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 80,
      "content": "console.log(`   - M√°quinas com canOperate: ${filteredMachines.length}`);",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 83,
      "content": "console.log('\\n‚ö†Ô∏è  ATEN√á√ÉO: O operador pode VER mais m√°quinas do que pode OPERAR!');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 84,
      "content": "console.log('   Isso √© normal - para troca de teflon s√≥ aparecem m√°quinas que pode operar.');",
      "type": "log"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 88,
      "content": "console.error('‚ùå Erro no debug:', error.message);",
      "type": "error"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 90,
      "content": "console.error('   Status:', error.response.status);",
      "type": "error"
    },
    {
      "file": "debug-teflon-frontend-flow.js",
      "line": 91,
      "content": "console.error('   Data:', error.response.data);",
      "type": "error"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 15,
      "content": "console.log('üîç DIAGN√ìSTICO: 4 Erros do Frontend\\n');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 26,
      "content": "console.log('1Ô∏è‚É£ Testando Google Fonts Inter...');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 34,
      "content": "console.log(`   ‚úÖ Google Fonts Inter: Status ${response.status}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 37,
      "content": "console.log(`   ‚ùå Google Fonts Inter: ${error.message}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 42,
      "content": "console.log('\\n2Ô∏è‚É£ Testando Google Fonts JetBrains Mono...');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 50,
      "content": "console.log(`   ‚úÖ Google Fonts JetBrains: Status ${response.status}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 53,
      "content": "console.log(`   ‚ùå Google Fonts JetBrains: ${error.message}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 58,
      "content": "console.log('\\n3Ô∏è‚É£ Testando Backend Health (auto-login)...');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 66,
      "content": "console.log(`   ‚úÖ Backend Health: Status ${response.status}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 67,
      "content": "console.log(`   üìä Dados: ${JSON.stringify(response.data)}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 70,
      "content": "console.log(`   ‚ùå Backend Health: ${error.message}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 72,
      "content": "console.log(`   üìä Status: ${error.response.status}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 73,
      "content": "console.log(`   üìù Resposta: ${JSON.stringify(error.response.data)}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 79,
      "content": "console.log('\\n4Ô∏è‚É£ Testando Login Endpoint...');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 91,
      "content": "console.log(`   ‚úÖ Login Endpoint: Status ${response.status}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 98,
      "content": "console.log(`   üìä Login Status: ${status}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 99,
      "content": "console.log(`   üìù Resposta: ${JSON.stringify(data)}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 102,
      "content": "console.log(`   ‚ö†Ô∏è  RATE LIMITING AINDA ATIVO!`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 106,
      "content": "console.log(`   ‚úÖ Login funcionando (erro esperado: credenciais inv√°lidas)`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 110,
      "content": "console.log(`   ‚ùå Login com erro inesperado`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 114,
      "content": "console.log(`   ‚ùå Login Endpoint: ${error.message}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 120,
      "content": "console.log('\\nüìä RESUMO DOS 4 ERROS:');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 121,
      "content": "console.log(`   1. Google Fonts Inter: ${results.googleFontsInter}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 122,
      "content": "console.log(`   2. Google Fonts JetBrains: ${results.googleFontsJetBrains}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 123,
      "content": "console.log(`   3. Auto-login (Backend Health): ${results.backendHealth}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 124,
      "content": "console.log(`   4. Login Endpoint: ${results.loginEndpoint}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 127,
      "content": "console.log(`   üîí Rate Limiting: ${results.rateLimitStatus}`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 131,
      "content": "console.log('\\nüîß AN√ÅLISE E SOLU√á√ïES:');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 135,
      "content": "console.log('\\nüìù ERROS DE FONTES:');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 136,
      "content": "console.log('   ‚ùå Google Fonts n√£o carregando');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 137,
      "content": "console.log('   üîß Solu√ß√£o: Adicionar fontes locais como fallback');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 138,
      "content": "console.log('   üìÅ Arquivo: frontend/src/index.css');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 139,
      "content": "console.log('   üí° Alternativa: Usar fontes do sistema (Arial, sans-serif)');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 144,
      "content": "console.log('\\nüîó ERRO DE BACKEND:');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 145,
      "content": "console.log('   ‚ùå Backend n√£o responde');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 146,
      "content": "console.log('   üîß Solu√ß√£o: Verificar Railway Dashboard');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 147,
      "content": "console.log('   üåê URL: https://railway.app/dashboard');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 152,
      "content": "console.log('\\nüö´ RATE LIMITING AINDA ATIVO:');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 153,
      "content": "console.log('   ‚ùå Usu√°rios ainda sendo bloqueados');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 154,
      "content": "console.log('   üîß Solu√ß√£o: Redeploy necess√°rio no Railway');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 155,
      "content": "console.log('   ‚è≥ Tempo: 2-3 minutos');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 157,
      "content": "console.log('\\n‚úÖ RATE LIMITING REMOVIDO:');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 158,
      "content": "console.log('   ‚úÖ Login funcionando normalmente');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 159,
      "content": "console.log('   ‚úÖ Usu√°rios n√£o s√£o mais bloqueados');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 167,
      "content": "console.log('\\nüéØ STATUS GERAL:');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 168,
      "content": "console.log(`   üìä Erros encontrados: ${actualErrors}/4`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 171,
      "content": "console.log('   üéâ TODOS OS ERROS CORRIGIDOS!');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 172,
      "content": "console.log('   ‚úÖ Sistema totalmente funcional');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 174,
      "content": "console.log(`   ‚ö†Ô∏è  ${actualErrors} erro(s) ainda precisam ser corrigidos`);",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 177,
      "content": "console.log('\\nüìã CREDENCIAIS PARA TESTE FINAL:');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 178,
      "content": "console.log('   üë§ Admin: admin@zara.com / admin123');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 179,
      "content": "console.log('   üë§ Demo: demo@zara.com / demo123');",
      "type": "log"
    },
    {
      "file": "fix-4-frontend-errors.js",
      "line": 185,
      "content": "diagnose4FrontendErrors().catch(console.error);",
      "type": "error"
    },
    {
      "file": "fix-admin-password.js",
      "line": 7,
      "content": "console.log('üîß Corrigindo senha do admin...');",
      "type": "log"
    },
    {
      "file": "fix-admin-password.js",
      "line": 18,
      "content": "console.log('‚úÖ Senha do admin atualizada com sucesso!');",
      "type": "log"
    },
    {
      "file": "fix-admin-password.js",
      "line": 19,
      "content": "console.log('Email:', updatedAdmin.email);",
      "type": "log"
    },
    {
      "file": "fix-admin-password.js",
      "line": 20,
      "content": "console.log('Novo hash:', newPassword);",
      "type": "log"
    },
    {
      "file": "fix-admin-password.js",
      "line": 24,
      "content": "console.log('\\nüîç Teste da nova senha:');",
      "type": "log"
    },
    {
      "file": "fix-admin-password.js",
      "line": 25,
      "content": "console.log('Senha v√°lida:', isValid);",
      "type": "log"
    },
    {
      "file": "fix-admin-password.js",
      "line": 28,
      "content": "console.error('‚ùå Erro ao corrigir senha:', error);",
      "type": "error"
    },
    {
      "file": "fix-details.js",
      "line": 35,
      "content": "console.log(`Corrigido: ${filename}`);",
      "type": "log"
    },
    {
      "file": "fix-details.js",
      "line": 39,
      "content": "console.log('Corre√ß√£o conclu√≠da!');",
      "type": "log"
    },
    {
      "file": "fix-machine-status.js",
      "line": 11,
      "content": "console.log('‚úÖ Status da M√°quina 01d atualizado para FUNCIONANDO');",
      "type": "log"
    },
    {
      "file": "fix-machine-status.js",
      "line": 19,
      "content": "console.log(`Status atual: ${machine.name} - ${machine.status}`);",
      "type": "log"
    },
    {
      "file": "fix-machine-status.js",
      "line": 22,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "fix-production-reset.js",
      "line": 8,
      "content": "console.log('üîß Iniciando corre√ß√£o do reset de produ√ß√£o...');",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 11,
      "content": "console.log('üìã Configura√ß√£o atual de turnos:');",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 12,
      "content": "console.log('Backend - Manh√£: 7h-19h, Noite: 19h-7h');",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 13,
      "content": "console.log('Frontend - Manh√£: 6h-14h, Tarde: 14h-22h, Noite: 22h-6h');",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 27,
      "content": "console.log(`\\nüîç Encontrados ${activeShifts.length} turnos ativos:`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 29,
      "content": "console.log(`- Turno ${shift.id}: M√°quina ${shift.machine.name}, Operador ${shift.operator.name}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 30,
      "content": "console.log(`  Tipo: ${shift.shiftType}, In√≠cio: ${shift.startTime}, Fim: ${shift.endTime}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 31,
      "content": "console.log(`  Produ√ß√£o: ${shift.totalProduction}, Ativo: ${shift.isActive}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 39,
      "content": "console.log(`\\n‚è∞ Hor√°rio atual: ${currentHour}:${currentMinute.toString().padStart(2, '0')}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 43,
      "content": "console.log('üîÑ Hor√°rio de mudan√ßa de turno detectado (19:00)!');",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 48,
      "content": "console.log(`üì¶ Arquivando turno da manh√£: ${shift.id}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 51,
      "content": "console.log(`‚úÖ Turno ${shift.id} arquivado com sucesso`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 53,
      "content": "console.error(`‚ùå Erro ao arquivar turno ${shift.id}:`, error.message);",
      "type": "error"
    },
    {
      "file": "fix-production-reset.js",
      "line": 74,
      "content": "console.log(`üåô Criando turno da noite para m√°quina ${machine.name}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 84,
      "content": "console.log(`‚úÖ Turno da noite criado para m√°quina ${machine.name}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 86,
      "content": "console.error(`‚ùå Erro ao criar turno da noite para m√°quina ${machine.name}:`, error.message);",
      "type": "error"
    },
    {
      "file": "fix-production-reset.js",
      "line": 91,
      "content": "console.log('‚ÑπÔ∏è N√£o √© hor√°rio de mudan√ßa de turno (19:00)');",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 96,
      "content": "console.log('üîÑ Hor√°rio de mudan√ßa de turno detectado (7:00)!');",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 101,
      "content": "console.log(`üì¶ Arquivando turno da noite: ${shift.id}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 104,
      "content": "console.log(`‚úÖ Turno ${shift.id} arquivado com sucesso`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 106,
      "content": "console.error(`‚ùå Erro ao arquivar turno ${shift.id}:`, error.message);",
      "type": "error"
    },
    {
      "file": "fix-production-reset.js",
      "line": 126,
      "content": "console.log(`üåÖ Criando turno da manh√£ para m√°quina ${machine.name}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 136,
      "content": "console.log(`‚úÖ Turno da manh√£ criado para m√°quina ${machine.name}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 138,
      "content": "console.error(`‚ùå Erro ao criar turno da manh√£ para m√°quina ${machine.name}:`, error.message);",
      "type": "error"
    },
    {
      "file": "fix-production-reset.js",
      "line": 156,
      "content": "console.log(`\\nüìä Status final - ${finalActiveShifts.length} turnos ativos:`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 158,
      "content": "console.log(`- Turno ${shift.id}: ${shift.machine.name} (${shift.shiftType}) - Produ√ß√£o: ${shift.totalProduction}`);",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 161,
      "content": "console.log('\\n‚úÖ Corre√ß√£o do reset de produ√ß√£o conclu√≠da!');",
      "type": "log"
    },
    {
      "file": "fix-production-reset.js",
      "line": 164,
      "content": "console.error('‚ùå Erro ao corrigir reset de produ√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "fix-schema-mongodb.js",
      "line": 22,
      "content": "console.log(`${colors[color]}${message}${colors.reset}`);",
      "type": "log"
    },
    {
      "file": "fix-stuck-operations.js",
      "line": 6,
      "content": "console.log('=== Corrigindo opera√ß√µes travadas ===');",
      "type": "log"
    },
    {
      "file": "fix-stuck-operations.js",
      "line": 28,
      "content": "console.log(`Encontradas ${stuckOperations.length} opera√ß√µes travadas (mais de 24h ativas)`);",
      "type": "log"
    },
    {
      "file": "fix-stuck-operations.js",
      "line": 46,
      "content": "console.log(`${result.count} opera√ß√µes foram canceladas automaticamente.`);",
      "type": "log"
    },
    {
      "file": "fix-stuck-operations.js",
      "line": 63,
      "content": "console.log(`Status de ${uniqueMachineIds.length} m√°quinas foi atualizado para STOPPED.`);",
      "type": "log"
    },
    {
      "file": "fix-stuck-operations.js",
      "line": 68,
      "content": "console.log(`- Cancelada: ${op.user.name} na ${op.machine.name} (${duration} min)`);",
      "type": "log"
    },
    {
      "file": "fix-stuck-operations.js",
      "line": 81,
      "content": "console.log(`\\nOpera√ß√µes ativas restantes: ${remainingOps.length}`);",
      "type": "log"
    },
    {
      "file": "fix-stuck-operations.js",
      "line": 84,
      "content": "console.log(`- ${op.user.name} na ${op.machine.name} (${duration} min)`);",
      "type": "log"
    },
    {
      "file": "fix-stuck-operations.js",
      "line": 88,
      "content": "console.error('Erro:', error);",
      "type": "error"
    },
    {
      "file": "force-production-update.js",
      "line": 7,
      "content": "console.log('üîÑ For√ßando atualiza√ß√£o de produ√ß√£o...');",
      "type": "log"
    },
    {
      "file": "force-production-update.js",
      "line": 15,
      "content": "console.log('‚úÖ Atualiza√ß√£o de produ√ß√£o conclu√≠da');",
      "type": "log"
    },
    {
      "file": "force-production-update.js",
      "line": 33,
      "content": "console.log('\\nüìä Dados de produ√ß√£o ap√≥s atualiza√ß√£o:');",
      "type": "log"
    },
    {
      "file": "force-production-update.js",
      "line": 35,
      "content": "console.log(`- ${shift.machine.name}: ${shift.totalProduction} pe√ßas (${shift.operator.name})`);",
      "type": "log"
    },
    {
      "file": "force-production-update.js",
      "line": 36,
      "content": "console.log(`  √öltima atualiza√ß√£o: ${shift.lastUpdate}`);",
      "type": "log"
    },
    {
      "file": "force-production-update.js",
      "line": 40,
      "content": "console.error('‚ùå Erro ao for√ßar atualiza√ß√£o:', error.message);",
      "type": "error"
    },
    {
      "file": "force-production-update.js",
      "line": 41,
      "content": "console.error(error.stack);",
      "type": "error"
    },
    {
      "file": "generate-token.js",
      "line": 11,
      "content": "console.log('Token gerado:', token);",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 6,
      "content": "console.log('üîç OBTENDO URL REAL DO VERCEL DEPLOYMENT');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 7,
      "content": "console.log('=' .repeat(50));",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 25,
      "content": "console.log('\\nüìã VERIFICANDO VERCEL CLI:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 26,
      "content": "console.log('-'.repeat(30));",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 30,
      "content": "console.log(`‚úÖ Vercel CLI instalado: ${result.output}`);",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 33,
      "content": "console.log('‚ùå Vercel CLI n√£o encontrado');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 34,
      "content": "console.log('üí° Instale com: npm i -g vercel');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 41,
      "content": "console.log('\\nüìã OBTENDO DEPLOYMENTS DO VERCEL:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 42,
      "content": "console.log('-'.repeat(40));",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 48,
      "content": "console.log('‚úÖ Deployments encontrados:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 49,
      "content": "console.log(listResult.output);",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 65,
      "content": "console.log('‚ùå Erro ao obter deployments:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 66,
      "content": "console.log(listResult.error);",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 73,
      "content": "console.log('\\nüìã VERIFICANDO PROJETO VERCEL:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 74,
      "content": "console.log('-'.repeat(35));",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 84,
      "content": "console.log('‚úÖ Projeto Vercel configurado:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 85,
      "content": "console.log(`   Org ID: ${config.orgId}`);",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 86,
      "content": "console.log(`   Project ID: ${config.projectId}`);",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 91,
      "content": "console.log('\\nüìã INFORMA√á√ïES DO DEPLOYMENT:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 92,
      "content": "console.log(inspectResult.output);",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 97,
      "content": "console.log('‚ùå Erro ao ler configura√ß√£o Vercel:', error.message);",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 100,
      "content": "console.log('‚ùå Projeto n√£o est√° linkado ao Vercel');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 101,
      "content": "console.log('üí° Execute: vercel --prod no diret√≥rio frontend');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 145,
      "content": "console.log('\\nüìã GERANDO URLs POSS√çVEIS:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 146,
      "content": "console.log('-'.repeat(30));",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 148,
      "content": "console.log('‚ö†Ô∏è  URLs baseadas em nomes comuns (podem n√£o existir)');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 152,
      "content": "console.log('\\nüéØ CONFIGURA√á√ÉO CORS RECOMENDADA:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 153,
      "content": "console.log('=' .repeat(50));",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 163,
      "content": "console.log('\\nüìù VARI√ÅVEL CORS_ORIGIN:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 164,
      "content": "console.log(`CORS_ORIGIN=${corsOrigin}`);",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 166,
      "content": "console.log('\\nüöÄ PR√ìXIMOS PASSOS:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 167,
      "content": "console.log('1. Acesse Railway Dashboard');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 168,
      "content": "console.log('2. V√° em Variables');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 169,
      "content": "console.log('3. Atualize CORS_ORIGIN com o valor acima');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 170,
      "content": "console.log('4. Salve e fa√ßa redeploy');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 173,
      "content": "console.log('\\nüí° RECOMENDA√á√ïES:');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 174,
      "content": "console.log('- Instale Vercel CLI: npm i -g vercel');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 175,
      "content": "console.log('- Fa√ßa deploy do frontend: cd frontend && vercel --prod');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 176,
      "content": "console.log('- Verifique URLs reais no Vercel Dashboard');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 179,
      "content": "console.log('\\n' + '=' .repeat(50));",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 180,
      "content": "console.log('‚úÖ AN√ÅLISE CONCLU√çDA');",
      "type": "log"
    },
    {
      "file": "get-vercel-deployment-url.js",
      "line": 184,
      "content": "main().catch(console.error);",
      "type": "error"
    },
    {
      "file": "index.js",
      "line": 130,
      "content": "console.log('üìß Servi√ßos de notifica√ß√£o habilitados');",
      "type": "log"
    },
    {
      "file": "index.js",
      "line": 135,
      "content": "console.log('‚è∞ Agendador de tarefas habilitado');",
      "type": "log"
    },
    {
      "file": "index.js",
      "line": 141,
      "content": "console.log('üè≠ Servi√ßo de produ√ß√£o em tempo real iniciado');",
      "type": "log"
    },
    {
      "file": "index.js",
      "line": 193,
      "content": "console.log(`üöÄ Servidor ZARA (HTTP) rodando na porta ${PORT}`);",
      "type": "log"
    },
    {
      "file": "index.js",
      "line": 194,
      "content": "console.log(`üåç Ambiente: ${process.env.NODE_ENV}`);",
      "type": "log"
    },
    {
      "file": "index.js",
      "line": 195,
      "content": "console.log(`üìä Health check: http://localhost:${PORT}/api/health`);",
      "type": "log"
    },
    {
      "file": "index.js",
      "line": 201,
      "content": "console.log(`üîí Servidor ZARA (HTTPS) rodando na porta ${HTTPS_PORT}`);",
      "type": "log"
    },
    {
      "file": "index.js",
      "line": 202,
      "content": "console.log(`üîê SSL/TLS habilitado`);",
      "type": "log"
    },
    {
      "file": "index.js",
      "line": 203,
      "content": "console.log(`üìä Health check: https://localhost:${HTTPS_PORT}/api/health`);",
      "type": "log"
    },
    {
      "file": "index.js",
      "line": 217,
      "content": "console.log('üõë Recebido SIGTERM, encerrando servidor...');",
      "type": "log"
    },
    {
      "file": "index.js",
      "line": 219,
      "content": "console.log('‚úÖ Servidor encerrado com sucesso');",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 10,
      "content": "console.log('üîê AuthenticateToken middleware iniciado');",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 11,
      "content": "console.log('üîê URL:', req.method, req.originalUrl);",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 16,
      "content": "console.log('üîê AuthHeader:', authHeader ? 'Presente' : 'Ausente');",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 17,
      "content": "console.log('üîê Token:', token ? 'Presente' : 'Ausente');",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 20,
      "content": "console.log('üîê ‚ùå Token n√£o fornecido');",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 28,
      "content": "console.log('üîê Verificando token JWT...');",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 30,
      "content": "console.log('üîê Token decodificado:', { id: decoded.id, exp: decoded.exp });",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 66,
      "content": "console.log('üîê Usu√°rio de teste encontrado:', user ? 'Sim' : 'N√£o');",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 104,
      "content": "console.log('üîê ‚úÖ Autentica√ß√£o bem-sucedida para:', user.email);",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 108,
      "content": "console.error('üîê ‚ùå Erro na autentica√ß√£o:', error.message);",
      "type": "error"
    },
    {
      "file": "middleware\\auth.js",
      "line": 135,
      "content": "console.log('RequireRole middleware - req.user:', req.user);",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 136,
      "content": "console.log('RequireRole middleware - required roles:', roles);",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 139,
      "content": "console.log('RequireRole middleware - Usu√°rio n√£o autenticado');",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 149,
      "content": "console.log('RequireRole middleware - userRole:', userRole, 'allowedRoles:', allowedRoles);",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 152,
      "content": "console.log('RequireRole middleware - Acesso negado');",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 161,
      "content": "console.log('RequireRole middleware - Acesso permitido');",
      "type": "log"
    },
    {
      "file": "middleware\\auth.js",
      "line": 243,
      "content": "console.error('Erro no middleware de permiss√£o de m√°quina:', error);",
      "type": "error"
    },
    {
      "file": "middleware\\errorHandler.js",
      "line": 9,
      "content": "console.error('‚ùå Erro capturado:', err);",
      "type": "error"
    },
    {
      "file": "middleware\\security.js",
      "line": 120,
      "content": "console.warn(`üö® Poss√≠vel SQL Injection detectado:`, {",
      "type": "warn"
    },
    {
      "file": "middleware\\security.js",
      "line": 170,
      "content": "console.warn('üö® Requisi√ß√£o suspeita detectada:', securityInfo);",
      "type": "warn"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 14,
      "content": "console.log('üîç MIDDLEWARE trackMachineOperation - IN√çCIO');",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 20,
      "content": "console.log('‚úÖ trackMachineOperation - Dados armazenados, continuando...');",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 24,
      "content": "console.error('‚ùå Erro no middleware de turno:', error);",
      "type": "error"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 43,
      "content": "console.error('Erro ao atualizar dados de turno:', error);",
      "type": "error"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 99,
      "content": "console.log(`üîÑ Dados de turno atualizados - M√°quina: ${machineId}, Operador: ${finalOperatorId}`);",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 101,
      "content": "console.error('Erro ao processar atualiza√ß√£o de turno:', error);",
      "type": "error"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 167,
      "content": "console.error('Erro ao calcular dados de produ√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 183,
      "content": "console.log('üîç MIDDLEWARE checkShiftChange - IN√çCIO');",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 188,
      "content": "console.log('üìã checkShiftChange - machineId:', machineId, 'operatorId:', operatorId, 'user:', user?.id);",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 191,
      "content": "console.log('‚ö†Ô∏è checkShiftChange - Sem machineId, continuando...');",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 198,
      "content": "console.log('‚ö†Ô∏è checkShiftChange - Sem operatorId, continuando...');",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 209,
      "content": "console.log(`üîÑ Mudan√ßa de turno detectada para m√°quina ${machineId}`);",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 217,
      "content": "console.log('‚úÖ checkShiftChange - Conclu√≠do, continuando...');",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 220,
      "content": "console.error('‚ùå Erro ao verificar mudan√ßa de turno:', error);",
      "type": "error"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 229,
      "content": "console.log('üîç MIDDLEWARE validateOperationTime - IN√çCIO');",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 234,
      "content": "console.log('‚è∞ validateOperationTime - Hora atual:', hour, 'Minutos:', now.getMinutes());",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 240,
      "content": "console.log(`‚ö†Ô∏è Opera√ß√£o fora do hor√°rio de turno: ${now.toLocaleTimeString()}`);",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 243,
      "content": "console.log('‚úÖ validateOperationTime - Conclu√≠do, continuando...');",
      "type": "log"
    },
    {
      "file": "middleware\\shiftMiddleware.js",
      "line": 246,
      "content": "console.error('‚ùå Erro ao validar hor√°rio de opera√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 9,
      "content": "console.log('üöÄ Migrando banco PostgreSQL do Railway...');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 10,
      "content": "console.log('üîó URL:', RAILWAY_DATABASE_URL.replace(/:[^:]*@/, ':****@'));",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 17,
      "content": "console.log('üì¶ Gerando cliente Prisma...');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 24,
      "content": "console.log('üîÑ Criando tabelas com db push...');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 31,
      "content": "console.log('üîç Testando conex√£o...');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 43,
      "content": "console.log('üìã Verificando tabelas...');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 52,
      "content": "console.log('‚úÖ Tabelas criadas:');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 54,
      "content": "console.log(`  - ${table.table_name}`);",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 60,
      "content": "console.log(`üë• Tabela 'users': ${userCount} registros`);",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 62,
      "content": "console.log('‚ö†Ô∏è Tabela users ainda n√£o acess√≠vel:', error.message);",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 66,
      "content": "console.log('üë§ Verificando usu√°rio admin...');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 85,
      "content": "console.log('‚úÖ Usu√°rio admin criado!');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 87,
      "content": "console.log('‚úÖ Usu√°rio admin j√° existe!');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 90,
      "content": "console.log('‚ö†Ô∏è Erro ao criar admin:', error.message);",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 94,
      "content": "console.log('üéâ Migra√ß√£o conclu√≠da com sucesso!');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 97,
      "content": "console.error('‚ùå Erro na migra√ß√£o:', error.message);",
      "type": "error"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 100,
      "content": "console.log('\\nüîß Problema de conex√£o com o banco.');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 101,
      "content": "console.log('üìã Verifique se:');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 102,
      "content": "console.log('  1. O servi√ßo PostgreSQL est√° ativo no Railway');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 103,
      "content": "console.log('  2. A URL do banco est√° correta');",
      "type": "log"
    },
    {
      "file": "migrate-railway-database.js",
      "line": 104,
      "content": "console.log('  3. As credenciais est√£o v√°lidas');",
      "type": "log"
    },
    {
      "file": "migrate-to-mongodb.js",
      "line": 28,
      "content": "console.log(`${colors[color]}${message}${colors.reset}`);",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 29,
      "content": "console.log('üöÄ Iniciando migra√ß√£o de dados...');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 32,
      "content": "console.log('üìä Migrando usu√°rios...');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 41,
      "content": "console.log(`‚úÖ ${users.length} usu√°rios migrados`);",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 44,
      "content": "console.log('üè≠ Migrando m√°quinas...');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 53,
      "content": "console.log(`‚úÖ ${machines.length} m√°quinas migradas`);",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 56,
      "content": "console.log('üî¨ Migrando testes de qualidade...');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 65,
      "content": "console.log(`‚úÖ ${qualityTests.length} testes de qualidade migrados`);",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 68,
      "content": "console.log('üîÑ Migrando mudan√ßas de teflon...');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 77,
      "content": "console.log(`‚úÖ ${teflonChanges.length} mudan√ßas de teflon migradas`);",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 80,
      "content": "console.log('üîî Migrando notifica√ß√µes...');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 89,
      "content": "console.log(`‚úÖ ${notifications.length} notifica√ß√µes migradas`);",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 91,
      "content": "console.log('üéâ Migra√ß√£o conclu√≠da com sucesso!');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 94,
      "content": "console.error('‚ùå Erro durante a migra√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "migrate-to-production.js",
      "line": 109,
      "content": "console.log(`üíæ Backup criado: ${backupPath}`);",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 115,
      "content": "console.log('üîÑ Preparando migra√ß√£o para produ√ß√£o...');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 119,
      "content": "console.error('‚ùå Configure DATABASE_URL para PostgreSQL no arquivo .env');",
      "type": "error"
    },
    {
      "file": "migrate-to-production.js",
      "line": 120,
      "content": "console.log('Exemplo: DATABASE_URL=\"postgresql://user:password@host:port/database\"');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 130,
      "content": "console.log('\\nüìã Pr√≥ximos passos:');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 131,
      "content": "console.log('1. Verifique os dados migrados');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 132,
      "content": "console.log('2. Teste a aplica√ß√£o com PostgreSQL');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 133,
      "content": "console.log('3. Configure o deploy em produ√ß√£o');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 134,
      "content": "console.log('4. Atualize as vari√°veis de ambiente');",
      "type": "log"
    },
    {
      "file": "migrate-to-production.js",
      "line": 139,
      "content": "main().catch(console.error);",
      "type": "error"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 8,
      "content": "console.log('üöÄ Executando migra√ß√µes com a URL correta do Railway...');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 9,
      "content": "console.log('URL:', CORRECT_RAILWAY_URL.replace(/:[^:@]*@/, ':****@'));",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 15,
      "content": "console.log('\\nüì¶ Gerando Prisma Client...');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 20,
      "content": "console.log('‚úÖ Prisma Client gerado com sucesso!');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 22,
      "content": "console.log('\\nüîÑ Executando migra√ß√µes (db push)...');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 27,
      "content": "console.log('‚úÖ Migra√ß√µes executadas com sucesso!');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 30,
      "content": "console.log('\\nüîç Verificando tabelas criadas...');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 48,
      "content": "console.log(`üìã Tabelas criadas (${tables.length}):`);",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 50,
      "content": "console.log(`  ‚úÖ ${table.table_name}`);",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 56,
      "content": "console.log('\\nüéâ Tabela \"users\" criada com sucesso!');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 59,
      "content": "console.log('\\nüë§ Criando usu√°rio admin de teste...');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 73,
      "content": "console.log('‚úÖ Usu√°rio admin criado:', adminUser.email);",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 75,
      "content": "console.log('‚ö†Ô∏è  Erro ao criar usu√°rio admin (pode j√° existir):', userError.message);",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 81,
      "content": "console.log('\\nüéâ MIGRA√á√ÉO CONCLU√çDA COM SUCESSO!');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 82,
      "content": "console.log('\\nüìù PR√ìXIMOS PASSOS URGENTES:');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 83,
      "content": "console.log('1. ‚úÖ URL do banco testada e funcionando');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 84,
      "content": "console.log('2. ‚úÖ Tabelas criadas no PostgreSQL');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 85,
      "content": "console.log('3. üîÑ ATUALIZAR DATABASE_URL no Railway Dashboard');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 86,
      "content": "console.log('4. üîÑ Fazer redeploy do backend no Railway');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 87,
      "content": "console.log('5. üîÑ Testar login no frontend');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 89,
      "content": "console.log('\\nüîó URL para configurar no Railway:');",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 90,
      "content": "console.log(CORRECT_RAILWAY_URL);",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 104,
      "content": "console.error('\\n‚ùå ERRO durante migra√ß√£o:');",
      "type": "error"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 105,
      "content": "console.error('Tipo:', error.constructor.name);",
      "type": "error"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 106,
      "content": "console.error('Mensagem:', error.message);",
      "type": "error"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 109,
      "content": "console.error('Stdout:', error.stdout.toString());",
      "type": "error"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 112,
      "content": "console.error('Stderr:', error.stderr.toString());",
      "type": "error"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 125,
      "content": "console.log('\\nüìä RESULTADO FINAL:', result);",
      "type": "log"
    },
    {
      "file": "migrate-with-new-url.js",
      "line": 129,
      "content": "console.error('\\nüí• ERRO CR√çTICO:', error);",
      "type": "error"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 66,
      "content": "console.log(`\\nüîç VERIFICA√á√ÉO ${attempt}/${MAX_ATTEMPTS} - ${new Date().toLocaleTimeString()}`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 67,
      "content": "console.log('=' .repeat(60));",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 70,
      "content": "console.log('1Ô∏è‚É£ Testando sa√∫de do backend...');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 74,
      "content": "console.log(`‚úÖ Backend OK (Status: ${healthResult.status})`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 78,
      "content": "console.log('üöÄ REDEPLOY DETECTADO! (Uptime resetado)');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 82,
      "content": "console.log(`‚ùå Backend com problemas: ${healthResult.error}`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 87,
      "content": "console.log('\\n2Ô∏è‚É£ Testando login...');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 91,
      "content": "console.log('üéâ LOGIN FUNCIONANDO!');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 92,
      "content": "console.log(`‚úÖ Status: ${loginResult.status}`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 93,
      "content": "console.log(`‚úÖ Token recebido: ${loginResult.hasToken ? 'Sim' : 'N√£o'}`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 97,
      "content": "console.log(`‚è≥ Rate limiting ainda ativo (Status: ${loginResult.status})`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 98,
      "content": "console.log(`üìù Erro: ${loginResult.error}`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 100,
      "content": "console.log(`üî• Erro interno do servidor (Status: ${loginResult.status})`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 101,
      "content": "console.log(`üìù Erro: ${loginResult.error}`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 103,
      "content": "console.log(`‚ùå Erro de login (Status: ${loginResult.status})`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 104,
      "content": "console.log(`üìù Erro: ${loginResult.error}`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 111,
      "content": "console.log('\\nüéØ EXECUTANDO TESTE FINAL...');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 112,
      "content": "console.log('=' .repeat(60));",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 118,
      "content": "console.log(`\\nTeste ${i}/${totalTests}:`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 123,
      "content": "console.log(`‚úÖ Sucesso (${result.status})`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 125,
      "content": "console.log(`‚ùå Falha (${result.status}): ${result.error}`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 133,
      "content": "console.log(`\\nüìä RESULTADO FINAL: ${successCount}/${totalTests} sucessos`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 136,
      "content": "console.log('üéâ RATE LIMITING REMOVIDO COM SUCESSO!');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 137,
      "content": "console.log('‚úÖ Sistema pronto para uso!');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 139,
      "content": "console.log('‚ö†Ô∏è Rate limiting parcialmente removido');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 140,
      "content": "console.log('üîÑ Pode precisar de mais tempo...');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 142,
      "content": "console.log('‚ùå Rate limiting ainda ativo');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 143,
      "content": "console.log('üîß Verificar configura√ß√µes do Railway');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 148,
      "content": "console.log('üöÄ MONITOR DE DEPLOY RAILWAY - REMO√á√ÉO DE RATE LIMITING');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 149,
      "content": "console.log('=' .repeat(60));",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 150,
      "content": "console.log(`üì° Backend: ${BACKEND_URL}`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 151,
      "content": "console.log(`‚è±Ô∏è Intervalo: ${INTERVAL/1000}s`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 152,
      "content": "console.log(`üîÑ M√°ximo: ${MAX_ATTEMPTS} tentativas (${(MAX_ATTEMPTS * INTERVAL/1000/60).toFixed(1)} min)`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 153,
      "content": "console.log('=' .repeat(60));",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 164,
      "content": "console.log(`\\n‚è≥ Aguardando ${INTERVAL/1000}s para pr√≥xima verifica√ß√£o...`);",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 169,
      "content": "console.log('\\n‚è∞ TEMPO LIMITE ATINGIDO');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 170,
      "content": "console.log('‚ùå Rate limiting ainda n√£o foi removido');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 171,
      "content": "console.log('üîß Verificar manualmente o Railway Dashboard');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 177,
      "content": "console.log('\\n\\nüõë Monitor interrompido pelo usu√°rio');",
      "type": "log"
    },
    {
      "file": "monitor-new-railway-deploy.js",
      "line": 183,
      "content": "console.error('üí• Erro fatal:', error.message);",
      "type": "error"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 12,
      "content": "console.log('üîç MONITOR: Aguardando Redeploy Railway\\n');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 13,
      "content": "console.log('üìã INSTRU√á√ïES:');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 14,
      "content": "console.log('   1. Acesse: https://railway.app/dashboard');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 15,
      "content": "console.log('   2. Encontre: zara-backend-production-aab3');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 16,
      "content": "console.log('   3. Clique: \"Redeploy\" ou \"Deploy Now\"');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 17,
      "content": "console.log('   4. Aguarde: Este script detectar√° automaticamente\\n');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 23,
      "content": "console.log(`üîÑ Tentativa ${attempt}/${maxAttempts} - ${new Date().toLocaleTimeString()}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 32,
      "content": "console.log(`   ‚úÖ Backend Health: Status ${healthResponse.status}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 47,
      "content": "console.log(`   ‚úÖ Login Test: Status ${loginResponse.status}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 48,
      "content": "console.log('   üéâ RATE LIMITING REMOVIDO COM SUCESSO!');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 57,
      "content": "console.log(`   ‚è≥ Rate limiting ainda ativo (429) - Aguardando redeploy...`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 59,
      "content": "console.log(`   ‚è∞ Retry ap√≥s: ${data.retryAfter} segundos`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 62,
      "content": "console.log(`   ‚úÖ Login funcionando (${status}) - RATE LIMITING REMOVIDO!`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 63,
      "content": "console.log('   üéâ REDEPLOY CONCLU√çDO COM SUCESSO!');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 66,
      "content": "console.log(`   ‚ö†Ô∏è  Status inesperado: ${status}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 69,
      "content": "console.log(`   ‚ùå Erro de conex√£o: ${error.message}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 71,
      "content": "console.log('   üîÑ Backend pode estar reiniciando...');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 77,
      "content": "console.log('\\n‚è∞ TIMEOUT: Redeploy n√£o detectado em 10 minutos');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 78,
      "content": "console.log('\\nüîß PR√ìXIMOS PASSOS:');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 79,
      "content": "console.log('   1. Verificar Railway Dashboard');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 80,
      "content": "console.log('   2. Confirmar se redeploy foi iniciado');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 81,
      "content": "console.log('   3. Verificar logs do Railway');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 82,
      "content": "console.log('   4. Executar: node fix-4-frontend-errors.js');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 87,
      "content": "console.log('   ‚è≥ Aguardando 30 segundos...\\n');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 94,
      "content": "console.log('\\nüß™ EXECUTANDO TESTE FINAL COMPLETO...');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 106,
      "content": "console.log('\\nüéâ SISTEMA TOTALMENTE FUNCIONAL!');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 107,
      "content": "console.log('\\nüìã CREDENCIAIS PARA TESTE:');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 108,
      "content": "console.log('   üë§ Admin: admin@zara.com / admin123');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 109,
      "content": "console.log('   üë§ Demo: demo@zara.com / demo123');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 110,
      "content": "console.log('\\nüåê FRONTEND: https://sistema-zara-frontend.vercel.app');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 111,
      "content": "console.log('üîó BACKEND: https://zara-backend-production-aab3.up.railway.app');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 113,
      "content": "console.log('\\n‚ö†Ô∏è  Teste final com problemas - Verificar logs');",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 118,
      "content": "console.log('\\n‚ö†Ô∏è  Erro ao executar teste final:', error.message);",
      "type": "log"
    },
    {
      "file": "monitor-railway-redeploy.js",
      "line": 124,
      "content": "monitorRailwayRedeploy().catch(console.error);",
      "type": "error"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 21,
      "content": "console.log(`\\nüîç [${timestamp}] Verifica√ß√£o ${checkCount}/${MAX_CHECKS}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 22,
      "content": "console.log('================================================');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 26,
      "content": "console.log('1Ô∏è‚É£ Testando backend health...');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 35,
      "content": "console.log(`   ‚úÖ Backend: Status ${healthResponse.status}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 36,
      "content": "console.log(`   üìä Uptime: ${healthResponse.data.uptime}s`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 37,
      "content": "console.log(`   üïê Timestamp: ${healthResponse.data.timestamp}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 40,
      "content": "console.log('\\n2Ô∏è‚É£ Testando login (verificando rate limiting)...');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 51,
      "content": "console.log(`   ‚úÖ Login: Status ${loginResponse.status}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 52,
      "content": "console.log(`   üîë Token recebido: ${loginResponse.data.token ? 'Sim' : 'N√£o'}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 53,
      "content": "console.log(`   üë§ Usu√°rio: ${loginResponse.data.user ? loginResponse.data.user.name : 'N/A'}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 57,
      "content": "console.log('\\n3Ô∏è‚É£ Testando verifica√ß√£o de token...');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 67,
      "content": "console.log(`   ‚úÖ Verifica√ß√£o: Status ${verifyResponse.status}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 68,
      "content": "console.log(`   üë§ Dados: ${JSON.stringify(verifyResponse.data)}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 70,
      "content": "console.log(`   ‚ö†Ô∏è Verifica√ß√£o falhou: ${verifyError.response?.status || verifyError.message}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 75,
      "content": "console.log('\\nüéâ SUCESSO! REDEPLOY CONCLU√çDO!');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 76,
      "content": "console.log('================================');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 77,
      "content": "console.log('‚úÖ Backend funcionando');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 78,
      "content": "console.log('‚úÖ Rate limiting removido');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 79,
      "content": "console.log('‚úÖ Login funcionando');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 80,
      "content": "console.log('‚úÖ Sistema operacional');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 82,
      "content": "console.log('\\nüìã PR√ìXIMOS PASSOS:');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 83,
      "content": "console.log('1. ‚úÖ Testar login no frontend');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 84,
      "content": "console.log('2. ‚úÖ Verificar auto-login');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 85,
      "content": "console.log('3. ‚úÖ Confirmar que erros foram resolvidos');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 87,
      "content": "console.log('\\nüîó LINKS:');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 88,
      "content": "console.log(`Frontend: ${FRONTEND_URL}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 89,
      "content": "console.log(`Backend: ${BACKEND_URL}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 91,
      "content": "console.log('\\nüë§ CREDENCIAIS DE TESTE:');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 92,
      "content": "console.log('Email: admin@zara.com');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 93,
      "content": "console.log('Senha: admin123');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 96,
      "content": "console.log('\\nüîÑ Executando teste final completo...');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 104,
      "content": "console.log(`   ‚è≥ Rate limiting ainda ativo`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 105,
      "content": "console.log(`   üìä Status: ${error.response.status}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 106,
      "content": "console.log(`   ‚è∞ Retry after: ${retryAfter}s (${Math.round(retryAfter/60)}min)`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 107,
      "content": "console.log(`   üí° Aguardando redeploy do Railway...`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 109,
      "content": "console.log(`   ‚ö†Ô∏è Credenciais inv√°lidas (Status: ${error.response.status})`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 110,
      "content": "console.log(`   üí° Isso pode indicar que o redeploy foi feito mas h√° problema nas credenciais`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 112,
      "content": "console.log(`   ‚ùå Erro: ${error.message}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 114,
      "content": "console.log(`   üìä Status: ${error.response.status}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 115,
      "content": "console.log(`   üìù Resposta: ${JSON.stringify(error.response.data)}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 122,
      "content": "console.log(`\\n‚è≥ Pr√≥xima verifica√ß√£o em ${CHECK_INTERVAL/1000}s...`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 125,
      "content": "console.log('\\n‚è∞ TIMEOUT: M√°ximo de verifica√ß√µes atingido');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 126,
      "content": "console.log('üîß A√á√ïES NECESS√ÅRIAS:');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 127,
      "content": "console.log('1. Verificar se o redeploy foi iniciado no Railway Dashboard');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 128,
      "content": "console.log('2. Aguardar mais tempo se o redeploy estiver em andamento');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 129,
      "content": "console.log('3. Verificar logs do Railway para poss√≠veis erros');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 130,
      "content": "console.log('4. Executar este monitor novamente ap√≥s o redeploy');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 136,
      "content": "console.log('\\nüß™ TESTE FINAL COMPLETO');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 137,
      "content": "console.log('========================');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 141,
      "content": "console.log('üîÑ Testando m√∫ltiplos logins (5x)...');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 151,
      "content": "console.log(`   ‚úÖ Login ${i}/5: Status ${response.status}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 153,
      "content": "console.log(`   ‚ùå Login ${i}/5: ${error.response?.status || error.message}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 155,
      "content": "console.log('   üö® ATEN√á√ÉO: Rate limiting ainda detectado!');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 164,
      "content": "console.log('\\n‚úÖ TODOS OS TESTES PASSARAM!');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 165,
      "content": "console.log('üéâ Sistema 100% funcional');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 166,
      "content": "console.log('üîì Rate limiting completamente removido');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 167,
      "content": "console.log('üöÄ Pronto para uso em produ√ß√£o');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 170,
      "content": "console.log(`\\n‚ùå Erro no teste final: ${error.message}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 175,
      "content": "console.log('üöÄ MONITOR DE STATUS DO RAILWAY');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 176,
      "content": "console.log('===============================');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 177,
      "content": "console.log(`üìç Backend: ${BACKEND_URL}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 178,
      "content": "console.log(`üìç Frontend: ${FRONTEND_URL}`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 179,
      "content": "console.log(`‚è±Ô∏è Intervalo: ${CHECK_INTERVAL/1000}s`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 180,
      "content": "console.log(`üî¢ M√°ximo: ${MAX_CHECKS} verifica√ß√µes (${(MAX_CHECKS * CHECK_INTERVAL)/60000}min)`);",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 181,
      "content": "console.log('\\nüîç Aguardando redeploy do Railway...');",
      "type": "log"
    },
    {
      "file": "monitor-railway-status.js",
      "line": 182,
      "content": "console.log('üí° O monitor detectar√° automaticamente quando o rate limiting for removido');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 7,
      "content": "console.log('üå± Iniciando seed do banco de dados...');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 15,
      "content": "console.log('‚úÖ Dados j√° existem no banco de dados');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 16,
      "content": "console.log('üìã Credenciais de acesso:');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 17,
      "content": "console.log('Admin: admin@zara.com / admin123');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 18,
      "content": "console.log('Gestor: manager@zara.com / manager123');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 19,
      "content": "console.log('L√≠der: leader@zara.com / leader123');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 20,
      "content": "console.log('Operador: operator@zara.com / operator123');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 26,
      "content": "console.log('üè≠ Criando m√°quinas...');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 40,
      "content": "console.log('‚úÖ M√°quinas criadas com sucesso!');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 45,
      "content": "console.log('‚úÖ Usu√°rios j√° existem no banco de dados');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 50,
      "content": "console.log('üë• Criando usu√°rios...');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 141,
      "content": "console.log('‚úÖ Usu√°rios criados com sucesso!');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 144,
      "content": "console.log('üè≠ Criando m√°quinas...');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 164,
      "content": "console.log('‚úÖ M√°quinas criadas com sucesso!');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 167,
      "content": "console.log('‚öôÔ∏è Criando opera√ß√µes de m√°quina...');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 190,
      "content": "console.log('‚úÖ Opera√ß√µes criadas com sucesso!');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 193,
      "content": "console.log('üîß Criando registros de teflon...');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 218,
      "content": "console.log('‚úÖ Registros de teflon criados com sucesso!');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 221,
      "content": "console.log('üîç Criando testes de qualidade...');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 258,
      "content": "console.log('‚úÖ Testes de qualidade criados com sucesso!');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 261,
      "content": "console.log('üîî Criando notifica√ß√µes...');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 316,
      "content": "console.log('‚úÖ Notifica√ß√µes criadas com sucesso!');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 319,
      "content": "console.log('üìù Criando logs do sistema...');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 353,
      "content": "console.log('‚úÖ Logs do sistema criados com sucesso!');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 366,
      "content": "console.log('\\nüìä Estat√≠sticas do seed:');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 367,
      "content": "console.log(`üë• Usu√°rios: ${stats.users}`);",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 368,
      "content": "console.log(`üè≠ M√°quinas: ${stats.machines}`);",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 369,
      "content": "console.log(`‚öôÔ∏è Opera√ß√µes: ${stats.operations}`);",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 370,
      "content": "console.log(`üîç Testes de Qualidade: ${stats.qualityTests}`);",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 371,
      "content": "console.log(`üîß Trocas de Teflon: ${stats.teflonChanges}`);",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 372,
      "content": "console.log(`üîî Notifica√ß√µes: ${stats.notifications}`);",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 373,
      "content": "console.log(`üìù Logs do Sistema: ${stats.systemLogs}`);",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 375,
      "content": "console.log('\\nüéâ Seed conclu√≠do com sucesso!');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 376,
      "content": "console.log('\\nüìã Credenciais de acesso:');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 377,
      "content": "console.log('Admin: admin@zara.com / admin123');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 378,
      "content": "console.log('Gestor: joao.silva@zara.com / manager123');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 379,
      "content": "console.log('L√≠der: maria.santos@zara.com / leader123');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 380,
      "content": "console.log('Operador: ana.costa@zara.com / operator123');",
      "type": "log"
    },
    {
      "file": "prisma\\seed.js",
      "line": 383,
      "content": "console.error('‚ùå Erro durante o seed:', error);",
      "type": "error"
    },
    {
      "file": "prisma\\seed.js",
      "line": 390,
      "content": "console.error('‚ùå Erro fatal no seed:', e);",
      "type": "error"
    },
    {
      "file": "routes\\auth.js",
      "line": 147,
      "content": "console.log(`‚úÖ Login realizado: ${user.email} (${user.role})`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 412,
      "content": "console.log('üöÄ IN√çCIO DO ENDPOINT START-OPERATION');",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 413,
      "content": "console.log('üìã Par√¢metros recebidos:', req.params);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 414,
      "content": "console.log('üìã Body recebido:', req.body);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 415,
      "content": "console.log('üë§ Usu√°rio completo:', JSON.stringify(req.user, null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 416,
      "content": "console.log('üë§ Nome do usu√°rio:', req.user?.name);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 417,
      "content": "console.log('üë§ ID do usu√°rio:', req.user?.id);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 426,
      "content": "console.log(`üîç Buscando m√°quina - ID: ${id}, √â num√©rico: ${isNumericId}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 430,
      "content": "console.log(`üîç Buscando por ID num√©rico: ${numericId}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 440,
      "content": "console.log(`üîç Buscando por c√≥digo: ${id}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 451,
      "content": "console.log(`üîç M√°quina encontrada:`, machine ? `Sim - ${machine.name}` : 'N√£o');",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 453,
      "content": "console.log(`üìä Dados completos da m√°quina:`, JSON.stringify(machine, null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 454,
      "content": "console.log(`üìä Nome da m√°quina: ${machine.name}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 455,
      "content": "console.log(`üìä Status da m√°quina: ${machine.status}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 456,
      "content": "console.log(`üìä isActive: ${machine.isActive}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 457,
      "content": "console.log(`üìä Opera√ß√µes ativas: ${machine.operations.length}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 461,
      "content": "console.log(`‚ùå M√°quina n√£o encontrada - ID: ${id}, isNumericId: ${isNumericId}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 466,
      "content": "console.log('üîç Verificando se m√°quina est√° ativa...');",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 468,
      "content": "console.log('‚ùå M√°quina inativa');",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 472,
      "content": "console.log('üîç Verificando se m√°quina j√° est√° em opera√ß√£o...');",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 474,
      "content": "console.log('‚ùå M√°quina j√° est√° em opera√ß√£o');",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 561,
      "content": "console.log(`‚úÖ Dados de turno inicializados - M√°quina: ${machine.name}, Operador: ${req.user.name}, Turno: ${shiftType}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 563,
      "content": "console.log(`‚ÑπÔ∏è Dados de turno j√° existem para hoje - M√°quina: ${machine.name}, Operador: ${req.user.name}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 566,
      "content": "console.error('Erro ao inicializar dados de turno:', shiftError);",
      "type": "error"
    },
    {
      "file": "routes\\machines.js",
      "line": 584,
      "content": "console.log('üöÄ Enviando evento machine:operation-started:', eventData);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 621,
      "content": "console.error('Erro ao enviar notifica√ß√£o de in√≠cio de opera√ß√£o:', notificationError);",
      "type": "error"
    },
    {
      "file": "routes\\machines.js",
      "line": 640,
      "content": "console.log('üõë IN√çCIO DO ENDPOINT END-OPERATION');",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 641,
      "content": "console.log('üìã Par√¢metros recebidos:', req.params);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 642,
      "content": "console.log('üìã Body recebido:', req.body);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 643,
      "content": "console.log('üë§ Usu√°rio completo:', JSON.stringify(req.user, null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 644,
      "content": "console.log('üë§ Nome do usu√°rio:', req.user?.name);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 645,
      "content": "console.log('üë§ ID do usu√°rio:', req.user?.id);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 654,
      "content": "console.log(`üîç Finalizando opera√ß√£o - ID: ${id}, √â num√©rico: ${isNumericId}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 658,
      "content": "console.log(`üîç Buscando por ID num√©rico: ${numericId}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 668,
      "content": "console.log(`üîç Buscando por c√≥digo: ${id}`);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 744,
      "content": "console.log('üõë Enviando evento machine:operation-ended:', eventData);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 774,
      "content": "console.error('Erro ao enviar notifica√ß√£o de fim de opera√ß√£o:', notificationError);",
      "type": "error"
    },
    {
      "file": "routes\\machines.js",
      "line": 1010,
      "content": "console.error('Erro ao criar log:', logError);",
      "type": "error"
    },
    {
      "file": "routes\\machines.js",
      "line": 1049,
      "content": "console.log('üöÄ Iniciando PUT /:id/status - req.user:', req.user);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 1067,
      "content": "console.log('üîç Debug - userId original:', req.user.id, 'tipo:', typeof req.user.id);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 1068,
      "content": "console.log('üîç Debug - testUserIdMap[userId]:', testUserIdMap[userId]);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 1072,
      "content": "console.log('üîç Debug - userId mapeado para:', userId);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 1075,
      "content": "console.log('üîç Debug - userId convertido com parseInt:', userId);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 1078,
      "content": "console.log('üîç Debug - userId final:', userId, 'tipo:', typeof userId);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 1133,
      "content": "console.log('üîî Iniciando envio de notifica√ß√£o de status...');",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 1134,
      "content": "console.log('üìã Par√¢metros:', { id: parseInt(id), status, previousStatus, operatorName: req.user.name, reason, notes });",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 1137,
      "content": "console.log('üöÄ Chamando sendMachineStatusNotification...');",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 1146,
      "content": "console.log('‚úÖ Resultado da notifica√ß√£o:', result);",
      "type": "log"
    },
    {
      "file": "routes\\machines.js",
      "line": 1148,
      "content": "console.error('‚ùå Erro ao enviar notifica√ß√£o de status:', notificationError);",
      "type": "error"
    },
    {
      "file": "routes\\machines.js",
      "line": 1149,
      "content": "console.error('‚ùå Stack trace:', notificationError.stack);",
      "type": "error"
    },
    {
      "file": "routes\\machines.js",
      "line": 1153,
      "content": "console.log('üèÅ Finalizando processamento de notifica√ß√£o...');",
      "type": "log"
    },
    {
      "file": "routes\\notifications.js",
      "line": 22,
      "content": "console.log('=== DEBUG NOTIFICA√á√ïES ===');",
      "type": "log"
    },
    {
      "file": "routes\\notifications.js",
      "line": 23,
      "content": "console.log('Query params recebidos:', JSON.stringify(req.query, null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\notifications.js",
      "line": 24,
      "content": "console.log('Headers:', JSON.stringify(req.headers, null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\notifications.js",
      "line": 25,
      "content": "console.log('User:', JSON.stringify(req.user, null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\notifications.js",
      "line": 28,
      "content": "console.log('Validation errors:', JSON.stringify(errors.array(), null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\notifications.js",
      "line": 31,
      "content": "console.log('‚ùå Erro de valida√ß√£o nas notifica√ß√µes:', errors.array());",
      "type": "log"
    },
    {
      "file": "routes\\notifications.js",
      "line": 32,
      "content": "console.log('‚ùå Query params recebidos:', req.query);",
      "type": "log"
    },
    {
      "file": "routes\\notifications.js",
      "line": 41,
      "content": "console.log('‚úÖ Valida√ß√£o passou, continuando...');}]}}}",
      "type": "log"
    },
    {
      "file": "routes\\permissions.js",
      "line": 147,
      "content": "console.error('Erro ao buscar permiss√µes:', error);",
      "type": "error"
    },
    {
      "file": "routes\\permissions.js",
      "line": 220,
      "content": "console.error('Erro ao buscar permiss√µes do usu√°rio:', error);",
      "type": "error"
    },
    {
      "file": "routes\\permissions.js",
      "line": 326,
      "content": "console.error('Erro ao criar permiss√£o:', error);",
      "type": "error"
    },
    {
      "file": "routes\\permissions.js",
      "line": 405,
      "content": "console.error('Erro ao atualizar permiss√£o:', error);",
      "type": "error"
    },
    {
      "file": "routes\\permissions.js",
      "line": 452,
      "content": "console.error('Erro ao remover permiss√£o:', error);",
      "type": "error"
    },
    {
      "file": "routes\\permissions.js",
      "line": 549,
      "content": "console.error('Erro ao criar permiss√µes em lote:', error);",
      "type": "error"
    },
    {
      "file": "routes\\permissions.js",
      "line": 588,
      "content": "console.error('Erro ao buscar operadores:', error);",
      "type": "error"
    },
    {
      "file": "routes\\permissions.js",
      "line": 627,
      "content": "console.error('Erro ao buscar m√°quinas:', error);",
      "type": "error"
    },
    {
      "file": "routes\\production.js",
      "line": 70,
      "content": "console.error(`Erro ao calcular produ√ß√£o da m√°quina ${machine.id}:`, error);",
      "type": "error"
    },
    {
      "file": "routes\\production.js",
      "line": 91,
      "content": "console.error('Erro ao buscar dados agregados de produ√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "routes\\production.js",
      "line": 239,
      "content": "console.error('Erro ao buscar dados de relat√≥rio de produ√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 28,
      "content": "console.log('=== Erros de valida√ß√£o ===');",
      "type": "log"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 29,
      "content": "console.log('Errors:', JSON.stringify(errors.array(), null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 109,
      "content": "console.log('=== GET /api/quality-tests/:id - Dados recebidos ===');",
      "type": "log"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 110,
      "content": "console.log('req.params.id:', req.params.id);",
      "type": "log"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 115,
      "content": "console.log('=== Erros de valida√ß√£o ===');",
      "type": "log"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 116,
      "content": "console.log('errors:', JSON.stringify(errors.array(), null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 160,
      "content": "console.log('=== POST /api/quality-tests - Dados recebidos ===');",
      "type": "log"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 161,
      "content": "console.log('Body:', JSON.stringify(req.body, null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 254,
      "content": "console.log('=== POST /api/quality-tests - Erros de valida√ß√£o ===');",
      "type": "log"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 255,
      "content": "console.log('Validation errors:', JSON.stringify(errors.array(), null, 2));",
      "type": "log"
    },
    {
      "file": "routes\\qualityTests.js",
      "line": 381,
      "content": "console.error('Erro ao enviar notifica√ß√£o de teste de qualidade:', notificationError);",
      "type": "error"
    },
    {
      "file": "routes\\reports.js",
      "line": 1240,
      "content": "console.error('Erro no dashboard:', error);",
      "type": "error"
    },
    {
      "file": "routes\\reports.js",
      "line": 1311,
      "content": "console.error('Erro nos dados agregados:', error);",
      "type": "error"
    },
    {
      "file": "routes\\shifts.js",
      "line": 55,
      "content": "console.error('Erro ao buscar turno atual:', error);",
      "type": "error"
    },
    {
      "file": "routes\\shifts.js",
      "line": 94,
      "content": "console.error('Erro ao atualizar turno:', error);",
      "type": "error"
    },
    {
      "file": "routes\\shifts.js",
      "line": 132,
      "content": "console.error('Erro ao resetar dados do operador:', error);",
      "type": "error"
    },
    {
      "file": "routes\\shifts.js",
      "line": 200,
      "content": "console.error('Erro ao buscar hist√≥rico de turnos:', error);",
      "type": "error"
    },
    {
      "file": "routes\\shifts.js",
      "line": 248,
      "content": "console.error('Erro ao buscar dados arquivados:', error);",
      "type": "error"
    },
    {
      "file": "routes\\shifts.js",
      "line": 281,
      "content": "console.error('Erro ao arquivar turno:', error);",
      "type": "error"
    },
    {
      "file": "routes\\shifts.js",
      "line": 391,
      "content": "console.error('Erro ao gerar resumo de turnos:', error);",
      "type": "error"
    },
    {
      "file": "routes\\shifts.js",
      "line": 422,
      "content": "console.error('Erro no arquivamento manual:', error);",
      "type": "error"
    },
    {
      "file": "routes\\users.js",
      "line": 676,
      "content": "console.log('PUT /profile - req.body:', req.body);",
      "type": "log"
    },
    {
      "file": "routes\\users.js",
      "line": 677,
      "content": "console.log('PUT /profile - req.user:', req.user);",
      "type": "log"
    },
    {
      "file": "routes\\users.js",
      "line": 681,
      "content": "console.log('PUT /profile - Validation errors:', errors.array());",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 8,
      "content": "console.log('üöÄ Iniciando processo de migra√ß√£o do Prisma...');",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 12,
      "content": "console.log('üì¶ Gerando cliente Prisma...');",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 16,
      "content": "console.log('üîÑ Executando migra√ß√µes...');",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 20,
      "content": "console.log('üîç Testando conex√£o com o banco...');",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 24,
      "content": "console.log('üìã Verificando tabelas criadas...');",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 32,
      "content": "console.log('‚úÖ Tabelas encontradas:');",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 34,
      "content": "console.log(`  - ${table.table_name}`);",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 39,
      "content": "console.log(`üë• Tabela 'users' criada com sucesso! (${userCount} registros)`);",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 41,
      "content": "console.log('üéâ Migra√ß√µes executadas com sucesso!');",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 44,
      "content": "console.error('‚ùå Erro durante as migra√ß√µes:', error.message);",
      "type": "error"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 47,
      "content": "console.log('\\nüîß Tentando criar as tabelas manualmente...');",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 50,
      "content": "console.log('‚úÖ Tabelas criadas com db push!');",
      "type": "log"
    },
    {
      "file": "run-prisma-migrations.js",
      "line": 52,
      "content": "console.error('‚ùå Erro no db push:', pushError.message);",
      "type": "error"
    },
    {
      "file": "services\\emailService.js",
      "line": 24,
      "content": "console.log('üìß Servi√ßo de email configurado com sucesso');",
      "type": "log"
    },
    {
      "file": "services\\emailService.js",
      "line": 26,
      "content": "console.error('‚ùå Erro ao configurar servi√ßo de email:', error.message);",
      "type": "error"
    },
    {
      "file": "services\\emailService.js",
      "line": 70,
      "content": "console.log('üìß Email de alerta de qualidade enviado:', result.messageId);",
      "type": "log"
    },
    {
      "file": "services\\emailService.js",
      "line": 73,
      "content": "console.error('‚ùå Erro ao enviar email de alerta:', error);",
      "type": "error"
    },
    {
      "file": "services\\emailService.js",
      "line": 136,
      "content": "console.log('üìß Email de lembrete de teflon enviado:', result.messageId);",
      "type": "log"
    },
    {
      "file": "services\\emailService.js",
      "line": 139,
      "content": "console.error('‚ùå Erro ao enviar email de lembrete:', error);",
      "type": "error"
    },
    {
      "file": "services\\emailService.js",
      "line": 202,
      "content": "console.log('üìß Email de alerta de m√°quina enviado:', result.messageId);",
      "type": "log"
    },
    {
      "file": "services\\emailService.js",
      "line": 205,
      "content": "console.error('‚ùå Erro ao enviar email de alerta de m√°quina:', error);",
      "type": "error"
    },
    {
      "file": "services\\emailService.js",
      "line": 273,
      "content": "console.log('üìß Relat√≥rio di√°rio enviado:', result.messageId);",
      "type": "log"
    },
    {
      "file": "services\\emailService.js",
      "line": 276,
      "content": "console.error('‚ùå Erro ao enviar relat√≥rio di√°rio:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 12,
      "content": "console.log(`üìß Email notifications: ${this.emailEnabled ? 'Enabled' : 'Disabled'}`);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 13,
      "content": "console.log(`üì± Push notifications: ${this.pushEnabled ? 'Enabled' : 'Disabled'}`);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 19,
      "content": "console.log('üîå Socket.IO configurado no NotificationService');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 43,
      "content": "console.error('‚ùå Erro ao buscar emails dos usu√°rios:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 50,
      "content": "console.log('üë• Buscando usu√°rios por role:', roles);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 67,
      "content": "console.log(`üìä Usu√°rios encontrados: ${users.length}`);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 69,
      "content": "console.log(`   - ${user.name} (${user.role}) - ID: ${user.id} - Email: ${user.email}`);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 74,
      "content": "console.error('‚ùå Erro ao buscar usu√°rios por papel:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 75,
      "content": "console.error('‚ùå Stack trace:', error.stack);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 82,
      "content": "console.log('üíæ Salvando notifica√ß√£o no banco...');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 83,
      "content": "console.log('üìã Dados recebidos:', JSON.stringify(data, null, 2));",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 99,
      "content": "console.log('üîÑ Dados preparados para o Prisma:', JSON.stringify(notificationData, null, 2));",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 105,
      "content": "console.log('‚úÖ Notifica√ß√£o salva com sucesso - ID:', notification.id);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 109,
      "content": "console.log('üì° Emitindo notifica√ß√£o via WebSocket...');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 127,
      "content": "console.log('‚ö†Ô∏è Socket.IO n√£o configurado - notifica√ß√£o n√£o enviada em tempo real');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 132,
      "content": "console.error('‚ùå Erro ao salvar notifica√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 133,
      "content": "console.error('‚ùå C√≥digo do erro:', error.code);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 134,
      "content": "console.error('‚ùå Mensagem do erro:', error.message);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 135,
      "content": "console.error('‚ùå Stack trace:', error.stack);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 136,
      "content": "console.error('‚ùå Dados da notifica√ß√£o:', JSON.stringify(data, null, 2));",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 143,
      "content": "console.log('üìß Enviando notifica√ß√£o de teste de qualidade...');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 176,
      "content": "console.log('‚úÖ Notifica√ß√£o de teste de qualidade enviada');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 179,
      "content": "console.error('‚ùå Erro ao enviar notifica√ß√£o de teste:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 186,
      "content": "console.log('üìß Enviando notifica√ß√£o de troca de teflon...');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 223,
      "content": "console.log('‚úÖ Notifica√ß√£o de troca de teflon enviada');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 226,
      "content": "console.error('‚ùå Erro ao enviar notifica√ß√£o de teflon:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 233,
      "content": "console.log('üìß Enviando notifica√ß√£o de status de m√°quina...');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 234,
      "content": "console.log('üè≠ Par√¢metros recebidos:', { machineId, status, previousStatus, operatorName, reason, notes });",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 242,
      "content": "console.log('‚ùå M√°quina n√£o encontrada');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 246,
      "content": "console.log('üè≠ Dados da m√°quina encontrada:', JSON.stringify(machine, null, 2));",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 250,
      "content": "console.log(`üìã Criando notifica√ß√µes para ${targetUsers.length} usu√°rios`);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 252,
      "content": "console.log(`   - ${user.name} (${user.role}) - ID: ${user.id}`);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 256,
      "content": "console.log('‚ö†Ô∏è Nenhum usu√°rio encontrado para enviar notifica√ß√µes');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 263,
      "content": "console.log(`\\nüîÑ Criando notifica√ß√£o para: ${user.name} (ID: ${user.id})`);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 284,
      "content": "console.log(`üìã Dados da notifica√ß√£o para ${user.name}:`, JSON.stringify(notificationData, null, 2));",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 288,
      "content": "console.log(`‚úÖ Notifica√ß√£o criada com sucesso para ${user.name} - ID: ${notification.id}`);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 291,
      "content": "console.log(`‚ùå Falha ao criar notifica√ß√£o para ${user.name}`);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 295,
      "content": "console.log(`üìä Notifica√ß√µes criadas: ${createdNotifications}/${targetUsers.length}`);",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 312,
      "content": "console.log('‚úÖ Notifica√ß√£o de status de m√°quina enviada');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 315,
      "content": "console.error('‚ùå Erro ao enviar notifica√ß√£o de m√°quina:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 316,
      "content": "console.error('‚ùå Stack trace:', error.stack);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 323,
      "content": "console.log('üìä Gerando e enviando relat√≥rio di√°rio...');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 394,
      "content": "console.log('‚úÖ Relat√≥rio di√°rio enviado');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 397,
      "content": "console.error('‚ùå Erro ao enviar relat√≥rio di√°rio:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 462,
      "content": "console.error('‚ùå Erro ao buscar notifica√ß√µes:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 485,
      "content": "console.error('‚ùå Erro ao marcar notifica√ß√£o como lida:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 508,
      "content": "console.error('‚ùå Erro ao marcar todas as notifica√ß√µes como lidas:', error);",
      "type": "error"
    },
    {
      "file": "services\\notificationService.js",
      "line": 516,
      "content": "console.log('üìß Enviando notifica√ß√£o de vencimento de teflon...');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 576,
      "content": "console.log('‚úÖ Notifica√ß√£o de vencimento de teflon enviada');",
      "type": "log"
    },
    {
      "file": "services\\notificationService.js",
      "line": 579,
      "content": "console.error('‚ùå Erro ao enviar notifica√ß√£o de teflon:', error);",
      "type": "error"
    },
    {
      "file": "services\\productionService.js",
      "line": 173,
      "content": "console.error('Erro ao calcular produ√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "services\\productionService.js",
      "line": 193,
      "content": "console.error(`Erro ao calcular produ√ß√£o da m√°quina ${machineId}:`, error);",
      "type": "error"
    },
    {
      "file": "services\\pushService.js",
      "line": 15,
      "content": "console.log('‚ö†Ô∏è Firebase n√£o configurado - vari√°veis de ambiente ausentes');",
      "type": "log"
    },
    {
      "file": "services\\pushService.js",
      "line": 48,
      "content": "console.log('üî• Firebase Admin SDK inicializado com sucesso');",
      "type": "log"
    },
    {
      "file": "services\\pushService.js",
      "line": 50,
      "content": "console.error('‚ùå Erro ao inicializar Firebase:', error.message);",
      "type": "error"
    },
    {
      "file": "services\\pushService.js",
      "line": 51,
      "content": "console.log('üí° Configure as vari√°veis: FIREBASE_PROJECT_ID, FIREBASE_PRIVATE_KEY, FIREBASE_CLIENT_EMAIL');",
      "type": "log"
    },
    {
      "file": "services\\pushService.js",
      "line": 80,
      "content": "console.log(`üì± Token de dispositivo registrado para usu√°rio ${userId}`);",
      "type": "log"
    },
    {
      "file": "services\\pushService.js",
      "line": 83,
      "content": "console.error('‚ùå Erro ao registrar token:', error);",
      "type": "error"
    },
    {
      "file": "services\\pushService.js",
      "line": 103,
      "content": "console.log(`üì± Nenhum dispositivo encontrado para usu√°rio ${userId}`);",
      "type": "log"
    },
    {
      "file": "services\\pushService.js",
      "line": 110,
      "content": "console.error('‚ùå Erro ao enviar notifica√ß√£o para usu√°rio:', error);",
      "type": "error"
    },
    {
      "file": "services\\pushService.js",
      "line": 141,
      "content": "console.log(`üì± Nenhum dispositivo encontrado para role ${role}`);",
      "type": "log"
    },
    {
      "file": "services\\pushService.js",
      "line": 147,
      "content": "console.error('‚ùå Erro ao enviar notifica√ß√£o para role:', error);",
      "type": "error"
    },
    {
      "file": "services\\pushService.js",
      "line": 179,
      "content": "console.log(`‚ùå Token inv√°lido: ${tokens[idx]} - ${resp.error?.message}`);",
      "type": "log"
    },
    {
      "file": "services\\pushService.js",
      "line": 189,
      "content": "console.log(`üì± Notifica√ß√£o enviada: ${response.successCount}/${tokens.length} dispositivos`);",
      "type": "log"
    },
    {
      "file": "services\\pushService.js",
      "line": 196,
      "content": "console.error('‚ùå Erro ao enviar notifica√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "services\\pushService.js",
      "line": 213,
      "content": "console.log(`üóëÔ∏è ${tokens.length} tokens inv√°lidos removidos`);",
      "type": "log"
    },
    {
      "file": "services\\pushService.js",
      "line": 215,
      "content": "console.error('‚ùå Erro ao remover tokens inv√°lidos:', error);",
      "type": "error"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 16,
      "content": "console.log('‚ö†Ô∏è Servi√ßo de produ√ß√£o em tempo real j√° est√° rodando');",
      "type": "log"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 20,
      "content": "console.log('üöÄ Iniciando servi√ßo de produ√ß√£o em tempo real...');",
      "type": "log"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 41,
      "content": "console.log('üõë Servi√ßo de produ√ß√£o em tempo real parado');",
      "type": "log"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 49,
      "content": "console.log('üîÑ RealTimeProductionService: Executando updateProduction...');",
      "type": "log"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 74,
      "content": "console.log(`üîÑ Atualizando produ√ß√£o para ${runningMachines.length} m√°quinas funcionando`);",
      "type": "log"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 84,
      "content": "console.error('‚ùå Erro ao atualizar produ√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 131,
      "content": "console.log(`üìà Produ√ß√£o incremental - ${machine.name}: +${incrementalProduction} pe√ßas (${incrementalMinutes}min a ${currentSpeed}/min) = ${newTotalProduction} total`);",
      "type": "log"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 156,
      "content": "console.log(`üÜï Novo turno criado - ${machine.name}: ${totalProduction} pe√ßas`);",
      "type": "log"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 183,
      "content": "console.log(`‚úÖ Produ√ß√£o atualizada - ${machine.name}: ${currentTotalProduction} pe√ßas (${operationDurationMinutes}min)`);",
      "type": "log"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 186,
      "content": "console.error(`‚ùå Erro ao atualizar produ√ß√£o da m√°quina ${machine.name}:`, error);",
      "type": "error"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 243,
      "content": "console.error(`‚ùå Erro ao buscar velocidade anterior da m√°quina ${machineId}:`, error);",
      "type": "error"
    },
    {
      "file": "services\\realTimeProductionService.js",
      "line": 279,
      "content": "console.error(`‚ùå Erro ao for√ßar atualiza√ß√£o da m√°quina ${machineId}:`, error);",
      "type": "error"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 14,
      "content": "console.log('‚è∞ Inicializando agendador de tarefas...');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 18,
      "content": "console.log('üìä Executando relat√≥rio di√°rio agendado...');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 24,
      "content": "console.log('üîç Verificando trocas de teflon vencidas...');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 30,
      "content": "console.log('üßπ Limpando notifica√ß√µes antigas...');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 36,
      "content": "console.log('üîß Verificando status das m√°quinas...');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 42,
      "content": "console.log('üì¶ Verificando turnos para arquivar...');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 48,
      "content": "console.log('üîÑ Verificando dados de turno...');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 52,
      "content": "console.log(`‚úÖ ${this.jobs.size} tarefas agendadas inicializadas`);",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 59,
      "content": "console.log(`‚è∞ Tarefa '${name}' agendada: ${cronPattern}`);",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 61,
      "content": "console.error(`‚ùå Erro ao agendar tarefa '${name}':`, error.message);",
      "type": "error"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 87,
      "content": "console.log(`üîç Encontradas ${expiringChanges.length} trocas de teflon para notificar`);",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 106,
      "content": "console.error('‚ùå Erro ao verificar teflon vencido:', error);",
      "type": "error"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 125,
      "content": "console.log(`üßπ ${result.count} notifica√ß√µes antigas removidas`);",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 128,
      "content": "console.error('‚ùå Erro ao limpar notifica√ß√µes antigas:', error);",
      "type": "error"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 157,
      "content": "console.log(`üîß Encontradas ${inactiveMachines.length} m√°quinas inativas`);",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 190,
      "content": "console.error('‚ùå Erro ao verificar m√°quinas inativas:', error);",
      "type": "error"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 197,
      "content": "console.log('üìä Gerando relat√≥rio semanal...');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 276,
      "content": "console.log('‚úÖ Relat√≥rio semanal gerado com sucesso');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 279,
      "content": "console.error('‚ùå Erro ao gerar relat√≥rio semanal:', error);",
      "type": "error"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 289,
      "content": "console.log(`‚èπÔ∏è Tarefa '${name}' parada`);",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 299,
      "content": "console.log(`‚ñ∂Ô∏è Tarefa '${name}' iniciada`);",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 319,
      "content": "console.log('üì¶ Iniciando arquivamento de turnos completos...');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 321,
      "content": "console.log(`‚úÖ ${result.archived} turnos arquivados`);",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 324,
      "content": "console.error('‚ùå Erro ao arquivar turnos:', error);",
      "type": "error"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 334,
      "content": "console.error('‚ùå Erro ao atualizar dados de turno:', error);",
      "type": "error"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 340,
      "content": "console.log('‚èπÔ∏è Parando todas as tarefas agendadas...');",
      "type": "log"
    },
    {
      "file": "services\\schedulerService.js",
      "line": 343,
      "content": "console.log(`‚èπÔ∏è Tarefa '${name}' parada`);",
      "type": "log"
    },
    {
      "file": "services\\shiftService.js",
      "line": 108,
      "content": "console.error('Erro ao criar/atualizar dados do turno:', error);",
      "type": "error"
    },
    {
      "file": "services\\shiftService.js",
      "line": 196,
      "content": "console.log(`‚úÖ Dados do turno ${shiftData.shiftType} arquivados para m√°quina ${shiftData.machine.name}`);",
      "type": "log"
    },
    {
      "file": "services\\shiftService.js",
      "line": 199,
      "content": "console.error('Erro ao arquivar dados do turno:', error);",
      "type": "error"
    },
    {
      "file": "services\\shiftService.js",
      "line": 243,
      "content": "console.log(`üîÑ Dados resetados para novo turno ${currentShiftType} - M√°quina: ${machineId}, Operador: ${operatorId}`);",
      "type": "log"
    },
    {
      "file": "services\\shiftService.js",
      "line": 246,
      "content": "console.error('Erro ao resetar dados do operador:', error);",
      "type": "error"
    },
    {
      "file": "services\\shiftService.js",
      "line": 279,
      "content": "console.error('Erro ao buscar dados do turno atual:', error);",
      "type": "error"
    },
    {
      "file": "services\\shiftService.js",
      "line": 318,
      "content": "console.error('Erro ao buscar dados arquivados:', error);",
      "type": "error"
    },
    {
      "file": "services\\shiftService.js",
      "line": 348,
      "content": "console.log(`üîç Encontrados ${activeShifts.length} turnos para arquivar`);",
      "type": "log"
    },
    {
      "file": "services\\shiftService.js",
      "line": 356,
      "content": "console.error(`Erro ao arquivar turno ${shift.id}:`, error);",
      "type": "error"
    },
    {
      "file": "services\\shiftService.js",
      "line": 368,
      "content": "console.error('Erro ao verificar turnos para arquivar:', error);",
      "type": "error"
    },
    {
      "file": "services\\shiftService.js",
      "line": 401,
      "content": "console.error(`Erro ao atualizar turno ${shift.id}:`, error);",
      "type": "error"
    },
    {
      "file": "services\\shiftService.js",
      "line": 411,
      "content": "console.error('Erro ao atualizar dados de turno:', error);",
      "type": "error"
    },
    {
      "file": "services\\shiftService.js",
      "line": 492,
      "content": "console.error('Erro ao calcular dados de produ√ß√£o:', error);",
      "type": "error"
    },
    {
      "file": "setup-browser-auth.js",
      "line": 18,
      "content": "console.log('üîë Token gerado para o navegador:');",
      "type": "log"
    },
    {
      "file": "setup-browser-auth.js",
      "line": 19,
      "content": "console.log(token);",
      "type": "log"
    },
    {
      "file": "setup-browser-auth.js",
      "line": 20,
      "content": "console.log('\\nüìã Execute estes comandos no console do navegador (F12):');",
      "type": "log"
    },
    {
      "file": "setup-browser-auth.js",
      "line": 21,
      "content": "console.log('');",
      "type": "log"
    },
    {
      "file": "setup-browser-auth.js",
      "line": 22,
      "content": "console.log(`localStorage.setItem('token', '${token}');`);",
      "type": "log"
    },
    {
      "file": "setup-browser-auth.js",
      "line": 23,
      "content": "console.log(`localStorage.setItem('user', '${JSON.stringify(user)}');`);",
      "type": "log"
    },
    {
      "file": "setup-browser-auth.js",
      "line": 24,
      "content": "console.log('');",
      "type": "log"
    },
    {
      "file": "setup-browser-auth.js",
      "line": 25,
      "content": "console.log('‚úÖ Depois recarregue a p√°gina (F5)');",
      "type": "log"
    },
    {
      "file": "setup-browser-auth.js",
      "line": 26,
      "content": "console.log('');",
      "type": "log"
    },
    {
      "file": "setup-browser-auth.js",
      "line": 27,
      "content": "console.log('üë§ Usu√°rio configurado:', user);",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 15,
      "content": "console.log('‚ùå Usu√°rio Lucas n√£o encontrado');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 19,
      "content": "console.log('üë§ Usu√°rio encontrado:', {",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 34,
      "content": "console.log('\\nüîë Token gerado:');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 35,
      "content": "console.log(token);",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 37,
      "content": "console.log('\\nüìã Instru√ß√µes para configurar no frontend:');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 38,
      "content": "console.log('1. Abra o DevTools do navegador (F12)');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 39,
      "content": "console.log('2. V√° para a aba Console');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 40,
      "content": "console.log('3. Execute os seguintes comandos:');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 41,
      "content": "console.log('');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 42,
      "content": "console.log(`localStorage.setItem('token', '${token}');`);",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 43,
      "content": "console.log(`localStorage.setItem('user', '${JSON.stringify({",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 50,
      "content": "console.log('');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 51,
      "content": "console.log('4. Recarregue a p√°gina (F5)');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 52,
      "content": "console.log('');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 53,
      "content": "console.log('‚úÖ Ap√≥s isso, todos os erros de autentica√ß√£o devem ser resolvidos!');",
      "type": "log"
    },
    {
      "file": "setup-frontend-auth.js",
      "line": 56,
      "content": "console.error('‚ùå Erro:', error);",
      "type": "error"
    },
    {
      "file": "socket\\socketHandler.js",
      "line": 123,
      "content": "console.warn('ID de usu√°rio inv√°lido:', userId);",
      "type": "warn"
    },
    {
      "file": "socket\\socketHandler.js",
      "line": 135,
      "content": "console.error('Erro ao atualizar status do usu√°rio:', error);",
      "type": "error"
    },
    {
      "file": "socket\\socketHandler.js",
      "line": 146,
      "content": "console.log(`Usu√°rio conectado: ${user.name} (${user.email}) - Socket: ${socket.id}`);",
      "type": "log"
    },
    {
      "file": "socket\\socketHandler.js",
      "line": 341,
      "content": "console.error('Erro ao processar teste de qualidade:', error);",
      "type": "error"
    },
    {
      "file": "socket\\socketHandler.js",
      "line": 387,
      "content": "console.error('Erro ao verificar teflon expirando:', error);",
      "type": "error"
    },
    {
      "file": "socket\\socketHandler.js",
      "line": 502,
      "content": "console.log(`Usu√°rio desconectado: ${user.name} - Motivo: ${reason}`);",
      "type": "log"
    },
    {
      "file": "socket\\socketHandler.js",
      "line": 529,
      "content": "console.error(`Erro no socket ${socket.id}:`, error);",
      "type": "error"
    },
    {
      "file": "update-cors-final.js",
      "line": 4,
      "content": "console.log('üîß ATUALIZANDO CORS_ORIGIN NO RAILWAY');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 5,
      "content": "console.log('=' .repeat(50));",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 10,
      "content": "console.log('\\nüìã CONFIGURA√á√ÉO CORS ATUALIZADA:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 11,
      "content": "console.log('-'.repeat(40));",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 12,
      "content": "console.log(`CORS_ORIGIN=${corsOrigin}`);",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 50,
      "content": "console.log('\\nüß™ VALIDANDO URLs DO CORS:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 51,
      "content": "console.log('-'.repeat(30));",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 57,
      "content": "console.log(`Testando: ${url}`);",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 62,
      "content": "console.log(`‚úÖ V√ÅLIDA - Status: ${result.status}`);",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 64,
      "content": "console.log(`‚ùå INV√ÅLIDA - Status: ${result.status}`);",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 71,
      "content": "console.log(`\\nüìä RESUMO: ${validUrls}/${totalUrls} URLs v√°lidas`);",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 81,
      "content": "console.log('\\nüöÇ TESTANDO BACKEND RAILWAY:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 82,
      "content": "console.log('-'.repeat(30));",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 83,
      "content": "console.log(`URL: ${railwayUrl}`);",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 86,
      "content": "console.log(`Status: ${res.statusCode}`);",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 94,
      "content": "console.log(`Erro: ${error.message}`);",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 103,
      "content": "console.log('Status: TIMEOUT');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 120,
      "content": "console.log('\\nüöÄ INSTRU√á√ïES PARA RAILWAY DASHBOARD:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 121,
      "content": "console.log('=' .repeat(50));",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 123,
      "content": "console.log('\\n1Ô∏è‚É£ ACESSE O RAILWAY DASHBOARD:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 124,
      "content": "console.log('   https://railway.app/dashboard');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 126,
      "content": "console.log('\\n2Ô∏è‚É£ SELECIONE O PROJETO DO BACKEND');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 128,
      "content": "console.log('\\n3Ô∏è‚É£ V√Å PARA VARIABLES:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 129,
      "content": "console.log('   - Clique na aba \"Variables\"');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 131,
      "content": "console.log('\\n4Ô∏è‚É£ CONFIGURE CORS_ORIGIN:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 132,
      "content": "console.log('   - Encontre ou crie a vari√°vel CORS_ORIGIN');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 133,
      "content": "console.log('   - Cole o valor abaixo:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 134,
      "content": "console.log(`   ${corsOrigin}`);",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 136,
      "content": "console.log('\\n5Ô∏è‚É£ SALVE E REDEPLOY:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 137,
      "content": "console.log('   - Clique em \"Save\"');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 138,
      "content": "console.log('   - V√° para \"Deployments\"');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 139,
      "content": "console.log('   - Clique em \"Deploy\"');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 141,
      "content": "console.log('\\n6Ô∏è‚É£ AGUARDE O DEPLOY:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 142,
      "content": "console.log('   - Monitore os logs');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 143,
      "content": "console.log('   - Aguarde status \"Success\"');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 145,
      "content": "console.log('\\nüß™ TESTE AP√ìS DEPLOY:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 146,
      "content": "console.log('-'.repeat(25));",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 147,
      "content": "console.log('1. Acesse: https://sistema-zara-frontend.vercel.app');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 148,
      "content": "console.log('2. Tente fazer login:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 149,
      "content": "console.log('   - Email: admin@zara.com');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 150,
      "content": "console.log('   - Senha: admin123');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 153,
      "content": "console.log('\\n‚ö†Ô∏è  ATEN√á√ÉO:');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 154,
      "content": "console.log('   Backend Railway retorna 404 - REDEPLOY NECESS√ÅRIO');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 156,
      "content": "console.log('\\n‚úÖ Backend Railway est√° respondendo');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 158,
      "content": "console.log('\\n‚ùå Backend Railway n√£o est√° acess√≠vel');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 161,
      "content": "console.log('\\n' + '=' .repeat(50));",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 162,
      "content": "console.log('‚úÖ CONFIGURA√á√ÉO CORS PRONTA PARA APLICAR');",
      "type": "log"
    },
    {
      "file": "update-cors-final.js",
      "line": 166,
      "content": "main().catch(console.error);",
      "type": "error"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 18,
      "content": "console.log('üîß ATUALIZANDO CONFIGURA√á√ÉO CORS DO RAILWAY');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 19,
      "content": "console.log('=' .repeat(60));",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 21,
      "content": "console.log('\\nüìã CORS ATUAL (informado):');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 22,
      "content": "console.log(CURRENT_CORS);",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 24,
      "content": "console.log('\\n‚úÖ CORS CORRETO (necess√°rio):');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 25,
      "content": "console.log(UPDATED_CORS);",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 27,
      "content": "console.log('\\nüîç AN√ÅLISE DAS URLs:');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 28,
      "content": "console.log('‚ùå URLs incorretas no CORS atual:');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 29,
      "content": "console.log('   - https://sistema-zara-frontend.vercel.app');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 30,
      "content": "console.log('   - https://sistema-zara-frontend-2wr5skeq2-05nblol-designs-projects.vercel.app');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 32,
      "content": "console.log('\\n‚úÖ URLs corretas que devem estar no CORS:');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 34,
      "content": "console.log(`   - ${url}`);",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 37,
      "content": "console.log('\\nüéØ PROBLEMA IDENTIFICADO:');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 38,
      "content": "console.log('O CORS est√° configurado com URLs antigas do frontend.');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 39,
      "content": "console.log('As URLs corretas do Vercel s√£o diferentes.');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 41,
      "content": "console.log('\\nüìù A√á√ïES NECESS√ÅRIAS NO RAILWAY DASHBOARD:');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 42,
      "content": "console.log('1. Acessar: https://railway.app/dashboard');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 43,
      "content": "console.log('2. Abrir projeto: ZaraOperacaoV1.01');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 44,
      "content": "console.log('3. Ir na aba: \"Variables\" ou \"Environment\"');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 45,
      "content": "console.log('4. Atualizar vari√°vel CORS_ORIGIN com o valor:');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 46,
      "content": "console.log(`   ${UPDATED_CORS}`);",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 47,
      "content": "console.log('5. Salvar as altera√ß√µes');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 48,
      "content": "console.log('6. Fazer redeploy da aplica√ß√£o');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 50,
      "content": "console.log('\\n‚öôÔ∏è VARI√ÅVEIS COMPLETAS PARA O RAILWAY:');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 51,
      "content": "console.log('DATABASE_URL: postgresql://postgres:GNquZiBhCMsFDZbvDTevPkrWFdRyyLQM@interchange.proxy.rlwy.net:17733/railway');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 52,
      "content": "console.log(`CORS_ORIGIN: ${UPDATED_CORS}`);",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 53,
      "content": "console.log('NODE_ENV: production');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 54,
      "content": "console.log('PORT: 3000');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 56,
      "content": "console.log('\\nüöÄ AP√ìS ATUALIZAR:');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 57,
      "content": "console.log('1. O frontend Vercel conseguir√° se conectar ao backend Railway');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 58,
      "content": "console.log('2. Os erros de CORS ser√£o resolvidos');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 59,
      "content": "console.log('3. O login funcionar√° corretamente');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 61,
      "content": "console.log('\\n‚è±Ô∏è TEMPO ESTIMADO: 2-3 minutos para atualizar e redeploy');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 64,
      "content": "console.log('\\nüß™ TESTANDO CONECTIVIDADE ATUAL:');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 67,
      "content": "console.log(`‚úÖ Backend Railway: ${response.status}`);",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 69,
      "content": "console.log(`‚ùå Backend Railway: ${error.response?.status || 'TIMEOUT'} - ${error.message}`);",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 70,
      "content": "console.log('   Confirma que redeploy √© necess√°rio ap√≥s atualizar CORS');",
      "type": "log"
    },
    {
      "file": "update-cors-railway-final.js",
      "line": 74,
      "content": "updateCorsConfiguration().catch(console.error);",
      "type": "error"
    },
    {
      "file": "update-user-passwords.js",
      "line": 7,
      "content": "console.log('üîê Atualizando senhas dos usu√°rios para \"123456\"...');",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 36,
      "content": "console.log(`‚úÖ Senha atualizada para ${updatedUser.name} (${updatedUser.role})`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 39,
      "content": "console.log(`‚ùå Erro ao atualizar ${userInfo.email}:`, error.message);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 43,
      "content": "console.log('\\nüß™ Testando login ap√≥s atualiza√ß√£o...');",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 50,
      "content": "console.log(`\\nüîë Testando login para ${userInfo.email}...`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 66,
      "content": "console.log(`‚úÖ Login bem-sucedido para ${userInfo.role}`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 80,
      "content": "console.log(`üì¨ ${notifications.length} notifica√ß√µes total, ${unreadCount} n√£o lidas`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 83,
      "content": "console.log('üìã Notifica√ß√µes encontradas:');",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 87,
      "content": "console.log(`   ${index + 1}. [${notif.type}] ${notif.title} - ${status}`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 88,
      "content": "console.log(`      ${notif.message}`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 89,
      "content": "console.log(`      Criada: ${createdAt}`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 96,
      "content": "console.log(`      M√°quina: ${metadata.machineName}`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 97,
      "content": "console.log(`      Status: ${metadata.previousStatus} ‚Üí ${metadata.status}`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 103,
      "content": "console.log('');",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 106,
      "content": "console.log('üì≠ Nenhuma notifica√ß√£o encontrada');",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 109,
      "content": "console.log(`‚ùå Erro ao buscar notifica√ß√µes: ${notifsData.message}`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 112,
      "content": "console.log(`‚ùå Falha no login: ${loginData.message}`);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 116,
      "content": "console.log(`‚ùå Erro ao testar login para ${userInfo.email}:`, error.message);",
      "type": "log"
    },
    {
      "file": "update-user-passwords.js",
      "line": 121,
      "content": "console.error('‚ùå Erro geral:', error);",
      "type": "error"
    }
  ],
  "errors": []
}
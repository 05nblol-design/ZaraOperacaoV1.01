#!/usr/bin/env node

/**
 * VALIDA√á√ÉO FINAL DA DATABASE_URL DO RAILWAY
 * 
 * Valida a URL correta fornecida pelo usu√°rio:
 * postgresql://postgres:GNquZiBhCMsFDZbvDTevPkrWFdRyyLQM@postgres.railway.internal:5432/railway
 */

console.log('üéØ VALIDA√á√ÉO FINAL DA DATABASE_URL DO RAILWAY\n');

// URL correta fornecida pelo usu√°rio
const correctUrl = 'postgresql://postgres:GNquZiBhCMsFDZbvDTevPkrWFdRyyLQM@postgres.railway.internal:5432/railway';

// Fun√ß√£o para validar URL completa
function validateUrl(url) {
    try {
        const testUrl = url.replace(/^postgresql:\/\//, 'http://');
        const parsed = new URL(testUrl);
        
        return {
            valid: true,
            protocol: url.startsWith('postgresql://') ? 'postgresql' : 'invalid',
            username: parsed.username,
            password: parsed.password,
            hostname: parsed.hostname,
            port: parsed.port,
            database: parsed.pathname.substring(1),
            fullUrl: url
        };
    } catch (error) {
        return {
            valid: false,
            error: error.message
        };
    }
}

// Validar a URL correta
console.log('‚úÖ URL CORRETA FORNECIDA:');
console.log(correctUrl);
console.log();

const validation = validateUrl(correctUrl);

if (validation.valid) {
    console.log('üìä COMPONENTES VALIDADOS:');
    console.log(`   Protocolo: ${validation.protocol} ‚úÖ`);
    console.log(`   Usu√°rio: ${validation.username} ‚úÖ`);
    console.log(`   Senha: ${validation.password ? '[PRESENTE]' : '[AUSENTE]'} ‚úÖ`);
    console.log(`   Host: ${validation.hostname} ‚úÖ`);
    console.log(`   Porta: ${validation.port} ‚úÖ`);
    console.log(`   Database: ${validation.database} ‚úÖ`);
    
    // Verifica√ß√µes espec√≠ficas
    const checks = [];
    
    if (validation.port === '5432') {
        checks.push('‚úÖ Porta padr√£o PostgreSQL (5432)');
    } else {
        checks.push(`‚ö†Ô∏è  Porta n√£o padr√£o: ${validation.port}`);
    }
    
    if (validation.hostname.includes('railway.internal')) {
        checks.push('‚úÖ Hostname interno do Railway');
    } else {
        checks.push(`‚ö†Ô∏è  Hostname n√£o √© do Railway: ${validation.hostname}`);
    }
    
    if (validation.username === 'postgres') {
        checks.push('‚úÖ Usu√°rio padr√£o PostgreSQL');
    }
    
    if (validation.database === 'railway') {
        checks.push('‚úÖ Database padr√£o do Railway');
    }
    
    console.log('\nüîç VERIFICA√á√ïES ESPEC√çFICAS:');
    checks.forEach(check => console.log(`   ${check}`));
    
} else {
    console.log('‚ùå ERRO NA VALIDA√á√ÉO:', validation.error);
}

// Comparar com vari√°vel de ambiente atual
const currentUrl = process.env.DATABASE_URL;
console.log('\nüîç COMPARA√á√ÉO COM AMBIENTE ATUAL:');

if (currentUrl) {
    console.log('Atual:', currentUrl);
    console.log('Correta:', correctUrl);
    
    if (currentUrl === correctUrl) {
        console.log('‚úÖ URLs s√£o ID√äNTICAS - Configura√ß√£o correta!');
    } else {
        console.log('‚ùå URLs s√£o DIFERENTES - Necess√°ria atualiza√ß√£o!');
    }
} else {
    console.log('‚ùå DATABASE_URL n√£o encontrada no ambiente atual');
    console.log('‚úÖ Necess√°rio configurar no Railway Dashboard');
}

// Instru√ß√µes de configura√ß√£o
console.log('\nüîß INSTRU√á√ïES DE CONFIGURA√á√ÉO:');
console.log('\n1. Acesse Railway Dashboard:');
console.log('   https://railway.app/dashboard');
console.log('\n2. No servi√ßo BACKEND (n√£o PostgreSQL):');
console.log('   ‚Ä¢ Clique no servi√ßo do backend');
console.log('   ‚Ä¢ V√° em "Variables"');
console.log('   ‚Ä¢ Adicione/edite DATABASE_URL');
console.log('   ‚Ä¢ Cole a URL correta (mostrada acima)');
console.log('   ‚Ä¢ Clique "Deploy"');

console.log('\n3. Aguarde redeploy (1-2 minutos)');

console.log('\nüß™ TESTE AP√ìS CONFIGURA√á√ÉO:');
console.log('curl https://seu-backend.railway.app/api/health');

console.log('\nüìã CREDENCIAIS PARA REFER√äNCIA:');
console.log('Usu√°rio: postgres');
console.log('Senha: GNquZiBhCMsFDZbvDTevPkrWFdRyyLQM');
console.log('Host: postgres.railway.internal');
console.log('Porta: 5432');
console.log('Database: railway');

console.log('\nüéØ RESULTADO ESPERADO:');
console.log('‚úÖ Erro "invalid port number" ser√° RESOLVIDO');
console.log('‚úÖ Conex√£o PostgreSQL ser√° ESTABELECIDA');
console.log('‚úÖ Aplica√ß√£o ficar√° OPERACIONAL');

console.log('\n‚è±Ô∏è  Tempo total estimado: 3-5 minutos');
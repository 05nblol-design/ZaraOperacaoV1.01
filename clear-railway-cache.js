#!/usr/bin/env node

/**
 * Script para limpar cache do Railway e for√ßar rebuild
 * 
 * Este script resolve o problema do Dockerfile com caracteres inv√°lidos
 * que podem estar em cache do Railway.
 */

const fs = require('fs');
const path = require('path');

console.log('üßπ LIMPEZA DE CACHE DO RAILWAY');
console.log('================================');

// 1. Verificar se existe algum arquivo tempor√°rio do Railway
const possibleCacheFiles = [
  '.railway',
  '.railway-cache',
  'railway-cache',
  '.dockerignore.railway',
  'Dockerfile.railway',
  'server/Dockerfile.railway'
];

console.log('\n1. Verificando arquivos de cache do Railway...');
possibleCacheFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚ùå Encontrado arquivo de cache: ${file}`);
    try {
      fs.unlinkSync(file);
      console.log(`‚úÖ Removido: ${file}`);
    } catch (error) {
      console.log(`‚ö†Ô∏è Erro ao remover ${file}: ${error.message}`);
    }
  } else {
    console.log(`‚úÖ OK: ${file} n√£o existe`);
  }
});

// 2. Verificar conte√∫do do Dockerfile principal
console.log('\n2. Verificando Dockerfile principal...');
const dockerfilePath = path.join(__dirname, 'Dockerfile');
if (fs.existsSync(dockerfilePath)) {
  const content = fs.readFileSync(dockerfilePath, 'utf8');
  
  // Verificar se cont√©m caracteres inv√°lidos
  const invalidChars = ['>>>', '<<<', '===', '|||'];
  let hasInvalidChars = false;
  
  invalidChars.forEach(char => {
    if (content.includes(char)) {
      console.log(`‚ùå ERRO: Dockerfile cont√©m caracteres inv√°lidos: ${char}`);
      hasInvalidChars = true;
    }
  });
  
  if (!hasInvalidChars) {
    console.log('‚úÖ Dockerfile principal est√° limpo');
  }
  
  // Verificar se npm ci est√° dentro de RUN
  const lines = content.split('\n');
  lines.forEach((line, index) => {
    if (line.trim().startsWith('npm ci') && !line.trim().startsWith('RUN')) {
      console.log(`‚ùå ERRO: Linha ${index + 1} - npm ci fora de instru√ß√£o RUN: ${line.trim()}`);
      hasInvalidChars = true;
    }
  });
  
  if (hasInvalidChars) {
    console.log('\n‚ùå DOCKERFILE CONT√âM ERROS - PRECISA SER CORRIGIDO');
    process.exit(1);
  }
} else {
  console.log('‚ùå Dockerfile principal n√£o encontrado!');
  process.exit(1);
}

// 3. Verificar railway.json
console.log('\n3. Verificando configura√ß√£o do Railway...');
const railwayJsonPath = path.join(__dirname, 'server', 'railway.json');
if (fs.existsSync(railwayJsonPath)) {
  const railwayConfig = JSON.parse(fs.readFileSync(railwayJsonPath, 'utf8'));
  
  if (railwayConfig.build && railwayConfig.build.dockerfilePath === '../Dockerfile') {
    console.log('‚úÖ railway.json aponta para Dockerfile correto');
  } else {
    console.log('‚ùå railway.json n√£o est√° configurado corretamente');
    console.log('   Esperado: dockerfilePath = "../Dockerfile"');
    console.log('   Atual:', railwayConfig.build?.dockerfilePath || 'n√£o definido');
  }
} else {
  console.log('‚ö†Ô∏è railway.json n√£o encontrado');
}

// 4. Criar arquivo de for√ßa de rebuild
console.log('\n4. Criando arquivo de for√ßa de rebuild...');
const forceRebuildPath = path.join(__dirname, '.railway-force-rebuild');
fs.writeFileSync(forceRebuildPath, `# For√ßa rebuild do Railway\n# Criado em: ${new Date().toISOString()}\n# Motivo: Limpar cache de Dockerfile inv√°lido\n`);
console.log('‚úÖ Arquivo .railway-force-rebuild criado');

// 5. Instru√ß√µes finais
console.log('\nüéØ PR√ìXIMOS PASSOS:');
console.log('==================');
console.log('1. Fa√ßa commit das mudan√ßas:');
console.log('   git add .');
console.log('   git commit -m "fix: Limpar cache do Railway e for√ßar rebuild"');
console.log('   git push origin main');
console.log('');
console.log('2. No Railway Dashboard:');
console.log('   - V√° para o projeto');
console.log('   - Clique em "Deploy" > "Redeploy"');
console.log('   - Ou force um novo deploy');
console.log('');
console.log('3. Se o erro persistir:');
console.log('   - Desconecte o reposit√≥rio do Railway');
console.log('   - Reconecte o reposit√≥rio');
console.log('   - Isso for√ßa o Railway a recriar todo o cache');
console.log('');
console.log('‚úÖ Cache limpo com sucesso!');
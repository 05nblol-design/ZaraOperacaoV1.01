# Render Blueprint para Sistema ZARA
# Documentação: https://render.com/docs/blueprint-spec

services:
  # Backend API
  - type: web
    name: zara-backend
    env: node
    region: oregon
    plan: starter
    buildCommand: |
      cd server &&
      npm ci &&
      npx prisma generate &&
      npm run build
    startCommand: |
      cd server &&
      npx prisma db push &&
      npm start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromDatabase:
          name: zara-postgres
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_EXPIRES_IN
        value: 7d
      - key: CORS_ORIGIN
        fromService:
          type: web
          name: zara-frontend
          property: host
      - key: UPLOAD_MAX_SIZE
        value: 10485760
      - key: UPLOAD_ALLOWED_TYPES
        value: "image/jpeg,image/png,image/gif,image/webp,application/pdf"
      - key: UPLOAD_DIR
        value: "./uploads"
      - key: EMAIL_HOST
        sync: false
      - key: EMAIL_PORT
        value: 587
      - key: EMAIL_SECURE
        value: false
      - key: EMAIL_USER
        sync: false
      - key: EMAIL_PASS
        sync: false
      - key: EMAIL_FROM
        sync: false
      - key: REDIS_URL
        fromService:
          type: redis
          name: zara-redis
          property: connectionString
      - key: FIREBASE_PROJECT_ID
        sync: false
      - key: FIREBASE_PRIVATE_KEY
        sync: false
      - key: FIREBASE_CLIENT_EMAIL
        sync: false
      - key: SENTRY_DSN
        sync: false
      - key: LOG_LEVEL
        value: info
      - key: LOG_FILE
        value: "logs/app.log"
      - key: RATE_LIMIT_WINDOW_MS
        value: 900000
      - key: RATE_LIMIT_MAX_REQUESTS
        value: 100
      - key: SESSION_SECRET
        generateValue: true
      - key: TRUST_PROXY
        value: true
      - key: SECURE_COOKIES
        value: true
      - key: APP_NAME
        value: "Sistema ZARA"
      - key: APP_VERSION
        value: "1.0.1"
      - key: APP_URL
        fromService:
          type: web
          name: zara-frontend
          property: host
    disk:
      name: zara-uploads
      mountPath: /opt/render/project/src/server/uploads
      sizeGB: 1

  # Frontend (Static Site)
  - type: web
    name: zara-frontend
    env: static
    region: oregon
    buildCommand: |
      cd frontend &&
      npm ci &&
      npm run build
    staticPublishPath: ./frontend/dist
    pullRequestPreviewsEnabled: false
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: X-XSS-Protection
        value: "1; mode=block"
      - path: /*
        name: Referrer-Policy
        value: strict-origin-when-cross-origin
      - path: /*
        name: Permissions-Policy
        value: "camera=(), microphone=(), geolocation=()"
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - key: VITE_API_URL
        fromService:
          type: web
          name: zara-backend
          envVarKey: RENDER_EXTERNAL_URL
        value: "/api"
      - key: VITE_SOCKET_URL
        fromService:
          type: web
          name: zara-backend
          envVarKey: RENDER_EXTERNAL_URL
      - key: VITE_APP_NAME
        value: "Sistema ZARA"
      - key: VITE_APP_VERSION
        value: "1.0.1"
      - key: NODE_ENV
        value: production
      - key: VITE_BUILD_MODE
        value: production

# Banco de dados PostgreSQL
databases:
  - name: zara-postgres
    databaseName: zara_production
    user: zara_user
    region: oregon
    plan: starter
    postgresMajorVersion: 15

# Redis para cache (opcional)
  - name: zara-redis
    region: oregon
    plan: starter
    maxmemoryPolicy: allkeys-lru